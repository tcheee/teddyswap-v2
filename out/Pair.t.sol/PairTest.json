{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBurn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBurnUnbalanced",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testBurnUnbalancedDifferentUsers",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintBootstrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintUnbalanced",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintWhenTheresLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b5061769a806200002e6000396000f3fe60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c806397754ae9116200010d578063be30cb7211620000a3578063d82555f1116200007a578063d82555f114620003c6578063e13aba4814620003dd578063e9a79a7b14620003e7578063fa7626d414620003fe57600080fd5b8063be30cb72146200038e578063c88a5e6d1462000398578063d06d822914620003af57600080fd5b8063b528f8d511620000e4578063b528f8d51462000348578063b9c071b41462000352578063ba414fa61462000369578063bc5759fa146200038457600080fd5b806397754ae914620003035780639a8325a0146200031a578063af9bbe5f146200033157600080fd5b80632d6c17a311620001835780635a6c1eed116200015a5780635a6c1eed14620002a55780636bce989b14620002cb5780636f59707514620002e257806386ebc88a14620002f957600080fd5b80632d6c17a314620002605780633a76846314620002775780633bf82db1146200028e57600080fd5b80630a9254e414620001d15780630c379e9e14620001dd578063108554f214620001e7578063233240ee14620001fe57806329a9e300146200021557806329ce9dde146200022c575b600080fd5b620001db6200040c565b005b620001db6200077d565b620001db620001f836600462004348565b62000a11565b620001db6200020f36600462004375565b62000aea565b620001db620002263660046200439a565b62000bc6565b620002436200023d366004620044ad565b62000c78565b6040516001600160a01b0390911681526020015b60405180910390f35b620001db620002713660046200452d565b62000d31565b620002436000805160206200762583398151915281565b620001db6200029f36600462004547565b62000d71565b620002bc620002b636600462004588565b62000e53565b60405190815260200162000257565b620001db620002dc36600462004547565b62000f5b565b620001db620002f336600462004375565b62000f6f565b620001db62001019565b620001db62000314366004620045c4565b6200176b565b620002436200032b3660046200461a565b620019ac565b620001db6200034236600462004547565b62001a41565b620001db62001aef565b620001db620003633660046200452d565b62001ef9565b6200037362001f1a565b604051901515815260200162000257565b620001db6200204b565b620001db62002424565b620001db620003a936600462004348565b620028c7565b620001db620003c03660046200439a565b620028fd565b620001db620003d736600462004547565b620029af565b620001db62002a60565b620001db620003f836600462004348565b62002d07565b600054620003739060ff1681565b6040516200041a90620042c8565b604051809103906000f08015801562000437573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516200046690620042d6565b604080825260079082015266546f6b656e204160c81b606082015260806020820181905260049082015263544b4e4160e01b60a082015260c001604051809103906000f080158015620004bd573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604051620004ec90620042d6565b6040808252600790820152662a37b5b2b7102160c91b6060820152608060208201819052600490820152632a25a72160e11b60a082015260c001604051809103906000f08015801562000543573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039283169081179091556008546040519216916200057790620042e4565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620005ab573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283161790556008546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201529116906394bf804d90604401600060405180830381600087803b1580156200061357600080fd5b505af115801562000628573d6000803e3d6000fd5b50506009546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201526001600160a01b0390911692506394bf804d9150604401600060405180830381600087803b1580156200068057600080fd5b505af115801562000695573d6000803e3d6000fd5b5050600854600b546040516394bf804d60e01b8152678ac7230489e8000060048201526001600160a01b039182166024820152911692506394bf804d9150604401600060405180830381600087803b158015620006f157600080fd5b505af115801562000706573d6000803e3d6000fd5b5050600954600b546040516394bf804d60e01b8152678ac7230489e8000060048201526001600160a01b039182166024820152911692506394bf804d9150604401600060405180830381600087803b1580156200076257600080fd5b505af115801562000777573d6000803e3d6000fd5b50505050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620007bd92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620007dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000803919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200084492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562000864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200088a919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008dc57600080fd5b505af1158015620008f1573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200097993506001600160a01b0390911691506370a08231906024015b602060405180830381865afa15801562000944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096a919062004694565b670de0b6b3a763fc1862002dad565b6200098d670de0b6b3a76400008062002edc565b600a54604080516318160ddd60e01b8152905162000a0f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a00919062004694565b670de0b6b3a764000062002dad565b565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000a4790859085906004016200465b565b600060405180830381600087803b15801562000a6257600080fd5b505af115801562000a77573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200762583398151915292506306447d5691506024015b600060405180830381600087803b15801562000acd57600080fd5b505af115801562000ae2573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000b24908490600160801b906004016200465b565b600060405180830381600087803b15801562000b3f57600080fd5b505af115801562000b54573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007625833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000baa57600080fd5b505af115801562000bbf573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000c00908590600160801b906004016200465b565b600060405180830381600087803b15801562000c1b57600080fd5b505af115801562000c30573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200762583398151915292506347e50cce915060440162000ab2565b604051638d1cc92560e01b815260009081906000805160206200762583398151915290638d1cc9259062000cb19087906004016200470b565b6000604051808303816000875af115801562000cd1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cfb919081019062004720565b8360405160200162000d0f929190620047a0565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206200762583398151915263e5d6bf0262000d528342620047e9565b6040518263ffffffff1660e01b815260040162000b8f91815260200190565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000da790869085906004016200465b565b600060405180830381600087803b15801562000dc257600080fd5b505af115801562000dd7573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200762583398151915292506345b5607891506044015b600060405180830381600087803b15801562000e3557600080fd5b505af115801562000e4a573d6000803e3d6000fd5b50505050505050565b60008183111562000e9f5760405162461bcd60e51b815260206004820152601160248201527026a0ac2fa622a9a9afaa2420a72fa6a4a760791b60448201526064015b60405180910390fd5b600062000ead8484620047e9565b90508060000362000ec15783915062000efe565b801962000ed15784915062000efe565b62000edc8162004803565b9050600062000eec82876200481f565b905062000efa818662004842565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000f6a83838360006200176b565b505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000fa9908490600160801b906004016200465b565b600060405180830381600087803b15801562000fc457600080fd5b505af115801562000fd9573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200762583398151915292506306447d56915060240162000b8f565b600b54600a5460085460095460405163704dc4d560e11b81526001600160a01b039384166004820152918316602483015282166044820152670de0b6b3a764000060648201819052608482015291169063e09b89aa9060a401600060405180830381600087803b1580156200108d57600080fd5b505af1158015620010a2573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200112393506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620010f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200111b919062004694565b600062002dad565b600a54600b546040516370a0823160e01b81526001600160a01b0391821660048201526200115f9291909116906370a082319060240162000926565b600a54604080516318160ddd60e01b81529051620011ac926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620011ec92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af11580156200120c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001232919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200127392911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012b9919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200130b57600080fd5b505af115801562001320573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200137557600080fd5b505af11580156200138a573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620013c493506001600160a01b0390911691506370a0823190602401620010d7565b620013e06714d1120d7b160000670de0b6b3a764000062002edc565b600a54604080516318160ddd60e01b815290516200142d926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b6008546040516370a0823160e01b8152306004820152620014ae916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001479573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200149f919062004694565b6783d6c7aab636000062002dad565b6009546040516370a0823160e01b81523060048201526200152f916001600160a01b0316906370a0823190602401602060405180830381865afa158015620014fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001520919062004694565b678ac7230489e8000062002dad565b600b54600a54604051639d67ac3760e01b81526001600160a01b039182166004820152911690639d67ac3790602401600060405180830381600087803b1580156200157957600080fd5b505af11580156200158e573d6000803e3d6000fd5b5050600a54600b546040516370a0823160e01b81526001600160a01b039182166004820152620015cc9450911691506370a0823190602401620010d7565b620015dc6105dc6103e862002edc565b600a54604080516318160ddd60e01b8152905162001658926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200164f919062004694565b6103e862002dad565b600854600b546040516370a0823160e01b81526001600160a01b039182166004820152620016e19291909116906370a0823190602401602060405180830381865afa158015620016ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016d2919062004694565b6791b77e5e5d99fa2462002dad565b600954600b546040516370a0823160e01b81526001600160a01b03918216600482015262000a0f9291909116906370a08231906024015b602060405180830381865afa15801562001736573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200175c919062004694565b678ac7230489e7fc1862002dad565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620017c1916200485d565b6000604051808303816000865af19150503d806000811462001800576040519150601f19603f3d011682016040523d82523d6000602084013e62001805565b606091505b5091505060008180602001905181019062001821919062004694565b905062001893846200188c87620018636370a0823160e01b6200184660018d62002ff2565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062003017565b821562000ae25760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620018de91906200485d565b6000604051808303816000865af19150503d80600081146200191d576040519150601f19603f3d011682016040523d82523d6000602084013e62001922565b606091505b509150506000818060200190518101906200193e919062004694565b9050828610156200196957620019558684620047e9565b620019619082620047e9565b905062001984565b620019758387620047e9565b62001981908262004842565b90505b620019a2816200188c6318160ddd60e01b6200184660018d62002ff2565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200762583398151915290638d1cc92590620019e59086906004016200470b565b6000604051808303816000875af115801562001a05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001a2f919081019062004720565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062001a7790869085906004016200465b565b600060405180830381600087803b15801562001a9257600080fd5b505af115801562001aa7573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200762583398151915292506347e50cce915060440162000e1a565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001b2f92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001b4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b75919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001bb692911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001bd6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bfc919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c4e57600080fd5b505af115801562001c63573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb935062001ca89290911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af115801562001cc8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cee919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001d2f92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af115801562001d4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d75919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001dc757600080fd5b505af115801562001ddc573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262001e6393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001e2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e54919062004694565b6729a2241af62bfc1862002dad565b600a54604080516318160ddd60e01b8152905162001ee5926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001eb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ed6919062004694565b6729a2241af62c000062002dad565b62000a0f6729a2241af62c00008062002edc565b6000805160206200762583398151915263e5d6bf0262000d52834262004842565b60008054610100900460ff161562001f3b5750600054610100900460ff1690565b6000600080516020620076258339815191523b15620020465760405160009060008051602062007625833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001fa89083906519985a5b195960d21b906020016200465b565b60408051601f198184030181529082905262001fc892916020016200487b565b60408051601f198184030181529082905262001fe4916200485d565b6000604051808303816000865af19150503d806000811462002023576040519150601f19603f3d011682016040523d82523d6000602084013e62002028565b606091505b509150508080602001905181019062002042919062004674565b9150505b919050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200208b92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620020ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020d1919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200211292911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002132573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002158919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620021aa57600080fd5b505af1158015620021bf573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620021f993506001600160a01b0390911691506370a082319060240162000926565b6200220d670de0b6b3a76400008062002edc565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200224d92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af11580156200226d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002293919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620022d492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620022f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200231a919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200236c57600080fd5b505af115801562002381573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200240893506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620023d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023f9919062004694565b671bc16d674ec7fc1862002dad565b62000a0f6729a2241af62c0000671bc16d674ec8000062002edc565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200246492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002484573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024aa919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620024eb92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af11580156200250b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002531919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200258357600080fd5b505af115801562002598573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620025dd9290911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af1158015620025fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002623919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200266492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002684573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026aa919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620026fc57600080fd5b505af115801562002711573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200276657600080fd5b505af11580156200277b573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620027b593506001600160a01b0390911691506370a0823190602401620010d7565b620027c56105dc6103e862002edc565b600a54604080516318160ddd60e01b8152905162002812926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b6008546040516370a0823160e01b815230600482015262002893916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200285e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002884919062004694565b678ac7230489e7fa2462002dad565b6009546040516370a0823160e01b815230600482015262000a0f916001600160a01b0316906370a082319060240162001718565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000ab290859085906004016200465b565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062002937908590600160801b906004016200465b565b600060405180830381600087803b1580156200295257600080fd5b505af115801562002967573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200762583398151915292506345b56078915060440162000ab2565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a60405162002a35906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000f6a816200188c84620018636370a0823160e01b6200184660018a62002ff2565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262002aa092911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002ac0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ae6919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262002b2792911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002b47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b6d919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002bbf57600080fd5b505af115801562002bd4573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002c2957600080fd5b505af115801562002c3e573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262002c7893506001600160a01b0390911691506370a0823190602401620010d7565b62002c866103e88062002edc565b600a54604080516318160ddd60e01b8152905162002cd3926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b6008546040516370a0823160e01b815230600482015262002893916001600160a01b0316906370a082319060240162001718565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062002d3d90859085906004016200465b565b600060405180830381600087803b15801562002d5857600080fd5b505af115801562002d6d573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007625833981519152925063ca669fa7915060240162000ab2565b80821462002ed8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002e209060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162002ed862003023565b5050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801562002f33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f599190620048c6565b509150915062002fa8826001600160701b0316856001600160701b0316604051806040016040528060138152602001720756e657870656374656420726573657276653606c1b81525062003127565b62000777816001600160701b0316846001600160701b031660405180604001604052806013815260200172756e657870656374656420726573657276653160681b81525062003127565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002ed8828262003174565b600080516020620076258339815191523b15620031165760405160009060008051602062007625833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620030919083906519985a5b195960d21b906001906020016200491c565b60408051601f1981840301815290829052620030b192916020016200487b565b60408051601f1981840301815290829052620030cd916200485d565b6000604051808303816000865af19150503d80600081146200310c576040519150601f19603f3d011682016040523d82523d6000602084013e62003111565b606091505b505050505b6000805461ff001916610100179055565b81831462000f6a577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200316091906200493d565b60405180910390a162000f6a838362002dad565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620031e757602002820191906000526020600020905b815481526020019060010190808311620031d2575b50505050509050600083620031fc83620034dd565b6040516020016200320f9291906200487b565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620032639186918891016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200329e576200329c8762003591565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620032df9187918991016200496e565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516200332691906200485d565b600060405180830381855afa9150503d806000811462003363576040519150601f19603f3d011682016040523d82523d6000602084013e62003368565b606091505b509150620033859050816200337f886020620049aa565b6200423e565b604051630667f9d760e41b815290925060009150600080516020620076258339815191529063667f9d7090620033c2908b9087906004016200465b565b6020604051808303816000875af1158015620033e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003408919062004694565b90508082146200342c5760405162461bcd60e51b815260040162000e9690620049cc565b6040516370ca10bb60e01b815260008051602062007625833981519152906370ca10bb9062003464908b9087908e906004016200491c565b600060405180830381600087803b1580156200347f57600080fd5b505af115801562003494573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620034c960028b016000620042f2565b896004016000905550505050505050505050565b6060600082516020620034f19190620049aa565b67ffffffffffffffff8111156200350c576200350c620043d2565b6040519080825280601f01601f19166020018201604052801562003537576020820181803683370190505b50905060005b83518110156200358a5760008482815181106200355e576200355e62004a42565b602002602001015190508082602002602001840152508080620035819062004803565b9150506200353d565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200360357602002820191906000526020600020905b815481526020019060010190808311620035ee575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200364f925085918791016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620036ee576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620036be9185918791016200496e565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620036fc83620034dd565b6040516020016200370f9291906200487b565b60405160208183030381529060405290506000805160206200764583398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200376e57600080fd5b505af115801562003783573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620037a491906200485d565b600060405180830381855afa9150503d8060008114620037e1576040519150601f19603f3d011682016040523d82523d6000602084013e620037e6565b606091505b509150620037fd9050816200337f876020620049aa565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007625833981519152906365bc9481906024016000604051808303816000875af11580156200385a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003884919081019062004ae1565b509050805160010362003b4d5760006000805160206200764583398151915260001c6001600160a01b031663667f9d708984600081518110620038cb57620038cb62004a42565b60200260200101516040518363ffffffff1660e01b8152600401620038f29291906200465b565b6020604051808303816000875af115801562003912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003938919062004694565b9050806200399c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003978576200397862004a42565b602002602001015160001c604051620039939291906200465b565b60405180910390a15b808314620039be5760405162461bcd60e51b815260040162000e9690620049cc565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620039f69291906200496e565b604051602081830303815290604052805190602001208560008151811062003a225762003a2262004a42565b602002602001015160001c60405162003a3f949392919062004b42565b60405180910390a18160008151811062003a5d5762003a5d62004a42565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003aa8918a918c91016200496e565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003b12918a918c91016200496e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620040ee565b6001815111156200409a5760005b8151811015620040935760006000805160206200764583398151915260001c6001600160a01b031663667f9d708a85858151811062003b9e5762003b9e62004a42565b60200260200101516040518363ffffffff1660e01b815260040162003bc59291906200465b565b6020604051808303816000875af115801562003be5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c0b919062004694565b90508062003c6e577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003c4a5762003c4a62004a42565b602002602001015160001c60405162003c659291906200465b565b60405180910390a15b6000805160206200764583398151915260001c6001600160a01b03166370ca10bb8a85858151811062003ca55762003ca562004a42565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162003cd3939291906200491c565b600060405180830381600087803b15801562003cee57600080fd5b505af115801562003d03573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003d2591906200485d565b600060405180830381855afa9150503d806000811462003d62576040519150601f19603f3d011682016040523d82523d6000602084013e62003d67565b606091505b50909250905062003d7f816200337f8b6020620049aa565b955081801562003d93575061133760f01b86145b1562003fe6577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162003dd19291906200496e565b6040516020818303038152906040528051906020012088888151811062003dfc5762003dfc62004a42565b602002602001015160001c60405162003e19949392919062004b42565b60405180910390a184848151811062003e365762003e3662004a42565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003e81918d918f91016200496e565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162003f0e9291906200496e565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200764583398151915260001c6001600160a01b03166370ca10bb8c87878151811062003f805762003f8062004a42565b6020026020010151866040518463ffffffff1660e01b815260040162003fa9939291906200491c565b600060405180830381600087803b15801562003fc457600080fd5b505af115801562003fd9573d6000803e3d6000fd5b5050505050505062004093565b6000805160206200764583398151915260001c6001600160a01b03166370ca10bb8c8787815181106200401d576200401d62004a42565b6020026020010151866040518463ffffffff1660e01b815260040162004046939291906200491c565b600060405180830381600087803b1580156200406157600080fd5b505af115801562004076573d6000803e3d6000fd5b5050505050505080806200408a9062004803565b91505062003b5b565b50620040ee565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b606482015260840162000e96565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620041329188918a91016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620041945760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b604482015260640162000e96565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620041c560028a016000620042f2565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200420b9188918a91016200496e565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200425557845162004258565b60205b905060005b81811015620042be5762004273816008620049aa565b8662004280838862004842565b8151811062004293576200429362004a42565b01602001516001600160f81b031916901c929092179180620042b58162004803565b9150506200425d565b5090949350505050565b6103068062004b7383390190565b610f7b8062004e7983390190565b6118318062005df483390190565b508054600082559060005260206000209081019062004312919062004315565b50565b5b808211156200432c576000815560010162004316565b5090565b80356001600160a01b03811681146200204657600080fd5b600080604083850312156200435c57600080fd5b620043678362004330565b946020939093013593505050565b6000602082840312156200438857600080fd5b620043938262004330565b9392505050565b60008060408385031215620043ae57600080fd5b620043b98362004330565b9150620043c96020840162004330565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620044145762004414620043d2565b604052919050565b600067ffffffffffffffff821115620044395762004439620043d2565b50601f01601f191660200190565b60006200445e62004458846200441c565b620043e8565b90508281528383830111156200447357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200449c57600080fd5b620043938383356020850162004447565b60008060408385031215620044c157600080fd5b823567ffffffffffffffff80821115620044da57600080fd5b620044e8868387016200448a565b93506020850135915080821115620044ff57600080fd5b508301601f810185136200451257600080fd5b620045238582356020840162004447565b9150509250929050565b6000602082840312156200454057600080fd5b5035919050565b6000806000606084860312156200455d57600080fd5b620045688462004330565b9250620045786020850162004330565b9150604084013590509250925092565b6000806000606084860312156200459e57600080fd5b505081359360208301359350604090920135919050565b80151581146200431257600080fd5b60008060008060808587031215620045db57600080fd5b620045e68562004330565b9350620045f66020860162004330565b92506040850135915060608501356200460f81620045b5565b939692955090935050565b6000602082840312156200462d57600080fd5b813567ffffffffffffffff8111156200464557600080fd5b62004653848285016200448a565b949350505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200468757600080fd5b81516200439381620045b5565b600060208284031215620046a757600080fd5b5051919050565b60005b83811015620046cb578181015183820152602001620046b1565b83811115620007775750506000910152565b60008151808452620046f7816020860160208601620046ae565b601f01601f19169290920160200192915050565b602081526000620043936020830184620046dd565b6000602082840312156200473357600080fd5b815167ffffffffffffffff8111156200474b57600080fd5b8201601f810184136200475d57600080fd5b80516200476e62004458826200441c565b8181528560208385010111156200478457600080fd5b62004797826020830160208601620046ae565b95945050505050565b60008351620047b4818460208801620046ae565b835190830190620047ca818360208801620046ae565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620047fe57620047fe620047d3565b500390565b600060018201620048185762004818620047d3565b5060010190565b6000826200483d57634e487b7160e01b600052601260045260246000fd5b500690565b60008219821115620048585762004858620047d3565b500190565b6000825162004871818460208701620046ae565b9190910192915050565b6001600160e01b0319831681528151600090620048a0816004850160208701620046ae565b919091016004019392505050565b80516001600160701b03811681146200204657600080fd5b600080600060608486031215620048dc57600080fd5b620048e784620048ae565b9250620048f760208501620048ae565b9150604084015163ffffffff811681146200491157600080fd5b809150509250925092565b6001600160a01b039390931683526020830191909152604082015260600190565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620043936080830184620046dd565b825160009082906020808701845b838110156200499a578151855293820193908201906001016200497c565b5050948252509092019392505050565b6000816000190483118215151615620049c757620049c7620047d3565b500290565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262004a6a57600080fd5b8151602067ffffffffffffffff82111562004a895762004a89620043d2565b8160051b62004a9a828201620043e8565b928352848101820192828101908785111562004ab557600080fd5b83870192505b8483101562004ad65782518252918301919083019062004abb565b979650505050505050565b6000806040838503121562004af557600080fd5b825167ffffffffffffffff8082111562004b0e57600080fd5b62004b1c8683870162004a58565b9350602085015191508082111562004b3357600080fd5b50620045238582860162004a58565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b506102e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639d67ac371461003b578063e09b89aa14610050575b600080fd5b61004e610049366004610217565b610063565b005b61004e61005e366004610239565b6100b9565b806001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561009e57600080fd5b505af11580156100b2573d6000803e3d6000fd5b5050505050565b60405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015610108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012c919061028e565b5060405163a9059cbb60e01b81526001600160a01b0386811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a0919061028e565b50846001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101dc57600080fd5b505af11580156101f0573d6000803e3d6000fd5b505050505050505050565b80356001600160a01b038116811461021257600080fd5b919050565b60006020828403121561022957600080fd5b610232826101fb565b9392505050565b600080600080600060a0868803121561025157600080fd5b61025a866101fb565b9450610268602087016101fb565b9350610276604087016101fb565b94979396509394606081013594506080013592915050565b6000602082840312156102a057600080fd5b8151801515811461023257600080fdfea2646970667358221220bae594b007778c5f6256bc69df3fd54ffac6303c758e5fd46b9ba0e37169e1c264736f6c634300080d003360e06040523480156200001157600080fd5b5060405162000f7b38038062000f7b83398101604081905262000034916200029a565b8181601282600090805190602001906200005092919062000127565b5081516200006690600190602085019062000127565b5060ff81166080524660a0526200007c6200008b565b60c05250620003e39350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf919062000340565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001359062000304565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b60008060408385031215620002ae57600080fd5b82516001600160401b0380821115620002c657600080fd5b620002d486838701620001e3565b93506020850151915080821115620002eb57600080fd5b50620002fa85828601620001e3565b9150509250929050565b600181811c908216806200031957607f821691505b6020821081036200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200035d57607f831692505b602080841082036200037d57634e487b7160e01b86526022600452602486fd5b818015620003945760018114620003a657620003d5565b60ff19861689528489019650620003d5565b60008a81526020902060005b86811015620003cd5781548b820152908501908301620003b2565b505084890196505b509498975050505050505050565b60805160a05160c051610b686200041360003960006104530152600061041e015260006101440152610b686000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101d5578063a9059cbb146101dd578063d505accf146101f0578063dd62ed3e1461020357600080fd5b806370a08231146101805780637ecebe00146101a057806394bf804d146101c057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633644e51514610178575b600080fd5b6100dc61022e565b6040516100e99190610856565b60405180910390f35b6101056101003660046108c7565b6102bc565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046108f1565b610328565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61011e61041a565b61011e61018e36600461092d565b60036020526000908152604090205481565b61011e6101ae36600461092d565b60056020526000908152604090205481565b6101d36101ce36600461094f565b610475565b005b6100dc610483565b6101056101eb3660046108c7565b610490565b6101d36101fe36600461097b565b610508565b61011e6102113660046109ee565b600460209081526000928352604080842090915290825290205481565b6000805461023b90610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610a18565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103179086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103845761035f8382610a68565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103ac908490610a68565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104079087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104505761044b610751565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61047f81836107eb565b5050565b6001805461023b90610a18565b336000908152600360205260408120805483919083906104b1908490610a68565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103179086815260200190565b4284101561055d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161056961041a565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ab5750876001600160a01b0316816001600160a01b0316145b6106e85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610554565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107839190610a7f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107fd9190610b1a565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561088357858101830151858201604001528201610867565b81811115610895576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108c257600080fd5b919050565b600080604083850312156108da57600080fd5b6108e3836108ab565b946020939093013593505050565b60008060006060848603121561090657600080fd5b61090f846108ab565b925061091d602085016108ab565b9150604084013590509250925092565b60006020828403121561093f57600080fd5b610948826108ab565b9392505050565b6000806040838503121561096257600080fd5b82359150610972602084016108ab565b90509250929050565b600080600080600080600060e0888a03121561099657600080fd5b61099f886108ab565b96506109ad602089016108ab565b95506040880135945060608801359350608088013560ff811681146109d157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a0157600080fd5b610a0a836108ab565b9150610972602084016108ab565b600181811c90821680610a2c57607f821691505b602082108103610a4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a7a57610a7a610a52565b500390565b600080835481600182811c915080831680610a9b57607f831692505b60208084108203610aba57634e487b7160e01b86526022600452602486fd5b818015610ace5760018114610adf57610b0c565b60ff19861689528489019650610b0c565b60008a81526020902060005b86811015610b045781548b820152908501908301610aeb565b505084890196505b509498975050505050505050565b60008219821115610b2d57610b2d610a52565b50019056fea26469706673582212208107c83fe54392e1cf62e853d5bc41248a95eadf74bbdc5ada4ec046d33d9e4964736f6c634300080d003360e06040523480156200001157600080fd5b506040516200183138038062001831833981016040819052620000349162000252565b604080518082018252600c81526b2a32b2323cab19102830b4b960a11b6020808301918252835180850190945260078452662a22a2222cab1960c91b9084015281519192916012916200008b91600091906200018f565b508151620000a19060019060208501906200018f565b5060ff81166080524660a052620000b7620000f3565b60c0525050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000369565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001279190620002c6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200019d906200028a565b90600052602060002090601f016020900481019282620001c157600085556200020c565b82601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b5b808211156200021a57600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b600080604083850312156200026657600080fd5b620002718362000235565b9150620002816020840162000235565b90509250929050565b600181811c908216806200029f57607f821691505b602082108103620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002e357607f831692505b602080841082036200030357634e487b7160e01b86526022600452602486fd5b8180156200031a57600181146200032c576200035b565b60ff198616895284890196506200035b565b60008a81526020902060005b86811015620003535781548b82015290850190830162000338565b505084890196505b509498975050505050505050565b60805160a05160c05161149862000399600039600061073b01526000610706015260006101f201526114986000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806344df8e70116100a2578063a9059cbb11610071578063a9059cbb1461027e578063d21220a714610291578063d505accf146102a4578063dd62ed3e146102b7578063fff6cae9146102e257600080fd5b806344df8e701461022e57806370a08231146102365780637ecebe001461025657806395d89b411461027657600080fd5b80631249c58b116100e95780631249c58b146101b957806318160ddd146101c357806323b872dd146101da578063313ce567146101ed5780633644e5151461022657600080fd5b806306fdde031461011b5780630902f1ac14610139578063095ea7b31461016b5780630dfe16811461018e575b600080fd5b6101236102ea565b6040516101309190611125565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152600090820152606001610130565b61017e61017936600461116f565b610378565b6040519015158152602001610130565b6006546101a1906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6101c16103e4565b005b6101cc60025481565b604051908152602001610130565b61017e6101e8366004611199565b610622565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610130565b6101cc610702565b6101c161075d565b6101cc6102443660046111d5565b60036020526000908152604090205481565b6101cc6102643660046111d5565b60056020526000908152604090205481565b610123610a16565b61017e61028c36600461116f565b610a23565b6007546101a1906001600160a01b031681565b6101c16102b23660046111f0565b610a89565b6101cc6102c5366004611263565b600460209081526000928352604080842090915290825290205481565b6101c1610cd2565b600080546102f790611296565b80601f016020809104026020016040519081016040528092919081815260200182805461032390611296565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103d39086815260200190565b60405180910390a350600192915050565b60085460009081906001600160701b0380821691600160701b9004166006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047791906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af11580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906112ca565b905060006105026001600160701b038616846112f9565b905060006105196001600160701b038616846112f9565b9050600060025460000361055a576103e861053c6105378486611310565b610db7565b61054691906112f9565b905061055560006103e8610e27565b6105a9565b6105a6876001600160701b0316600254856105759190611310565b61057f919061132f565b876001600160701b0316600254856105979190611310565b6105a1919061132f565b610e81565b90505b600081116105ca57604051633489be7560e21b815260040160405180910390fd5b6105d43382610e27565b6105de8585610e99565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461067e5761065983826112f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906106a69084906112f9565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611443833981519152906106ef9087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461073857610733610f0a565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016020604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906112ca565b33600090815260036020526040812054600254929350916108618584611310565b61086b919061132f565b90506000600254848461087e9190611310565b610888919061132f565b9050811580610895575080155b156108b35760405163749383ad60e01b815260040160405180910390fd5b6108bd3384610fa4565b6006546108d4906001600160a01b03163384611006565b6007546108eb906001600160a01b03163383611006565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095991906112ca565b6007546040516370a0823160e01b81523060048201529196506001600160a01b0316906370a08231906024016020604051808303816000875af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906112ca565b93506109d48585610e99565b604080518381526020810183905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a25050505050565b600180546102f790611296565b33600090815260036020526040812080548391908390610a449084906112f9565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611443833981519152906103d39086815260200190565b42841015610ade5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610aea610702565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bf6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c2c5750876001600160a01b0316816001600160a01b0316145b610c695760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610ad5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546040516370a0823160e01b8152306004820152610db5916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906112ca565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db091906112ca565b610e99565b565b60006003821115610e185750806000610dd160028361132f565b610ddc906001611351565b90505b81811015610e1257905080600281610df7818661132f565b610e019190611351565b610e0b919061132f565b9050610ddf565b50919050565b8115610e22575060015b919050565b8060026000828254610e399190611351565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061144383398151915291015b60405180910390a35050565b6000818310610e905781610e92565b825b9392505050565b600880546001600160701b03838116600160701b9081026001600160e01b0319909316868316179290921792839055604080518483168152929093041660208201527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610f3c9190611369565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821660009081526003602052604081208054839290610fcc9084906112f9565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061144383398151915290602001610e75565b6040516001600160a01b03838116602483015260448201839052600091829186169060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b179052516110609190611404565b6000604051808303816000865af19150503d806000811461109d576040519150601f19603f3d011682016040523d82523d6000602084013e6110a2565b606091505b50915091508115806110d057508051158015906110d05750808060200190518101906110ce9190611420565b155b156110ee576040516312171d8360e31b815260040160405180910390fd5b5050505050565b60005b838110156111105781810151838201526020016110f8565b8381111561111f576000848401525b50505050565b60208152600082518060208401526111448160408501602087016110f5565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e2257600080fd5b6000806040838503121561118257600080fd5b61118b83611158565b946020939093013593505050565b6000806000606084860312156111ae57600080fd5b6111b784611158565b92506111c560208501611158565b9150604084013590509250925092565b6000602082840312156111e757600080fd5b610e9282611158565b600080600080600080600060e0888a03121561120b57600080fd5b61121488611158565b965061122260208901611158565b95506040880135945060608801359350608088013560ff8116811461124657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561127657600080fd5b61127f83611158565b915061128d60208401611158565b90509250929050565b600181811c908216806112aa57607f821691505b602082108103610e1257634e487b7160e01b600052602260045260246000fd5b6000602082840312156112dc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561130b5761130b6112e3565b500390565b600081600019048311821515161561132a5761132a6112e3565b500290565b60008261134c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611364576113646112e3565b500190565b600080835481600182811c91508083168061138557607f831692505b602080841082036113a457634e487b7160e01b86526022600452602486fd5b8180156113b857600181146113c9576113f6565b60ff198616895284890196506113f6565b60008a81526020902060005b868110156113ee5781548b8201529085019083016113d5565b505084890196505b509498975050505050505050565b600082516114168184602087016110f5565b9190910192915050565b60006020828403121561143257600080fd5b81518015158114610e9257600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edf94d782f2799a9a1b29abaed0ced6d6f53fb18f8f347020a1ea0a0ff73ab6164736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122019c07fd97a25edc415c9a49497c1f1c36263e8e49121b3c2af8b6d92fc16bbc364736f6c634300080d0033",
    "sourceMap": "162:4544:9:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;162:4544:9;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001cc5760003560e01c806397754ae9116200010d578063be30cb7211620000a3578063d82555f1116200007a578063d82555f114620003c6578063e13aba4814620003dd578063e9a79a7b14620003e7578063fa7626d414620003fe57600080fd5b8063be30cb72146200038e578063c88a5e6d1462000398578063d06d822914620003af57600080fd5b8063b528f8d511620000e4578063b528f8d51462000348578063b9c071b41462000352578063ba414fa61462000369578063bc5759fa146200038457600080fd5b806397754ae914620003035780639a8325a0146200031a578063af9bbe5f146200033157600080fd5b80632d6c17a311620001835780635a6c1eed116200015a5780635a6c1eed14620002a55780636bce989b14620002cb5780636f59707514620002e257806386ebc88a14620002f957600080fd5b80632d6c17a314620002605780633a76846314620002775780633bf82db1146200028e57600080fd5b80630a9254e414620001d15780630c379e9e14620001dd578063108554f214620001e7578063233240ee14620001fe57806329a9e300146200021557806329ce9dde146200022c575b600080fd5b620001db6200040c565b005b620001db6200077d565b620001db620001f836600462004348565b62000a11565b620001db6200020f36600462004375565b62000aea565b620001db620002263660046200439a565b62000bc6565b620002436200023d366004620044ad565b62000c78565b6040516001600160a01b0390911681526020015b60405180910390f35b620001db620002713660046200452d565b62000d31565b620002436000805160206200762583398151915281565b620001db6200029f36600462004547565b62000d71565b620002bc620002b636600462004588565b62000e53565b60405190815260200162000257565b620001db620002dc36600462004547565b62000f5b565b620001db620002f336600462004375565b62000f6f565b620001db62001019565b620001db62000314366004620045c4565b6200176b565b620002436200032b3660046200461a565b620019ac565b620001db6200034236600462004547565b62001a41565b620001db62001aef565b620001db620003633660046200452d565b62001ef9565b6200037362001f1a565b604051901515815260200162000257565b620001db6200204b565b620001db62002424565b620001db620003a936600462004348565b620028c7565b620001db620003c03660046200439a565b620028fd565b620001db620003d736600462004547565b620029af565b620001db62002a60565b620001db620003f836600462004348565b62002d07565b600054620003739060ff1681565b6040516200041a90620042c8565b604051809103906000f08015801562000437573d6000803e3d6000fd5b50600b80546001600160a01b0319166001600160a01b03929092169190911790556040516200046690620042d6565b604080825260079082015266546f6b656e204160c81b606082015260806020820181905260049082015263544b4e4160e01b60a082015260c001604051809103906000f080158015620004bd573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b0392909216919091179055604051620004ec90620042d6565b6040808252600790820152662a37b5b2b7102160c91b6060820152608060208201819052600490820152632a25a72160e11b60a082015260c001604051809103906000f08015801562000543573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b039283169081179091556008546040519216916200057790620042e4565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620005ab573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283161790556008546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201529116906394bf804d90604401600060405180830381600087803b1580156200061357600080fd5b505af115801562000628573d6000803e3d6000fd5b50506009546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201526001600160a01b0390911692506394bf804d9150604401600060405180830381600087803b1580156200068057600080fd5b505af115801562000695573d6000803e3d6000fd5b5050600854600b546040516394bf804d60e01b8152678ac7230489e8000060048201526001600160a01b039182166024820152911692506394bf804d9150604401600060405180830381600087803b158015620006f157600080fd5b505af115801562000706573d6000803e3d6000fd5b5050600954600b546040516394bf804d60e01b8152678ac7230489e8000060048201526001600160a01b039182166024820152911692506394bf804d9150604401600060405180830381600087803b1580156200076257600080fd5b505af115801562000777573d6000803e3d6000fd5b50505050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620007bd92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620007dd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000803919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200084492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562000864573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200088a919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620008dc57600080fd5b505af1158015620008f1573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200097993506001600160a01b0390911691506370a08231906024015b602060405180830381865afa15801562000944573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200096a919062004694565b670de0b6b3a763fc1862002dad565b6200098d670de0b6b3a76400008062002edc565b600a54604080516318160ddd60e01b8152905162000a0f926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000a00919062004694565b670de0b6b3a764000062002dad565b565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000a4790859085906004016200465b565b600060405180830381600087803b15801562000a6257600080fd5b505af115801562000a77573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03851660048201526000805160206200762583398151915292506306447d5691506024015b600060405180830381600087803b15801562000acd57600080fd5b505af115801562000ae2573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000b24908490600160801b906004016200465b565b600060405180830381600087803b15801562000b3f57600080fd5b505af115801562000b54573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038416600482015260008051602062007625833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000baa57600080fd5b505af115801562000bbf573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000c00908590600160801b906004016200465b565b600060405180830381600087803b15801562000c1b57600080fd5b505af115801562000c30573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038086166004830152841660248201526000805160206200762583398151915292506347e50cce915060440162000ab2565b604051638d1cc92560e01b815260009081906000805160206200762583398151915290638d1cc9259062000cb19087906004016200470b565b6000604051808303816000875af115801562000cd1573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000cfb919081019062004720565b8360405160200162000d0f929190620047a0565b60405160208183030381529060405290508051602082016000f0949350505050565b6000805160206200762583398151915263e5d6bf0262000d528342620047e9565b6040518263ffffffff1660e01b815260040162000b8f91815260200190565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000da790869085906004016200465b565b600060405180830381600087803b15801562000dc257600080fd5b505af115801562000dd7573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038087166004830152851660248201526000805160206200762583398151915292506345b5607891506044015b600060405180830381600087803b15801562000e3557600080fd5b505af115801562000e4a573d6000803e3d6000fd5b50505050505050565b60008183111562000e9f5760405162461bcd60e51b815260206004820152601160248201527026a0ac2fa622a9a9afaa2420a72fa6a4a760791b60448201526064015b60405180910390fd5b600062000ead8484620047e9565b90508060000362000ec15783915062000efe565b801962000ed15784915062000efe565b62000edc8162004803565b9050600062000eec82876200481f565b905062000efa818662004842565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000f6a83838360006200176b565b505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000fa9908490600160801b906004016200465b565b600060405180830381600087803b15801562000fc457600080fd5b505af115801562000fd9573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b03841660048201526000805160206200762583398151915292506306447d56915060240162000b8f565b600b54600a5460085460095460405163704dc4d560e11b81526001600160a01b039384166004820152918316602483015282166044820152670de0b6b3a764000060648201819052608482015291169063e09b89aa9060a401600060405180830381600087803b1580156200108d57600080fd5b505af1158015620010a2573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200112393506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620010f5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200111b919062004694565b600062002dad565b600a54600b546040516370a0823160e01b81526001600160a01b0391821660048201526200115f9291909116906370a082319060240162000926565b600a54604080516318160ddd60e01b81529051620011ac926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620011ec92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af11580156200120c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001232919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200127392911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001293573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620012b9919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200130b57600080fd5b505af115801562001320573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200137557600080fd5b505af11580156200138a573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620013c493506001600160a01b0390911691506370a0823190602401620010d7565b620013e06714d1120d7b160000670de0b6b3a764000062002edc565b600a54604080516318160ddd60e01b815290516200142d926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620009da573d6000803e3d6000fd5b6008546040516370a0823160e01b8152306004820152620014ae916001600160a01b0316906370a0823190602401602060405180830381865afa15801562001479573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200149f919062004694565b6783d6c7aab636000062002dad565b6009546040516370a0823160e01b81523060048201526200152f916001600160a01b0316906370a0823190602401602060405180830381865afa158015620014fa573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001520919062004694565b678ac7230489e8000062002dad565b600b54600a54604051639d67ac3760e01b81526001600160a01b039182166004820152911690639d67ac3790602401600060405180830381600087803b1580156200157957600080fd5b505af11580156200158e573d6000803e3d6000fd5b5050600a54600b546040516370a0823160e01b81526001600160a01b039182166004820152620015cc9450911691506370a0823190602401620010d7565b620015dc6105dc6103e862002edc565b600a54604080516318160ddd60e01b8152905162001658926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200164f919062004694565b6103e862002dad565b600854600b546040516370a0823160e01b81526001600160a01b039182166004820152620016e19291909116906370a0823190602401602060405180830381865afa158015620016ac573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620016d2919062004694565b6791b77e5e5d99fa2462002dad565b600954600b546040516370a0823160e01b81526001600160a01b03918216600482015262000a0f9291909116906370a08231906024015b602060405180830381865afa15801562001736573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200175c919062004694565b678ac7230489e7fc1862002dad565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b1790529151600092871691620017c1916200485d565b6000604051808303816000865af19150503d806000811462001800576040519150601f19603f3d011682016040523d82523d6000602084013e62001805565b606091505b5091505060008180602001905181019062001821919062004694565b905062001893846200188c87620018636370a0823160e01b6200184660018d62002ff2565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062003017565b821562000ae25760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b03891691620018de91906200485d565b6000604051808303816000865af19150503d80600081146200191d576040519150601f19603f3d011682016040523d82523d6000602084013e62001922565b606091505b509150506000818060200190518101906200193e919062004694565b9050828610156200196957620019558684620047e9565b620019619082620047e9565b905062001984565b620019758387620047e9565b62001981908262004842565b90505b620019a2816200188c6318160ddd60e01b6200184660018d62002ff2565b5050505050505050565b604051638d1cc92560e01b815260009081906000805160206200762583398151915290638d1cc92590620019e59086906004016200470b565b6000604051808303816000875af115801562001a05573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262001a2f919081019062004720565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062001a7790869085906004016200465b565b600060405180830381600087803b15801562001a9257600080fd5b505af115801562001aa7573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b038087166004830152851660248201526000805160206200762583398151915292506347e50cce915060440162000e1a565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001b2f92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001b4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b75919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001bb692911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562001bd6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001bfc919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001c4e57600080fd5b505af115801562001c63573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb935062001ca89290911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af115801562001cc8573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001cee919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262001d2f92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af115801562001d4f573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001d75919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001dc757600080fd5b505af115801562001ddc573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262001e6393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001e2e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001e54919062004694565b6729a2241af62bfc1862002dad565b600a54604080516318160ddd60e01b8152905162001ee5926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001eb0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001ed6919062004694565b6729a2241af62c000062002dad565b62000a0f6729a2241af62c00008062002edc565b6000805160206200762583398151915263e5d6bf0262000d52834262004842565b60008054610100900460ff161562001f3b5750600054610100900460ff1690565b6000600080516020620076258339815191523b15620020465760405160009060008051602062007625833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc49062001fa89083906519985a5b195960d21b906020016200465b565b60408051601f198184030181529082905262001fc892916020016200487b565b60408051601f198184030181529082905262001fe4916200485d565b6000604051808303816000865af19150503d806000811462002023576040519150601f19603f3d011682016040523d82523d6000602084013e62002028565b606091505b509150508080602001905181019062002042919062004674565b9150505b919050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200208b92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620020ab573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620020d1919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200211292911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002132573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002158919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620021aa57600080fd5b505af1158015620021bf573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620021f993506001600160a01b0390911691506370a082319060240162000926565b6200220d670de0b6b3a76400008062002edc565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200224d92911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af11580156200226d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002293919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620022d492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af1158015620022f4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200231a919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200236c57600080fd5b505af115801562002381573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200240893506001600160a01b0390911691506370a0823190602401602060405180830381865afa158015620023d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023f9919062004694565b671bc16d674ec7fc1862002dad565b62000a0f6729a2241af62c0000671bc16d674ec8000062002edc565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200246492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002484573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620024aa919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620024eb92911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af11580156200250b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002531919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200258357600080fd5b505af115801562002598573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620025dd9290911690671bc16d674ec80000906004016200465b565b6020604051808303816000875af1158015620025fd573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002623919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200266492911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002684573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620026aa919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620026fc57600080fd5b505af115801562002711573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200276657600080fd5b505af11580156200277b573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620027b593506001600160a01b0390911691506370a0823190602401620010d7565b620027c56105dc6103e862002edc565b600a54604080516318160ddd60e01b8152905162002812926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b6008546040516370a0823160e01b815230600482015262002893916001600160a01b0316906370a0823190602401602060405180830381865afa1580156200285e573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002884919062004694565b678ac7230489e7fa2462002dad565b6009546040516370a0823160e01b815230600482015262000a0f916001600160a01b0316906370a082319060240162001718565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062000ab290859085906004016200465b565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062002937908590600160801b906004016200465b565b600060405180830381600087803b1580156200295257600080fd5b505af115801562002967573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b038086166004830152841660248201526000805160206200762583398151915292506345b56078915060440162000ab2565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a60405162002a35906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000f6a816200188c84620018636370a0823160e01b6200184660018a62002ff2565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262002aa092911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002ac0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002ae6919062004674565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb9262002b2792911690670de0b6b3a7640000906004016200465b565b6020604051808303816000875af115801562002b47573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002b6d919062004674565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002bbf57600080fd5b505af115801562002bd4573d6000803e3d6000fd5b50505050600a60009054906101000a90046001600160a01b03166001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562002c2957600080fd5b505af115801562002c3e573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262002c7893506001600160a01b0390911691506370a0823190602401620010d7565b62002c866103e88062002edc565b600a54604080516318160ddd60e01b8152905162002cd3926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562001629573d6000803e3d6000fd5b6008546040516370a0823160e01b815230600482015262002893916001600160a01b0316906370a082319060240162001718565b60405163c88a5e6d60e01b8152600080516020620076258339815191529063c88a5e6d9062002d3d90859085906004016200465b565b600060405180830381600087803b15801562002d5857600080fd5b505af115801562002d6d573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b038516600482015260008051602062007625833981519152925063ca669fa7915060240162000ab2565b80821462002ed8577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162002e209060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162002ed862003023565b5050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801562002f33573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002f599190620048c6565b509150915062002fa8826001600160701b0316856001600160701b0316604051806040016040528060138152602001720756e657870656374656420726573657276653606c1b81525062003127565b62000777816001600160701b0316846001600160701b031660405180604001604052806013815260200172756e657870656374656420726573657276653160681b81525062003127565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62002ed8828262003174565b600080516020620076258339815191523b15620031165760405160009060008051602062007625833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620030919083906519985a5b195960d21b906001906020016200491c565b60408051601f1981840301815290829052620030b192916020016200487b565b60408051601f1981840301815290829052620030cd916200485d565b6000604051808303816000865af19150503d80600081146200310c576040519150601f19603f3d011682016040523d82523d6000602084013e62003111565b606091505b505050505b6000805461ff001916610100179055565b81831462000f6a577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf3583816040516200316091906200493d565b60405180910390a162000f6a838362002dad565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620031e757602002820191906000526020600020905b815481526020019060010190808311620031d2575b50505050509050600083620031fc83620034dd565b6040516020016200320f9291906200487b565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a168352815292812091945090929091620032639186918891016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200329e576200329c8762003591565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620032df9187918991016200496e565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b0316846040516200332691906200485d565b600060405180830381855afa9150503d806000811462003363576040519150601f19603f3d011682016040523d82523d6000602084013e62003368565b606091505b509150620033859050816200337f886020620049aa565b6200423e565b604051630667f9d760e41b815290925060009150600080516020620076258339815191529063667f9d7090620033c2908b9087906004016200465b565b6020604051808303816000875af1158015620033e2573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003408919062004694565b90508082146200342c5760405162461bcd60e51b815260040162000e9690620049cc565b6040516370ca10bb60e01b815260008051602062007625833981519152906370ca10bb9062003464908b9087908e906004016200491c565b600060405180830381600087803b1580156200347f57600080fd5b505af115801562003494573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff19169055620034c960028b016000620042f2565b896004016000905550505050505050505050565b6060600082516020620034f19190620049aa565b67ffffffffffffffff8111156200350c576200350c620043d2565b6040519080825280601f01601f19166020018201604052801562003537576020820181803683370190505b50905060005b83518110156200358a5760008482815181106200355e576200355e62004a42565b602002602001015190508082602002602001840152508080620035819062004803565b9150506200353d565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b9493879391929091908301828280156200360357602002820191906000526020600020905b815481526020019060010190808311620035ee575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051959650949193506200364f925085918791016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620036ee576001600160a01b0384166000908152602087815260408083206001600160e01b03198716845282528083209051909291620036be9185918791016200496e565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620036fc83620034dd565b6040516020016200370f9291906200487b565b60405160208183030381529060405290506000805160206200764583398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200376e57600080fd5b505af115801562003783573d6000803e3d6000fd5b50505050600080866001600160a01b031683604051620037a491906200485d565b600060405180830381855afa9150503d8060008114620037e1576040519150601f19603f3d011682016040523d82523d6000602084013e620037e6565b606091505b509150620037fd9050816200337f876020620049aa565b6040516365bc948160e01b81526001600160a01b03891660048201529092506000915060008051602062007625833981519152906365bc9481906024016000604051808303816000875af11580156200385a573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262003884919081019062004ae1565b509050805160010362003b4d5760006000805160206200764583398151915260001c6001600160a01b031663667f9d708984600081518110620038cb57620038cb62004a42565b60200260200101516040518363ffffffff1660e01b8152600401620038f29291906200465b565b6020604051808303816000875af115801562003912573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003938919062004694565b9050806200399c577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a5888360008151811062003978576200397862004a42565b602002602001015160001c604051620039939291906200465b565b60405180910390a15b808314620039be5760405162461bcd60e51b815260040162000e9690620049cc565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620039f69291906200496e565b604051602081830303815290604052805190602001208560008151811062003a225762003a2262004a42565b602002602001015160001c60405162003a3f949392919062004b42565b60405180910390a18160008151811062003a5d5762003a5d62004a42565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262003aa8918a918c91016200496e565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162003b12918a918c91016200496e565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620040ee565b6001815111156200409a5760005b8151811015620040935760006000805160206200764583398151915260001c6001600160a01b031663667f9d708a85858151811062003b9e5762003b9e62004a42565b60200260200101516040518363ffffffff1660e01b815260040162003bc59291906200465b565b6020604051808303816000875af115801562003be5573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062003c0b919062004694565b90508062003c6e577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062003c4a5762003c4a62004a42565b602002602001015160001c60405162003c659291906200465b565b60405180910390a15b6000805160206200764583398151915260001c6001600160a01b03166370ca10bb8a85858151811062003ca55762003ca562004a42565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162003cd3939291906200491c565b600060405180830381600087803b15801562003cee57600080fd5b505af115801562003d03573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162003d2591906200485d565b600060405180830381855afa9150503d806000811462003d62576040519150601f19603f3d011682016040523d82523d6000602084013e62003d67565b606091505b50909250905062003d7f816200337f8b6020620049aa565b955081801562003d93575061133760f01b86145b1562003fe6577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162003dd19291906200496e565b6040516020818303038152906040528051906020012088888151811062003dfc5762003dfc62004a42565b602002602001015160001c60405162003e19949392919062004b42565b60405180910390a184848151811062003e365762003e3662004a42565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262003e81918d918f91016200496e565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162003f0e9291906200496e565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff0219169083151502179055506000805160206200764583398151915260001c6001600160a01b03166370ca10bb8c87878151811062003f805762003f8062004a42565b6020026020010151866040518463ffffffff1660e01b815260040162003fa9939291906200491c565b600060405180830381600087803b15801562003fc457600080fd5b505af115801562003fd9573d6000803e3d6000fd5b5050505050505062004093565b6000805160206200764583398151915260001c6001600160a01b03166370ca10bb8c8787815181106200401d576200401d62004a42565b6020026020010151866040518463ffffffff1660e01b815260040162004046939291906200491c565b600060405180830381600087803b1580156200406157600080fd5b505af115801562004076573d6000803e3d6000fd5b5050505050505080806200408a9062004803565b91505062003b5b565b50620040ee565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b606482015260840162000e96565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620041329188918a91016200496e565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620041945760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b604482015260640162000e96565b6005890180546001600160a01b031916905560038901805463ffffffff19169055620041c560028a016000620042f2565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a168452825280832090519092916200420b9188918a91016200496e565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200425557845162004258565b60205b905060005b81811015620042be5762004273816008620049aa565b8662004280838862004842565b8151811062004293576200429362004a42565b01602001516001600160f81b031916901c929092179180620042b58162004803565b9150506200425d565b5090949350505050565b6103068062004b7383390190565b610f7b8062004e7983390190565b6118318062005df483390190565b508054600082559060005260206000209081019062004312919062004315565b50565b5b808211156200432c576000815560010162004316565b5090565b80356001600160a01b03811681146200204657600080fd5b600080604083850312156200435c57600080fd5b620043678362004330565b946020939093013593505050565b6000602082840312156200438857600080fd5b620043938262004330565b9392505050565b60008060408385031215620043ae57600080fd5b620043b98362004330565b9150620043c96020840162004330565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620044145762004414620043d2565b604052919050565b600067ffffffffffffffff821115620044395762004439620043d2565b50601f01601f191660200190565b60006200445e62004458846200441c565b620043e8565b90508281528383830111156200447357600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200449c57600080fd5b620043938383356020850162004447565b60008060408385031215620044c157600080fd5b823567ffffffffffffffff80821115620044da57600080fd5b620044e8868387016200448a565b93506020850135915080821115620044ff57600080fd5b508301601f810185136200451257600080fd5b620045238582356020840162004447565b9150509250929050565b6000602082840312156200454057600080fd5b5035919050565b6000806000606084860312156200455d57600080fd5b620045688462004330565b9250620045786020850162004330565b9150604084013590509250925092565b6000806000606084860312156200459e57600080fd5b505081359360208301359350604090920135919050565b80151581146200431257600080fd5b60008060008060808587031215620045db57600080fd5b620045e68562004330565b9350620045f66020860162004330565b92506040850135915060608501356200460f81620045b5565b939692955090935050565b6000602082840312156200462d57600080fd5b813567ffffffffffffffff8111156200464557600080fd5b62004653848285016200448a565b949350505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200468757600080fd5b81516200439381620045b5565b600060208284031215620046a757600080fd5b5051919050565b60005b83811015620046cb578181015183820152602001620046b1565b83811115620007775750506000910152565b60008151808452620046f7816020860160208601620046ae565b601f01601f19169290920160200192915050565b602081526000620043936020830184620046dd565b6000602082840312156200473357600080fd5b815167ffffffffffffffff8111156200474b57600080fd5b8201601f810184136200475d57600080fd5b80516200476e62004458826200441c565b8181528560208385010111156200478457600080fd5b62004797826020830160208601620046ae565b95945050505050565b60008351620047b4818460208801620046ae565b835190830190620047ca818360208801620046ae565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620047fe57620047fe620047d3565b500390565b600060018201620048185762004818620047d3565b5060010190565b6000826200483d57634e487b7160e01b600052601260045260246000fd5b500690565b60008219821115620048585762004858620047d3565b500190565b6000825162004871818460208701620046ae565b9190910192915050565b6001600160e01b0319831681528151600090620048a0816004850160208701620046ae565b919091016004019392505050565b80516001600160701b03811681146200204657600080fd5b600080600060608486031215620048dc57600080fd5b620048e784620048ae565b9250620048f760208501620048ae565b9150604084015163ffffffff811681146200491157600080fd5b809150509250925092565b6001600160a01b039390931683526020830191909152604082015260600190565b60408152600560408201526422b93937b960d91b6060820152608060208201526000620043936080830184620046dd565b825160009082906020808701845b838110156200499a578151855293820193908201906001016200497c565b5050948252509092019392505050565b6000816000190483118215151615620049c757620049c7620047d3565b500290565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262004a6a57600080fd5b8151602067ffffffffffffffff82111562004a895762004a89620043d2565b8160051b62004a9a828201620043e8565b928352848101820192828101908785111562004ab557600080fd5b83870192505b8483101562004ad65782518252918301919083019062004abb565b979650505050505050565b6000806040838503121562004af557600080fd5b825167ffffffffffffffff8082111562004b0e57600080fd5b62004b1c8683870162004a58565b9350602085015191508082111562004b3357600080fd5b50620045238582860162004a58565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe608060405234801561001057600080fd5b506102e6806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80639d67ac371461003b578063e09b89aa14610050575b600080fd5b61004e610049366004610217565b610063565b005b61004e61005e366004610239565b6100b9565b806001600160a01b03166344df8e706040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561009e57600080fd5b505af11580156100b2573d6000803e3d6000fd5b5050505050565b60405163a9059cbb60e01b81526001600160a01b0386811660048301526024820184905285169063a9059cbb906044016020604051808303816000875af1158015610108573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012c919061028e565b5060405163a9059cbb60e01b81526001600160a01b0386811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af115801561017c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101a0919061028e565b50846001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156101dc57600080fd5b505af11580156101f0573d6000803e3d6000fd5b505050505050505050565b80356001600160a01b038116811461021257600080fd5b919050565b60006020828403121561022957600080fd5b610232826101fb565b9392505050565b600080600080600060a0868803121561025157600080fd5b61025a866101fb565b9450610268602087016101fb565b9350610276604087016101fb565b94979396509394606081013594506080013592915050565b6000602082840312156102a057600080fd5b8151801515811461023257600080fdfea2646970667358221220bae594b007778c5f6256bc69df3fd54ffac6303c758e5fd46b9ba0e37169e1c264736f6c634300080d003360e06040523480156200001157600080fd5b5060405162000f7b38038062000f7b83398101604081905262000034916200029a565b8181601282600090805190602001906200005092919062000127565b5081516200006690600190602085019062000127565b5060ff81166080524660a0526200007c6200008b565b60c05250620003e39350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf919062000340565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001359062000304565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b60008060408385031215620002ae57600080fd5b82516001600160401b0380821115620002c657600080fd5b620002d486838701620001e3565b93506020850151915080821115620002eb57600080fd5b50620002fa85828601620001e3565b9150509250929050565b600181811c908216806200031957607f821691505b6020821081036200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200035d57607f831692505b602080841082036200037d57634e487b7160e01b86526022600452602486fd5b818015620003945760018114620003a657620003d5565b60ff19861689528489019650620003d5565b60008a81526020902060005b86811015620003cd5781548b820152908501908301620003b2565b505084890196505b509498975050505050505050565b60805160a05160c051610b686200041360003960006104530152600061041e015260006101440152610b686000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101d5578063a9059cbb146101dd578063d505accf146101f0578063dd62ed3e1461020357600080fd5b806370a08231146101805780637ecebe00146101a057806394bf804d146101c057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633644e51514610178575b600080fd5b6100dc61022e565b6040516100e99190610856565b60405180910390f35b6101056101003660046108c7565b6102bc565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046108f1565b610328565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61011e61041a565b61011e61018e36600461092d565b60036020526000908152604090205481565b61011e6101ae36600461092d565b60056020526000908152604090205481565b6101d36101ce36600461094f565b610475565b005b6100dc610483565b6101056101eb3660046108c7565b610490565b6101d36101fe36600461097b565b610508565b61011e6102113660046109ee565b600460209081526000928352604080842090915290825290205481565b6000805461023b90610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610a18565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103179086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103845761035f8382610a68565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103ac908490610a68565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104079087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104505761044b610751565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61047f81836107eb565b5050565b6001805461023b90610a18565b336000908152600360205260408120805483919083906104b1908490610a68565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103179086815260200190565b4284101561055d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161056961041a565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ab5750876001600160a01b0316816001600160a01b0316145b6106e85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610554565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107839190610a7f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107fd9190610b1a565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561088357858101830151858201604001528201610867565b81811115610895576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108c257600080fd5b919050565b600080604083850312156108da57600080fd5b6108e3836108ab565b946020939093013593505050565b60008060006060848603121561090657600080fd5b61090f846108ab565b925061091d602085016108ab565b9150604084013590509250925092565b60006020828403121561093f57600080fd5b610948826108ab565b9392505050565b6000806040838503121561096257600080fd5b82359150610972602084016108ab565b90509250929050565b600080600080600080600060e0888a03121561099657600080fd5b61099f886108ab565b96506109ad602089016108ab565b95506040880135945060608801359350608088013560ff811681146109d157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a0157600080fd5b610a0a836108ab565b9150610972602084016108ab565b600181811c90821680610a2c57607f821691505b602082108103610a4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a7a57610a7a610a52565b500390565b600080835481600182811c915080831680610a9b57607f831692505b60208084108203610aba57634e487b7160e01b86526022600452602486fd5b818015610ace5760018114610adf57610b0c565b60ff19861689528489019650610b0c565b60008a81526020902060005b86811015610b045781548b820152908501908301610aeb565b505084890196505b509498975050505050505050565b60008219821115610b2d57610b2d610a52565b50019056fea26469706673582212208107c83fe54392e1cf62e853d5bc41248a95eadf74bbdc5ada4ec046d33d9e4964736f6c634300080d003360e06040523480156200001157600080fd5b506040516200183138038062001831833981016040819052620000349162000252565b604080518082018252600c81526b2a32b2323cab19102830b4b960a11b6020808301918252835180850190945260078452662a22a2222cab1960c91b9084015281519192916012916200008b91600091906200018f565b508151620000a19060019060208501906200018f565b5060ff81166080524660a052620000b7620000f3565b60c0525050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000369565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001279190620002c6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200019d906200028a565b90600052602060002090601f016020900481019282620001c157600085556200020c565b82601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b5b808211156200021a57600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b600080604083850312156200026657600080fd5b620002718362000235565b9150620002816020840162000235565b90509250929050565b600181811c908216806200029f57607f821691505b602082108103620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002e357607f831692505b602080841082036200030357634e487b7160e01b86526022600452602486fd5b8180156200031a57600181146200032c576200035b565b60ff198616895284890196506200035b565b60008a81526020902060005b86811015620003535781548b82015290850190830162000338565b505084890196505b509498975050505050505050565b60805160a05160c05161149862000399600039600061073b01526000610706015260006101f201526114986000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806344df8e70116100a2578063a9059cbb11610071578063a9059cbb1461027e578063d21220a714610291578063d505accf146102a4578063dd62ed3e146102b7578063fff6cae9146102e257600080fd5b806344df8e701461022e57806370a08231146102365780637ecebe001461025657806395d89b411461027657600080fd5b80631249c58b116100e95780631249c58b146101b957806318160ddd146101c357806323b872dd146101da578063313ce567146101ed5780633644e5151461022657600080fd5b806306fdde031461011b5780630902f1ac14610139578063095ea7b31461016b5780630dfe16811461018e575b600080fd5b6101236102ea565b6040516101309190611125565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152600090820152606001610130565b61017e61017936600461116f565b610378565b6040519015158152602001610130565b6006546101a1906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6101c16103e4565b005b6101cc60025481565b604051908152602001610130565b61017e6101e8366004611199565b610622565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610130565b6101cc610702565b6101c161075d565b6101cc6102443660046111d5565b60036020526000908152604090205481565b6101cc6102643660046111d5565b60056020526000908152604090205481565b610123610a16565b61017e61028c36600461116f565b610a23565b6007546101a1906001600160a01b031681565b6101c16102b23660046111f0565b610a89565b6101cc6102c5366004611263565b600460209081526000928352604080842090915290825290205481565b6101c1610cd2565b600080546102f790611296565b80601f016020809104026020016040519081016040528092919081815260200182805461032390611296565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103d39086815260200190565b60405180910390a350600192915050565b60085460009081906001600160701b0380821691600160701b9004166006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047791906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af11580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906112ca565b905060006105026001600160701b038616846112f9565b905060006105196001600160701b038616846112f9565b9050600060025460000361055a576103e861053c6105378486611310565b610db7565b61054691906112f9565b905061055560006103e8610e27565b6105a9565b6105a6876001600160701b0316600254856105759190611310565b61057f919061132f565b876001600160701b0316600254856105979190611310565b6105a1919061132f565b610e81565b90505b600081116105ca57604051633489be7560e21b815260040160405180910390fd5b6105d43382610e27565b6105de8585610e99565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461067e5761065983826112f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906106a69084906112f9565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611443833981519152906106ef9087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461073857610733610f0a565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016020604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906112ca565b33600090815260036020526040812054600254929350916108618584611310565b61086b919061132f565b90506000600254848461087e9190611310565b610888919061132f565b9050811580610895575080155b156108b35760405163749383ad60e01b815260040160405180910390fd5b6108bd3384610fa4565b6006546108d4906001600160a01b03163384611006565b6007546108eb906001600160a01b03163383611006565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095991906112ca565b6007546040516370a0823160e01b81523060048201529196506001600160a01b0316906370a08231906024016020604051808303816000875af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906112ca565b93506109d48585610e99565b604080518381526020810183905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a25050505050565b600180546102f790611296565b33600090815260036020526040812080548391908390610a449084906112f9565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611443833981519152906103d39086815260200190565b42841015610ade5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610aea610702565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bf6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c2c5750876001600160a01b0316816001600160a01b0316145b610c695760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610ad5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546040516370a0823160e01b8152306004820152610db5916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906112ca565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db091906112ca565b610e99565b565b60006003821115610e185750806000610dd160028361132f565b610ddc906001611351565b90505b81811015610e1257905080600281610df7818661132f565b610e019190611351565b610e0b919061132f565b9050610ddf565b50919050565b8115610e22575060015b919050565b8060026000828254610e399190611351565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061144383398151915291015b60405180910390a35050565b6000818310610e905781610e92565b825b9392505050565b600880546001600160701b03838116600160701b9081026001600160e01b0319909316868316179290921792839055604080518483168152929093041660208201527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610f3c9190611369565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821660009081526003602052604081208054839290610fcc9084906112f9565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061144383398151915290602001610e75565b6040516001600160a01b03838116602483015260448201839052600091829186169060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b179052516110609190611404565b6000604051808303816000865af19150503d806000811461109d576040519150601f19603f3d011682016040523d82523d6000602084013e6110a2565b606091505b50915091508115806110d057508051158015906110d05750808060200190518101906110ce9190611420565b155b156110ee576040516312171d8360e31b815260040160405180910390fd5b5050505050565b60005b838110156111105781810151838201526020016110f8565b8381111561111f576000848401525b50505050565b60208152600082518060208401526111448160408501602087016110f5565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e2257600080fd5b6000806040838503121561118257600080fd5b61118b83611158565b946020939093013593505050565b6000806000606084860312156111ae57600080fd5b6111b784611158565b92506111c560208501611158565b9150604084013590509250925092565b6000602082840312156111e757600080fd5b610e9282611158565b600080600080600080600060e0888a03121561120b57600080fd5b61121488611158565b965061122260208901611158565b95506040880135945060608801359350608088013560ff8116811461124657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561127657600080fd5b61127f83611158565b915061128d60208401611158565b90509250929050565b600181811c908216806112aa57607f821691505b602082108103610e1257634e487b7160e01b600052602260045260246000fd5b6000602082840312156112dc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561130b5761130b6112e3565b500390565b600081600019048311821515161561132a5761132a6112e3565b500290565b60008261134c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611364576113646112e3565b500190565b600080835481600182811c91508083168061138557607f831692505b602080841082036113a457634e487b7160e01b86526022600452602486fd5b8180156113b857600181146113c9576113f6565b60ff198616895284890196506113f6565b60008a81526020902060005b868110156113ee5781548b8201529085019083016113d5565b505084890196505b509498975050505050505050565b600082516114168184602087016110f5565b9190910192915050565b60006020828403121561143257600080fd5b81518015158114610e9257600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edf94d782f2799a9a1b29abaed0ced6d6f53fb18f8f347020a1ea0a0ff73ab6164736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da264697066735822122019c07fd97a25edc415c9a49497c1f1c36263e8e49121b3c2af8b6d92fc16bbc364736f6c634300080d0033",
    "sourceMap": "162:4544:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:396;;;:::i;:::-;;994:318;;;:::i;1586:116:1:-;;;;;;:::i;:::-;;:::i;933:96::-;;;;;;:::i;:::-;;:::i;1147:120::-;;;;;;:::i;:::-;;:::i;4524:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2921:32:10;;;2903:51;;2891:2;2876:18;4524:330:1;;;;;;;;785:85;;;;;;:::i;:::-;;:::i;335:40::-;;-1:-1:-1;;;;;;;;;;;335:40:1;;1957:140;;;;;;:::i;:::-;;:::i;3770:594::-;;;;;;:::i;:::-;;:::i;:::-;;;4169:25:10;;;4157:2;4142:18;3770:594:1;4023:177:10;2736:107:1;;;;;;:::i;:::-;;:::i;1474:106::-;;;;;;:::i;:::-;;:::i;3360:1343:9:-;;;:::i;2849:915:1:-;;;;;;:::i;:::-;;:::i;4860:287::-;;;;;;:::i;:::-;;:::i;1273:130::-;;;;;;:::i;:::-;;:::i;1318:469:9:-;;;:::i;696:83:1:-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;5283:14:10;;5276:22;5258:41;;5246:2;5231:18;1819:584:0;5118:187:10;1793:519:9;;;:::i;2768:586::-;;;:::i;2531:81:1:-;;;;;;:::i;:::-;;:::i;1821:130::-;;;;;;:::i;:::-;;:::i;2141:297::-;;;;;;:::i;:::-;;:::i;2318:444:9:-;;;:::i;1035:106:1:-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;275:396:9;316:14;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;305:8:9;:25;;-1:-1:-1;;;;;;305:25:9;-1:-1:-1;;;;;305:25:9;;;;;;;;;;346:36;;;;;:::i;:::-;5613:2:10;5595:21;;;5652:1;5632:18;;;5625:29;-1:-1:-1;;;5685:2:10;5670:18;;5663:37;5738:3;5731:4;5716:20;;5709:33;;;5779:1;5758:19;;;5751:30;-1:-1:-1;;;5812:3:10;5797:19;;5790:35;5857:3;5842:19;346:36:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;337:6:9;:45;;-1:-1:-1;;;;;;337:45:9;-1:-1:-1;;;;;337:45:9;;;;;;;;;;397:36;;;;;:::i;:::-;6175:2:10;6157:21;;;6214:1;6194:18;;;6187:29;-1:-1:-1;;;6247:2:10;6232:18;;6225:37;6300:3;6293:4;6278:20;;6271:33;;;6341:1;6320:19;;;6313:30;-1:-1:-1;;;6374:3:10;6359:19;;6352:35;6419:3;6404:19;397:36:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;388:6:9;:45;;-1:-1:-1;;;;;;388:45:9;-1:-1:-1;;;;;388:45:9;;;;;;;;;463:6;;446:42;;463:6;;;446:42;;;:::i;:::-;-1:-1:-1;;;;;6664:15:10;;;6646:34;;6716:15;;6711:2;6696:18;;6689:43;6596:2;6581:18;446:42:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;439:4:9;:49;;-1:-1:-1;;;;;;439:49:9;-1:-1:-1;;;;;439:49:9;;;;;;495:6;;:36;;-1:-1:-1;;;495:36:9;;507:8;495:36;;;6944:25:10;525:4:9;6985:18:10;;;6978:60;495:6:9;;;:11;;6917:18:10;;495:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;537:6:9;;:36;;-1:-1:-1;;;537:36:9;;549:8;537:36;;;6944:25:10;567:4:9;6985:18:10;;;6978:60;-1:-1:-1;;;;;537:6:9;;;;-1:-1:-1;537:11:9;;-1:-1:-1;6917:18:10;;537:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;580:6:9;;610:8;;580:40;;-1:-1:-1;;;580:40:9;;592:8;580:40;;;6944:25:10;-1:-1:-1;;;;;610:8:9;;;6985:18:10;;;6978:60;580:6:9;;;-1:-1:-1;580:11:9;;-1:-1:-1;6917:18:10;;580:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;626:6:9;;656:8;;626:40;;-1:-1:-1;;;626:40:9;;638:8;626:40;;;6944:25:10;-1:-1:-1;;;;;656:8:9;;;6985:18:10;;;6978:60;626:6:9;;;-1:-1:-1;626:11:9;;-1:-1:-1;6917:18:10;;626:40:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;275:396::o;994:318::-;1040:6;;1064:4;;1040:39;;-1:-1:-1;;;1040:39:9;;-1:-1:-1;;;;;1040:6:9;;;;:15;;:39;;1064:4;;;1071:7;;1040:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1089:6:9;;1113:4;;1089:39;;-1:-1:-1;;;1089:39:9;;-1:-1:-1;;;;;1089:6:9;;;;:15;;:39;;1113:4;;;1120:7;;1089:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1139:4;;;;;;;;;-1:-1:-1;;;;;1139:4:9;-1:-1:-1;;;;;1139:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1170:4:9;;:29;;-1:-1:-1;;;1170:29:9;;1193:4;1170:29;;;2903:51:10;1161:55:9;;-1:-1:-1;;;;;;1170:4:9;;;;-1:-1:-1;1170:14:9;;2876:18:10;;1170:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1201:14;1161:8;:55::i;:::-;1226:32;1241:7;1250;1226:14;:32::i;:::-;1277:4;;:18;;;-1:-1:-1;;;1277:18:9;;;;1268:37;;-1:-1:-1;;;;;1277:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1297:7;1268:8;:37::i;:::-;994:318::o;1586:116:1:-;1649:18;;-1:-1:-1;;;1649:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1649:7:1;;:18;;1657:3;;1662:4;;1649:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1677:18:1;;-1:-1:-1;;;1677:18:1;;-1:-1:-1;;;;;2921:32:10;;1677:18:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1677:13:1;;-1:-1:-1;2876:18:10;;1677::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:116;;:::o;933:96::-;977:22;;-1:-1:-1;;;977:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;977:7:1;;:22;;985:3;;-1:-1:-1;;;990:8:1;977:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:13:1;;-1:-1:-1;;;1009:13:1;;-1:-1:-1;;;;;2921:32:10;;1009:13:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1009:8:1;;-1:-1:-1;2876:18:10;;1009:13:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:96;:::o;1147:120::-;1207:22;;-1:-1:-1;;;1207:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1207:7:1;;:22;;1215:3;;-1:-1:-1;;;1220:8:1;1207:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1239:21:1;;-1:-1:-1;;;1239:21:1;;-1:-1:-1;;;;;6664:15:10;;;1239:21:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1239:8:1;;-1:-1:-1;6581:18:10;;1239:21:1;6434:304:10;4524:330:1;4684:16;;-1:-1:-1;;;4684:16:1;;4615:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;4684:10:1;;:16;;4695:4;;4684:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4684:16:1;;;;;;;;;;;;:::i;:::-;4702:4;4667:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4643:64;;4828:8;4822:15;4815:4;4805:8;4801:19;4798:1;4791:47;4783:55;4524:330;-1:-1:-1;;;;4524:330:1:o;785:85::-;-1:-1:-1;;;;;;;;;;;832:7:1;840:22;858:4;840:15;:22;:::i;:::-;832:31;;;;;;;;;;;;;4169:25:10;;4157:2;4142:18;;4023:177;1957:140:1;2036:18;;-1:-1:-1;;;2036:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;2036:7:1;;:18;;2044:3;;2049:4;;2036:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2064:26:1;;-1:-1:-1;;;2064:26:1;;-1:-1:-1;;;;;6664:15:10;;;2064:26:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;2064:13:1;;-1:-1:-1;6581:18:10;;2064:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:140;;;:::o;3770:594::-;3838:14;3879:3;3872;:10;;3864:40;;;;-1:-1:-1;;;3864:40:1;;10723:2:10;3864:40:1;;;10705:21:10;10762:2;10742:18;;;10735:30;-1:-1:-1;;;10781:18:10;;;10774:47;10838:18;;3864:40:1;;;;;;;;;3915:12;3930:9;3936:3;3930;:9;:::i;:::-;3915:24;;3954:4;3962:1;3954:9;3950:354;;3996:3;3987:12;;3950:354;;;4028:86;;4024:280;;4147:1;4138:10;;4024:280;;;4195:6;;;:::i;:::-;;-1:-1:-1;4239:11:1;4253:8;4195:6;4253:1;:8;:::i;:::-;4239:22;-1:-1:-1;4284:9:1;4239:22;4284:3;:9;:::i;:::-;4275:18;;4181:123;4024:280;4319:38;;;11566:21:10;;;11623:2;11603:18;;;11596:30;-1:-1:-1;;;11657:2:10;11642:18;;11635:42;11744:4;11729:20;;11722:36;;;4319:38:1;;;;;;;11709:3:10;4319:38:1;;;3854:510;3770:594;;;;;:::o;2736:107::-;2808:28;2813:5;2820:2;2824:4;2830:5;2808:4;:28::i;:::-;2736:107;;;:::o;1474:106::-;1523:22;;-1:-1:-1;;;1523:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1523:7:1;;:22;;1531:3;;-1:-1:-1;;;1536:8:1;1523:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1555:18:1;;-1:-1:-1;;;1555:18:1;;-1:-1:-1;;;;;2921:32:10;;1555:18:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1555:13:1;;-1:-1:-1;2876:18:10;;1555::1;2757:203:10;3360:1343:9;3421:8;;3468:4;;3495:6;;3524;;3421:162;;-1:-1:-1;;;3421:162:9;;-1:-1:-1;;;;;3468:4:9;;;3421:162;;;12118:34:10;3495:6:9;;;12168:18:10;;;12161:43;3524:6:9;;12220:18:10;;;12213:43;3545:7:9;12272:18:10;;;12265:34;;;12315:19;;;12308:35;3421:8:9;;;:25;;12052:19:10;;3421:162:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3603:4:9;;:29;;-1:-1:-1;;;3603:29:9;;3626:4;3603:29;;;2903:51:10;3594:42:9;;-1:-1:-1;;;;;;3603:4:9;;;;-1:-1:-1;3603:14:9;;2876:18:10;;3603:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3634:1;3594:8;:42::i;:::-;3655:4;;3678:8;;3655:33;;-1:-1:-1;;;3655:33:9;;-1:-1:-1;;;;;3678:8:9;;;3655:33;;;2903:51:10;3646:59:9;;3655:4;;;;;:14;;2876:18:10;;3655:33:9;2757:203:10;3646:59:9;3724:4;;:18;;;-1:-1:-1;;;3724:18:9;;;;3715:37;;-1:-1:-1;;;;;3724:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;3715:37;3763:6;;3787:4;;3763:39;;-1:-1:-1;;;3763:39:9;;-1:-1:-1;;;;;3763:6:9;;;;:15;;:39;;3787:4;;;3794:7;;3763:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;3812:6:9;;3836:4;;3812:39;;-1:-1:-1;;;3812:39:9;;-1:-1:-1;;;;;3812:6:9;;;;:15;;:39;;3836:4;;;3843:7;;3812:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3862:4;;;;;;;;;-1:-1:-1;;;;;3862:4:9;-1:-1:-1;;;;;3862:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3894:4;;;;;;;;;-1:-1:-1;;;;;3894:4:9;-1:-1:-1;;;;;3894:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3994:4:9;;:29;;-1:-1:-1;;;3994:29:9;;4017:4;3994:29;;;2903:51:10;3985:42:9;;-1:-1:-1;;;;;;3994:4:9;;;;-1:-1:-1;3994:14:9;;2876:18:10;;3994:29:9;2757:203:10;3985:42:9;4037:34;4052:9;4063:7;4037:14;:34::i;:::-;4090:4;;:18;;;-1:-1:-1;;;4090:18:9;;;;4081:37;;-1:-1:-1;;;;;4090:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;4081:37;4137:6;;:31;;-1:-1:-1;;;4137:31:9;;4162:4;4137:31;;;2903:51:10;4128:63:9;;-1:-1:-1;;;;;4137:6:9;;:16;;2876:18:10;;4137:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4170:20;4128:8;:63::i;:::-;4210:6;;:31;;-1:-1:-1;;;4210:31:9;;4235:4;4210:31;;;2903:51:10;4201::9;;-1:-1:-1;;;;;4210:6:9;;:16;;2876:18:10;;4210:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4243:8;4201;:51::i;:::-;4263:8;;4298:4;;4263:41;;-1:-1:-1;;;4263:41:9;;-1:-1:-1;;;;;4298:4:9;;;4263:41;;;2903:51:10;4263:8:9;;;:26;;2876:18:10;;4263:41:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4389:4:9;;4412:8;;4389:33;;-1:-1:-1;;;4389:33:9;;-1:-1:-1;;;;;4412:8:9;;;4389:33;;;2903:51:10;4380:46:9;;-1:-1:-1;4389:4:9;;;-1:-1:-1;4389:14:9;;2876:18:10;;4389:33:9;2757:203:10;4380:46:9;4436:26;4451:4;4457;4436:14;:26::i;:::-;4481:4;;:18;;;-1:-1:-1;;;4481:18:9;;;;4472:34;;-1:-1:-1;;;;;4481:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4501:4;4472:8;:34::i;:::-;4538:6;;4563:8;;4538:35;;-1:-1:-1;;;4538:35:9;;-1:-1:-1;;;;;4563:8:9;;;4538:35;;;2903:51:10;4516:108:9;;4538:6;;;;;:16;;2876:18:10;;4538:35:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4587:27;4516:8;:108::i;:::-;4643:6;;4668:8;;4643:35;;-1:-1:-1;;;4643:35:9;;-1:-1:-1;;;;;4668:8:9;;;4643:35;;;2903:51:10;4634:62:9;;4643:6;;;;;:16;;2876:18:10;;4643:35:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4680:15;4634:8;:62::i;2849:915:1:-;3003:38;;;-1:-1:-1;;;;;2921:32:10;;;3003:38:1;;;;2903:51:10;;;;3003:38:1;;;;;;;;;;2876:18:10;;;;3003:38:1;;;;;;;-1:-1:-1;;;;;3003:38:1;-1:-1:-1;;;3003:38:1;;;2992:50;;2968:20;;2992:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2965:77;;;3052:15;3081:7;3070:30;;;;;;;;;;;;:::i;:::-;3052:48;-1:-1:-1;3137:123:1;3255:4;3137:90;3224:2;3137:64;-1:-1:-1;;;3137:35:1;:8;3166:5;3137:28;:35::i;:::-;:52;16816:9;;;:16;;-1:-1:-1;;16816:16:1;;;;;;;;;;;;:9;16717:143;3137:64;:86;17132:10;;;:47;;;;;;;-1:-1:-1;17132:47:1;;;;;;;-1:-1:-1;;;;;17156:21:1;;;;17132:47;;;:10;17028:179;3137:90;:117;;:123::i;:::-;3305:6;3302:456;;;3367:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3367:34:1;-1:-1:-1;;;3367:34:1;;;3356:46;;3329:23;;-1:-1:-1;;;;;3356:10:1;;;:46;;3367:34;3356:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:76;;;3416:14;3444:10;3433:33;;;;;;;;;;;;:::i;:::-;3416:50;;3490:7;3483:4;:14;3480:143;;;3528:14;3538:4;3528:7;:14;:::i;:::-;3517:26;;;;:::i;:::-;;;3480:143;;;3593:14;3600:7;3593:4;:14;:::i;:::-;3582:26;;;;:::i;:::-;;;3480:143;3636:111;3740:6;3636:72;-1:-1:-1;;;3636:39:1;:8;3669:5;3636:32;:39::i;:111::-;3312:446;;2924:840;;2849:915;;;;:::o;4860:287::-;4984:16;;-1:-1:-1;;;4984:16:1;;4932:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;4984:10:1;;:16;;4995:4;;4984:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4984:16:1;;;;;;;;;;;;:::i;:::-;4960:40;;5121:8;5115:15;5108:4;5098:8;5094:19;5091:1;5084:47;5076:55;4860:287;-1:-1:-1;;;4860:287:1:o;1273:130::-;1347:18;;-1:-1:-1;;;1347:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1347:7:1;;:18;;1355:3;;1360:4;;1347:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1375:21:1;;-1:-1:-1;;;1375:21:1;;-1:-1:-1;;;;;6664:15:10;;;1375:21:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1375:8:1;;-1:-1:-1;6581:18:10;;1375:21:1;6434:304:10;1318:469:9;1374:6;;1398:4;;1374:39;;-1:-1:-1;;;1374:39:9;;-1:-1:-1;;;;;1374:6:9;;;;:15;;:39;;1398:4;;;1405:7;;1374:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1423:6:9;;1447:4;;1423:39;;-1:-1:-1;;;1423:39:9;;-1:-1:-1;;;;;1423:6:9;;;;:15;;:39;;1447:4;;;1454:7;;1423:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1473:4;;;;;;;;;-1:-1:-1;;;;;1473:4:9;-1:-1:-1;;;;;1473:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1505:6:9;;1529:4;;1505:39;;-1:-1:-1;;;1505:39:9;;-1:-1:-1;;;;;1505:6:9;;;;-1:-1:-1;1505:15:9;;-1:-1:-1;1505:39:9;;1529:4;;;;1536:7;;1505:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1554:6:9;;1578:4;;1554:39;;-1:-1:-1;;;1554:39:9;;-1:-1:-1;;;;;1554:6:9;;;;:15;;:39;;1578:4;;;1585:7;;1554:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1604:4;;;;;;;;;-1:-1:-1;;;;;1604:4:9;-1:-1:-1;;;;;1604:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1645:4:9;;:29;;-1:-1:-1;;;1645:29:9;;1668:4;1645:29;;;2903:51:10;1636:55:9;;-1:-1:-1;;;;;;1645:4:9;;;;-1:-1:-1;1645:14:9;;2876:18:10;;1645:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1676:14;1636:8;:55::i;:::-;1710:4;;:18;;;-1:-1:-1;;;1710:18:9;;;;1701:37;;-1:-1:-1;;;;;1710:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1730:7;1701:8;:37::i;:::-;1748:32;1763:7;1772;1748:14;:32::i;696:83:1:-;-1:-1:-1;;;;;;;;;;;741:7:1;749:22;767:4;749:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1793:519:9:-;1840:6;;1864:4;;1840:39;;-1:-1:-1;;;1840:39:9;;-1:-1:-1;;;;;1840:6:9;;;;:15;;:39;;1864:4;;;1871:7;;1840:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1889:6:9;;1913:4;;1889:39;;-1:-1:-1;;;1889:39:9;;-1:-1:-1;;;;;1889:6:9;;;;:15;;:39;;1913:4;;;1920:7;;1889:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1939:4;;;;;;;;;-1:-1:-1;;;;;1939:4:9;-1:-1:-1;;;;;1939:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1979:4:9;;:29;;-1:-1:-1;;;1979:29:9;;2002:4;1979:29;;;2903:51:10;1970:55:9;;-1:-1:-1;;;;;;1979:4:9;;;;-1:-1:-1;1979:14:9;;2876:18:10;;1979:29:9;2757:203:10;1970:55:9;2035:32;2050:7;2059;2035:14;:32::i;:::-;2078:6;;2102:4;;2078:39;;-1:-1:-1;;;2078:39:9;;-1:-1:-1;;;;;2078:6:9;;;;:15;;:39;;2102:4;;;2109:7;;2078:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2127:6:9;;2151:4;;2127:39;;-1:-1:-1;;;2127:39:9;;-1:-1:-1;;;;;2127:6:9;;;;:15;;:39;;2151:4;;;2158:7;;2127:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2177:4;;;;;;;;;-1:-1:-1;;;;;2177:4:9;-1:-1:-1;;;;;2177:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2217:4:9;;:29;;-1:-1:-1;;;2217:29:9;;2240:4;2217:29;;;2903:51:10;2208:55:9;;-1:-1:-1;;;;;;2217:4:9;;;;-1:-1:-1;2217:14:9;;2876:18:10;;2217:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2248:14;2208:8;:55::i;:::-;2273:32;2288:7;2297;2273:14;:32::i;2768:586::-;2815:6;;2839:4;;2815:39;;-1:-1:-1;;;2815:39:9;;-1:-1:-1;;;;;2815:6:9;;;;:15;;:39;;2839:4;;;2846:7;;2815:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2864:6:9;;2888:4;;2864:39;;-1:-1:-1;;;2864:39:9;;-1:-1:-1;;;;;2864:6:9;;;;:15;;:39;;2888:4;;;2895:7;;2864:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2914:4;;;;;;;;;-1:-1:-1;;;;;2914:4:9;-1:-1:-1;;;;;2914:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2936:6:9;;2960:4;;2936:39;;-1:-1:-1;;;2936:39:9;;-1:-1:-1;;;;;2936:6:9;;;;-1:-1:-1;2936:15:9;;-1:-1:-1;2936:39:9;;2960:4;;;;2967:7;;2936:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2985:6:9;;3009:4;;2985:39;;-1:-1:-1;;;2985:39:9;;-1:-1:-1;;;;;2985:6:9;;;;:15;;:39;;3009:4;;;3016:7;;2985:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3035:4;;;;;;;;;-1:-1:-1;;;;;3035:4:9;-1:-1:-1;;;;;3035:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3067:4;;;;;;;;;-1:-1:-1;;;;;3067:4:9;-1:-1:-1;;;;;3067:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3098:4:9;;:29;;-1:-1:-1;;;3098:29:9;;3121:4;3098:29;;;2903:51:10;3089:42:9;;-1:-1:-1;;;;;;3098:4:9;;;;-1:-1:-1;3098:14:9;;2876:18:10;;3098:29:9;2757:203:10;3089:42:9;3141:26;3156:4;3162;3141:14;:26::i;:::-;3186:4;;:18;;;-1:-1:-1;;;3186:18:9;;;;3177:34;;-1:-1:-1;;;;;3186:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;3177:34;3230:6;;:31;;-1:-1:-1;;;3230:31:9;;3255:4;3230:31;;;2903:51:10;3221:58:9;;-1:-1:-1;;;;;3230:6:9;;:16;;2876:18:10;;3230:31:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3263:15;3221:8;:58::i;:::-;3298:6;;:31;;-1:-1:-1;;;3298:31:9;;3323:4;3298:31;;;2903:51:10;3289:58:9;;-1:-1:-1;;;;;3298:6:9;;:16;;2876:18:10;;3298:31:9;2757:203:10;2531:81:1;2588:17;;-1:-1:-1;;;2588:17:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;2588:7:1;;:17;;2596:2;;2600:4;;2588:17;;;:::i;1821:130::-;1886:22;;-1:-1:-1;;;1886:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1886:7:1;;:22;;1894:3;;-1:-1:-1;;;1899:8:1;1886:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1918:26:1;;-1:-1:-1;;;1918:26:1;;-1:-1:-1;;;;;6664:15:10;;;1918:26:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1918:13:1;;-1:-1:-1;6581:18:10;;1918:26:1;6434:304:10;2141:297:1;2217:81;;;;;13795:2:10;13777:21;;;13834:2;13814:18;;;13807:30;13873:34;13868:2;13853:18;;13846:62;13944:29;13939:2;13924:18;;13917:57;14006:3;13991:19;;13593:423;2217:81:1;;;;;;;;2308:123;2426:4;2308:90;2395:2;2308:64;-1:-1:-1;;;2308:35:1;:8;2337:5;2308:28;:35::i;2318:444:9:-;2355:6;;2379:4;;2355:39;;-1:-1:-1;;;2355:39:9;;-1:-1:-1;;;;;2355:6:9;;;;:15;;:39;;2379:4;;;2386:7;;2355:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2404:6:9;;2428:4;;2404:39;;-1:-1:-1;;;2404:39:9;;-1:-1:-1;;;;;2404:6:9;;;;:15;;:39;;2428:4;;;2435:7;;2404:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2454:4;;;;;;;;;-1:-1:-1;;;;;2454:4:9;-1:-1:-1;;;;;2454:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2475:4;;;;;;;;;-1:-1:-1;;;;;2475:4:9;-1:-1:-1;;;;;2475:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2506:4:9;;:29;;-1:-1:-1;;;2506:29:9;;2529:4;2506:29;;;2903:51:10;2497:42:9;;-1:-1:-1;;;;;;2506:4:9;;;;-1:-1:-1;2506:14:9;;2876:18:10;;2506:29:9;2757:203:10;2497:42:9;2549:26;2564:4;2570;2549:14;:26::i;:::-;2594:4;;:18;;;-1:-1:-1;;;2594:18:9;;;;2585:34;;-1:-1:-1;;;;;2594:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;2585:34;2638:6;;:31;;-1:-1:-1;;;2638:31:9;;2663:4;2638:31;;;2903:51:10;2629:58:9;;-1:-1:-1;;;;;2638:6:9;;:16;;2876:18:10;;2638:31:9;2757:203:10;1035:106:1;1093:18;;-1:-1:-1;;;1093:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1093:7:1;;:18;;1101:3;;1106:4;;1093:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1121:13:1;;-1:-1:-1;;;1121:13:1;;-1:-1:-1;;;;;2921:32:10;;1121:13:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1121:8:1;;-1:-1:-1;2876:18:10;;1121:13:1;2757:203:10;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;14223:2:10;14205:21;;;14262:2;14242:18;;;14235:30;14301:34;14296:2;14281:18;;14274:62;-1:-1:-1;;;14367:2:10;14352:18;;14345:32;14409:3;14394:19;;14021:398;5286:41:0;;;;;;;;5346:31;;;14636:21:10;;;14693:2;14673:18;;;14666:30;-1:-1:-1;;;14727:2:10;14712:18;;14705:40;14812:4;14797:20;;14790:36;;;5346:31:0;;;;;;;14777:3:10;5346:31:0;;;5396;;;15049:21:10;;;15106:2;15086:18;;;15079:30;-1:-1:-1;;;15140:2:10;15125:18;;15118:40;15225:4;15210:20;;15203:36;;;5396:31:0;;;;;;;15190:3:10;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;677:311:9:-;785:16;803;825:4;;;;;;;;;-1:-1:-1;;;;;825:4:9;-1:-1:-1;;;;;825:16:9;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;784:59;;;;;853;862:8;-1:-1:-1;;;;;853:59:9;872:16;-1:-1:-1;;;;;853:59:9;;;;;;;;;;;;;;-1:-1:-1;;;853:59:9;;;:8;:59::i;:::-;922;931:8;-1:-1:-1;;;;;922:59:9;941:16;-1:-1:-1;;;;;922:59:9;;;;;;;;;;;;;;-1:-1:-1;;;922:59:9;;;:8;:59::i;16555:156:1:-;16661:12;;;:22;;-1:-1:-1;;;;;;16661:22:1;-1:-1:-1;;;;;16661:22:1;;;;;;;;;;:12;16555:156::o;17839:120::-;17919:33;17933:4;17947:3;17919:13;:33::i;2410:424:0:-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:0;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;5469:178::-;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;18193:1058:1:-;18309:12;;;;18345:9;;;;18386:11;;;;18430:10;;;18407:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18309:12:1;;;;18345:9;;;;;;18295:11;;18407:33;;18430:10;;18407:33;;18430:10;18407:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18451:17;18488:4;18494:12;18502:3;18494:7;:12::i;:::-;18471:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18471:36:1;;;;;;;;;-1:-1:-1;;;;;18522:15:1;;;;;;:10;;;18471:36;18522:15;;;;;;-1:-1:-1;;;;;;18522:21:1;;;;;;;;;18471:36;;-1:-1:-1;18522:21:1;;:15;;18554:34;;18571:3;;18576:11;;18554:34;;:::i;:::-;;;;-1:-1:-1;;18554:34:1;;;;;;;;;18544:45;;18554:34;18544:45;;;;18522:68;;;;;;;;;;-1:-1:-1;18522:68:1;;;;18517:110;;18606:10;18611:4;18606;:10::i;:::-;;18517:110;-1:-1:-1;;;;;18659:15:1;;18636:12;18659:15;;;;;;;;;;;-1:-1:-1;;;;;;18659:21:1;;;;;;;;;18691:34;;18659:21;;18636:12;;18691:34;;18708:3;;18713:11;;18691:34;;:::i;:::-;;;;;;;;;;;;;18681:45;;;;;;18659:68;;;;;;;;;;;;18651:77;;18636:92;;18739:12;18778:17;18799:3;-1:-1:-1;;;;;18799:14:1;18814:4;18799:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18775:44:1;-1:-1:-1;18840:36:1;;-1:-1:-1;18775:44:1;18861:14;18864:11;18861:2;:14;:::i;:::-;18840;:36::i;:::-;18911:28;;-1:-1:-1;;;18911:28:1;;18833:43;;-1:-1:-1;18896:12:1;;-1:-1:-1;;;;;;;;;;;;18911:17:1;;;:28;;18929:3;;18934:4;;18911:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18896:43;;18962:4;18954;:12;18950:141;;18982:98;;-1:-1:-1;;;18982:98:1;;;;;;;:::i;:::-;19100:34;;-1:-1:-1;;;19100:34:1;;-1:-1:-1;;;;;;;;;;;19100:18:1;;;:34;;19119:3;;19124:4;;19130:3;;19100:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19151:12:1;;;19144:19;;-1:-1:-1;;;;;;19144:19:1;;;-1:-1:-1;19180:9:1;;;19173:16;;-1:-1:-1;;19173:16:1;;;19199:17;-1:-1:-1;19206:10:1;;19151:12;19199:17;:::i;:::-;19233:4;:11;;19226:18;;;18285:966;;;;;;;;18193:1058;;:::o;19560:397::-;19619:12;19647:19;19679:1;:8;19690:2;19679:13;;;;:::i;:::-;19669:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19669:24:1;;19647:46;;19708:9;19703:224;19727:1;:8;19723:1;:12;19703:224;;;19756:9;19768:1;19770;19768:4;;;;;;;;:::i;:::-;;;;;;;19756:16;;19901:1;19895;19891:2;19887:10;19883:2;19879:19;19871:6;19867:32;19860:43;19842:75;19737:3;;;;;:::i;:::-;;;;19703:224;;;-1:-1:-1;19944:6:1;19560:397;-1:-1:-1;;19560:397:1:o;13435:3114::-;13559:12;;;;13595:9;;;;13636:11;;;;13680:10;;;13657:33;;;;;;;;;;;;;;;;;;;13522:7;;-1:-1:-1;;;;;13559:12:1;;13595:9;;;13636:11;13522:7;;13657:33;;13680:10;;13657:33;;;13680:10;13657:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;13741:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;13741:21:1;;;;;;;;;13773:34;;13657:33;;-1:-1:-1;13741:21:1;:15;;-1:-1:-1;13773:34:1;;-1:-1:-1;13657:33:1;;13795:11;;13773:34;;:::i;:::-;;;;-1:-1:-1;;13773:34:1;;;;;;;;;13763:45;;13773:34;13763:45;;;;13741:68;;;;;;;;;;-1:-1:-1;13741:68:1;;;;13737:174;;;-1:-1:-1;;;;;13832:15:1;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;13832:21:1;;;;;;;;;13864:34;;13832:21;;:10;13864:34;;13881:3;;13886:11;;13864:34;;:::i;:::-;;;;;;;;;;;;;13854:45;;;;;;13832:68;;;;;;;;;;;;13825:75;;;;;;13435:3114;;;:::o;13737:174::-;13920:17;13957:4;13963:12;13971:3;13963:7;:12::i;:::-;13940:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13920:56;;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;13986:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14017:12;14056:17;14077:3;-1:-1:-1;;;;;14077:14:1;14092:4;14077:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14053:44:1;-1:-1:-1;14118:36:1;;-1:-1:-1;14053:44:1;14139:14;14142:11;14139:2;:14;:::i;14118:36::-;14204:35;;-1:-1:-1;;;14204:35:1;;-1:-1:-1;;;;;2921:32:10;;14204:35:1;;;2903:51:10;14111:43:1;;-1:-1:-1;14176:22:1;;-1:-1:-1;;;;;;;;;;;;14204:21:1;;;2876:18:10;;14204:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14204:35:1;;;;;;;;;;;;:::i;:::-;14175:64;;;14253:5;:12;14269:1;14253:17;14249:1997;;14286:12;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;14301:17:1;;14319:3;14324:5;14330:1;14324:8;;;;;;;;:::i;:::-;;;;;;;14301:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14286:47;-1:-1:-1;14286:47:1;14347:106;;14394:44;14415:3;14428:5;14434:1;14428:8;;;;;;;;:::i;:::-;;;;;;;14420:17;;14394:44;;;;;;;:::i;:::-;;;;;;;;14347:106;14478:4;14470;:12;14466:149;;14502:98;;-1:-1:-1;;;14502:98:1;;;;;;;:::i;:::-;14633:86;14643:3;14648:4;14681:3;14686:11;14664:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14654:45;;;;;;14709:5;14715:1;14709:8;;;;;;;;:::i;:::-;;;;;;;14701:17;;14633:86;;;;;;;;;:::i;:::-;;;;;;;;14812:5;14818:1;14812:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;14733:15:1;;14804:17;14733:15;;;;;;;;;;-1:-1:-1;;;;;;14733:21:1;;;;;;;;;14765:34;;14812:8;;14733:21;;14765:34;;14782:3;;14787:11;;14765:34;;:::i;:::-;;;;-1:-1:-1;;14765:34:1;;;;;;;;;14755:45;;14765:34;14755:45;;;;14733:68;;;;;;;;;;;;-1:-1:-1;14733:68:1;;;:88;;;;-1:-1:-1;;;;;14835:15:1;;;;14906:4;14835:10;;;:15;;;;;-1:-1:-1;;;;;;14835:21:1;;;;;;;;;14867:34;;14906:4;;-1:-1:-1;14867:34:1;;14884:3;;14889:11;;14867:34;;:::i;:::-;;;;;;;-1:-1:-1;;14867:34:1;;;;;;14857:45;;14867:34;14857:45;;;;14835:68;;;;;;;;;;-1:-1:-1;14835:68:1;:75;;-1:-1:-1;;14835:75:1;;;;;;;;;;-1:-1:-1;14249:1997:1;;;14946:1;14931:5;:12;:16;14927:1319;;;14968:9;14963:1190;14987:5;:12;14983:1;:16;14963:1190;;;15024:12;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15039:17:1;;15057:3;15062:5;15068:1;15062:8;;;;;;;;:::i;:::-;;;;;;;15039:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15024:47;-1:-1:-1;15024:47:1;15089:114;;15140:44;15161:3;15174:5;15180:1;15174:8;;;;;;;;:::i;:::-;;;;;;;15166:17;;15140:44;;;;;;;:::i;:::-;;;;;;;;15089:114;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15245:18:1;;15264:3;15269:5;15275:1;15269:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;15245:53:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15316:12;15346:17;15421:3;-1:-1:-1;;;;;15421:14:1;15436:4;15421:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15403:38:1;;-1:-1:-1;15403:38:1;-1:-1:-1;15470:36:1;15403:38;15491:14;15494:11;15491:2;:14;:::i;15470:36::-;15463:43;;15547:7;:37;;;;;-1:-1:-1;;;15558:4:1;:26;15547:37;15543:539;;;15682:86;15692:3;15697:4;15730:3;15735:11;15713:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15703:45;;;;;;15758:5;15764:1;15758:8;;;;;;;;:::i;:::-;;;;;;;15750:17;;15682:86;;;;;;;;;:::i;:::-;;;;;;;;15869:5;15875:1;15869:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;15790:15:1;;15861:17;15790:15;;;;;;;;;;-1:-1:-1;;;;;;15790:21:1;;;;;;;;;15822:34;;15869:8;;15790:21;;15822:34;;15839:3;;15844:11;;15822:34;;:::i;:::-;;;;;;;;;;;;;15812:45;;;;;;15790:68;;;;;;;;;;;:88;;;;15971:4;15900;:10;;:15;15911:3;-1:-1:-1;;;;;15900:15:1;-1:-1:-1;;;;;15900:15:1;;;;;;;;;;;;:21;15916:4;-1:-1:-1;;;;;15900:21:1;;-1:-1:-1;;;;;15900:21:1;;;;;;;;;;;;;:68;15949:3;15954:11;15932:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15922:45;;;;;;15900:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15997:18:1;;16016:3;16021:5;16027:1;16021:8;;;;;;;;:::i;:::-;;;;;;;16031:4;15997:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16058:5;;;;;15543:539;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;16099:18:1;;16118:3;16123:5;16129:1;16123:8;;;;;;;;:::i;:::-;;;;;;;16133:4;16099:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15006:1147;;;15001:3;;;;;:::i;:::-;;;;14963:1190;;;;14927:1319;;;16183:52;;-1:-1:-1;;;16183:52:1;;20279:2:10;16183:52:1;;;20261:21:10;20318:2;20298:18;;;20291:30;20357:34;20337:18;;;20330:62;-1:-1:-1;;;20408:18:10;;;20401:32;20450:19;;16183:52:1;20077:398:10;16183:52:1;-1:-1:-1;;;;;16264:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16264:21:1;;;;;;;;;16296:34;;16264:21;;:15;16296:34;;16313:3;;16318:11;;16296:34;;:::i;:::-;;;;-1:-1:-1;;16296:34:1;;;;;;;;;16286:45;;16296:34;16286:45;;;;16264:68;;;;;;;;;;-1:-1:-1;16264:68:1;;;;16256:89;;;;-1:-1:-1;;;16256:89:1;;20682:2:10;16256:89:1;;;20664:21:10;20721:1;20701:18;;;20694:29;-1:-1:-1;;;20739:18:10;;;20732:38;20787:18;;16256:89:1;20480:331:10;16256:89:1;16363:12;;;16356:19;;-1:-1:-1;;;;;;16356:19:1;;;16392:9;;;16385:16;;-1:-1:-1;;16385:16:1;;;16411:17;-1:-1:-1;16418:10:1;;16363:12;16411:17;:::i;:::-;16438:18;16445:11;;;16438:18;;;-1:-1:-1;;;;;16474:15:1;;;;;;;;;;;;-1:-1:-1;;;;;;16474:21:1;;;;;;;;;16506:34;;16474:21;;16438:18;16506:34;;16523:3;;16528:11;;16506:34;;:::i;:::-;;;;;;;;;;;;;16496:45;;;;;;16474:68;;;;;;;;;;;;16467:75;;;;;;;;;13435:3114;;;:::o;19257:297::-;19331:7;19350:11;19372;19397:2;19386:1;:8;:13;:29;;19407:1;:8;19386:29;;;19402:2;19386:29;19372:43;;19430:6;19425:103;19446:3;19442:1;:7;19425:103;;;19511:5;:1;19515;19511:5;:::i;:::-;19485:1;19487:10;19496:1;19487:6;:10;:::i;:::-;19485:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;19485:13:1;19477:40;;19470:47;;;;;19451:3;;;;:::i;:::-;;;;19425:103;;;-1:-1:-1;19544:3:1;;19257:297;-1:-1:-1;;;;19257:297:1:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:10:o;642:260::-;710:6;718;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;;858:38;892:2;881:9;877:18;858:38;:::i;:::-;848:48;;642:260;;;;;:::o;907:127::-;968:10;963:3;959:20;956:1;949:31;999:4;996:1;989:15;1023:4;1020:1;1013:15;1039:275;1110:2;1104:9;1175:2;1156:13;;-1:-1:-1;;1152:27:10;1140:40;;1210:18;1195:34;;1231:22;;;1192:62;1189:88;;;1257:18;;:::i;:::-;1293:2;1286:22;1039:275;;-1:-1:-1;1039:275:10:o;1319:187::-;1368:4;1401:18;1393:6;1390:30;1387:56;;;1423:18;;:::i;:::-;-1:-1:-1;1489:2:10;1468:15;-1:-1:-1;;1464:29:10;1495:4;1460:40;;1319:187::o;1511:338::-;1576:5;1605:53;1621:36;1650:6;1621:36;:::i;:::-;1605:53;:::i;:::-;1596:62;;1681:6;1674:5;1667:21;1721:3;1712:6;1707:3;1703:16;1700:25;1697:45;;;1738:1;1735;1728:12;1697:45;1787:6;1782:3;1775:4;1768:5;1764:16;1751:43;1841:1;1834:4;1825:6;1818:5;1814:18;1810:29;1803:40;1511:338;;;;;:::o;1854:222::-;1897:5;1950:3;1943:4;1935:6;1931:17;1927:27;1917:55;;1968:1;1965;1958:12;1917:55;1990:80;2066:3;2057:6;2044:20;2037:4;2029:6;2025:17;1990:80;:::i;2081:671::-;2168:6;2176;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;2285:9;2272:23;2314:18;2355:2;2347:6;2344:14;2341:34;;;2371:1;2368;2361:12;2341:34;2394:50;2436:7;2427:6;2416:9;2412:22;2394:50;:::i;:::-;2384:60;;2497:2;2486:9;2482:18;2469:32;2453:48;;2526:2;2516:8;2513:16;2510:36;;;2542:1;2539;2532:12;2510:36;-1:-1:-1;2565:24:10;;2620:4;2612:13;;2608:27;-1:-1:-1;2598:55:10;;2649:1;2646;2639:12;2598:55;2672:74;2738:7;2733:2;2720:16;2715:2;2711;2707:11;2672:74;:::i;:::-;2662:84;;;2081:671;;;;;:::o;2965:180::-;3024:6;3077:2;3065:9;3056:7;3052:23;3048:32;3045:52;;;3093:1;3090;3083:12;3045:52;-1:-1:-1;3116:23:10;;2965:180;-1:-1:-1;2965:180:10:o;3369:328::-;3446:6;3454;3462;3515:2;3503:9;3494:7;3490:23;3486:32;3483:52;;;3531:1;3528;3521:12;3483:52;3554:29;3573:9;3554:29;:::i;:::-;3544:39;;3602:38;3636:2;3625:9;3621:18;3602:38;:::i;:::-;3592:48;;3687:2;3676:9;3672:18;3659:32;3649:42;;3369:328;;;;;:::o;3702:316::-;3779:6;3787;3795;3848:2;3836:9;3827:7;3823:23;3819:32;3816:52;;;3864:1;3861;3854:12;3816:52;-1:-1:-1;;3887:23:10;;;3957:2;3942:18;;3929:32;;-1:-1:-1;4008:2:10;3993:18;;;3980:32;;3702:316;-1:-1:-1;3702:316:10:o;4205:118::-;4291:5;4284:13;4277:21;4270:5;4267:32;4257:60;;4313:1;4310;4303:12;4328:458;4411:6;4419;4427;4435;4488:3;4476:9;4467:7;4463:23;4459:33;4456:53;;;4505:1;4502;4495:12;4456:53;4528:29;4547:9;4528:29;:::i;:::-;4518:39;;4576:38;4610:2;4599:9;4595:18;4576:38;:::i;:::-;4566:48;;4661:2;4650:9;4646:18;4633:32;4623:42;;4715:2;4704:9;4700:18;4687:32;4728:28;4750:5;4728:28;:::i;:::-;4328:458;;;;-1:-1:-1;4328:458:10;;-1:-1:-1;;4328:458:10:o;4791:322::-;4860:6;4913:2;4901:9;4892:7;4888:23;4884:32;4881:52;;;4929:1;4926;4919:12;4881:52;4969:9;4956:23;5002:18;4994:6;4991:30;4988:50;;;5034:1;5031;5024:12;4988:50;5057;5099:7;5090:6;5079:9;5075:22;5057:50;:::i;:::-;5047:60;4791:322;-1:-1:-1;;;;4791:322:10:o;7049:300::-;-1:-1:-1;;;;;7267:32:10;;;;7249:51;;7331:2;7316:18;;7309:34;7237:2;7222:18;;7049:300::o;7354:245::-;7421:6;7474:2;7462:9;7453:7;7449:23;7445:32;7442:52;;;7490:1;7487;7480:12;7442:52;7522:9;7516:16;7541:28;7563:5;7541:28;:::i;7604:184::-;7674:6;7727:2;7715:9;7706:7;7702:23;7698:32;7695:52;;;7743:1;7740;7733:12;7695:52;-1:-1:-1;7766:16:10;;7604:184;-1:-1:-1;7604:184:10:o;8397:258::-;8469:1;8479:113;8493:6;8490:1;8487:13;8479:113;;;8569:11;;;8563:18;8550:11;;;8543:39;8515:2;8508:10;8479:113;;;8610:6;8607:1;8604:13;8601:48;;;-1:-1:-1;;8645:1:10;8627:16;;8620:27;8397:258::o;8660:::-;8702:3;8740:5;8734:12;8767:6;8762:3;8755:19;8783:63;8839:6;8832:4;8827:3;8823:14;8816:4;8809:5;8805:16;8783:63;:::i;:::-;8900:2;8879:15;-1:-1:-1;;8875:29:10;8866:39;;;;8907:4;8862:50;;8660:258;-1:-1:-1;;8660:258:10:o;8923:220::-;9072:2;9061:9;9054:21;9035:4;9092:45;9133:2;9122:9;9118:18;9110:6;9092:45;:::i;9148:635::-;9227:6;9280:2;9268:9;9259:7;9255:23;9251:32;9248:52;;;9296:1;9293;9286:12;9248:52;9329:9;9323:16;9362:18;9354:6;9351:30;9348:50;;;9394:1;9391;9384:12;9348:50;9417:22;;9470:4;9462:13;;9458:27;-1:-1:-1;9448:55:10;;9499:1;9496;9489:12;9448:55;9528:2;9522:9;9553:49;9569:32;9598:2;9569:32;:::i;9553:49::-;9625:2;9618:5;9611:17;9665:7;9660:2;9655;9651;9647:11;9643:20;9640:33;9637:53;;;9686:1;9683;9676:12;9637:53;9699:54;9750:2;9745;9738:5;9734:14;9729:2;9725;9721:11;9699:54;:::i;:::-;9772:5;9148:635;-1:-1:-1;;;;;9148:635:10:o;9788:466::-;9963:3;10001:6;9995:13;10017:53;10063:6;10058:3;10051:4;10043:6;10039:17;10017:53;:::i;:::-;10133:13;;10092:16;;;;10155:57;10133:13;10092:16;10189:4;10177:17;;10155:57;:::i;:::-;10228:20;;9788:466;-1:-1:-1;;;;9788:466:10:o;10259:127::-;10320:10;10315:3;10311:20;10308:1;10301:31;10351:4;10348:1;10341:15;10375:4;10372:1;10365:15;10391:125;10431:4;10459:1;10456;10453:8;10450:34;;;10464:18;;:::i;:::-;-1:-1:-1;10501:9:10;;10391:125::o;10867:135::-;10906:3;10927:17;;;10924:43;;10947:18;;:::i;:::-;-1:-1:-1;10994:1:10;10983:13;;10867:135::o;11007:209::-;11039:1;11065;11055:132;;11109:10;11104:3;11100:20;11097:1;11090:31;11144:4;11141:1;11134:15;11172:4;11169:1;11162:15;11055:132;-1:-1:-1;11201:9:10;;11007:209::o;11221:128::-;11261:3;11292:1;11288:6;11285:1;11282:13;11279:39;;;11298:18;;:::i;:::-;-1:-1:-1;11334:9:10;;11221:128::o;12659:274::-;12788:3;12826:6;12820:13;12842:53;12888:6;12883:3;12876:4;12868:6;12864:17;12842:53;:::i;:::-;12911:16;;;;;12659:274;-1:-1:-1;;12659:274:10:o;13217:371::-;-1:-1:-1;;;;;;13402:33:10;;13390:46;;13459:13;;13372:3;;13481:61;13459:13;13531:1;13522:11;;13515:4;13503:17;;13481:61;:::i;:::-;13562:16;;;;13580:1;13558:24;;13217:371;-1:-1:-1;;;13217:371:10:o;15250:188::-;15329:13;;-1:-1:-1;;;;;15371:42:10;;15361:53;;15351:81;;15428:1;15425;15418:12;15443:450;15530:6;15538;15546;15599:2;15587:9;15578:7;15574:23;15570:32;15567:52;;;15615:1;15612;15605:12;15567:52;15638:40;15668:9;15638:40;:::i;:::-;15628:50;;15697:49;15742:2;15731:9;15727:18;15697:49;:::i;:::-;15687:59;;15789:2;15778:9;15774:18;15768:25;15833:10;15826:5;15822:22;15815:5;15812:33;15802:61;;15859:1;15856;15849:12;15802:61;15882:5;15872:15;;;15443:450;;;;;:::o;15898:345::-;-1:-1:-1;;;;;16118:32:10;;;;16100:51;;16182:2;16167:18;;16160:34;;;;16225:2;16210:18;;16203:34;16088:2;16073:18;;15898:345::o;16248:446::-;16498:2;16487:9;16480:21;16537:1;16532:2;16521:9;16517:18;16510:29;-1:-1:-1;;;16570:2:10;16559:9;16555:18;16548:35;16621:3;16614:4;16603:9;16599:20;16592:33;16461:4;16642:46;16683:3;16672:9;16668:19;16660:6;16642:46;:::i;16699:610::-;16945:13;;16888:3;;16919;;16998:4;17025:15;;;16888:3;17068:175;17082:6;17079:1;17076:13;17068:175;;;17145:13;;17131:28;;17181:14;;;;17218:15;;;;17104:1;17097:9;17068:175;;;-1:-1:-1;;17252:21:10;;;-1:-1:-1;17289:14:10;;;;;-1:-1:-1;;;16699:610:10:o;17314:168::-;17354:7;17420:1;17416;17412:6;17408:14;17405:1;17402:21;17397:1;17390:9;17383:17;17379:45;17376:71;;;17427:18;;:::i;:::-;-1:-1:-1;17467:9:10;;17314:168::o;17676:484::-;17878:2;17860:21;;;17917:2;17897:18;;;17890:30;17956:34;17951:2;17936:18;;17929:62;18027:34;18022:2;18007:18;;18000:62;-1:-1:-1;;;18093:3:10;18078:19;;18071:47;18150:3;18135:19;;17676:484::o;18165:127::-;18226:10;18221:3;18217:20;18214:1;18207:31;18257:4;18254:1;18247:15;18281:4;18278:1;18271:15;18297:709;18362:5;18415:3;18408:4;18400:6;18396:17;18392:27;18382:55;;18433:1;18430;18423:12;18382:55;18462:6;18456:13;18488:4;18511:18;18507:2;18504:26;18501:52;;;18533:18;;:::i;:::-;18579:2;18576:1;18572:10;18602:28;18626:2;18622;18618:11;18602:28;:::i;:::-;18664:15;;;18734;;;18730:24;;;18695:12;;;;18766:15;;;18763:35;;;18794:1;18791;18784:12;18763:35;18830:2;18822:6;18818:15;18807:26;;18842:135;18858:6;18853:3;18850:15;18842:135;;;18924:10;;18912:23;;18875:12;;;;18955;;;;18842:135;;;18995:5;18297:709;-1:-1:-1;;;;;;;18297:709:10:o;19011:614::-;19140:6;19148;19201:2;19189:9;19180:7;19176:23;19172:32;19169:52;;;19217:1;19214;19207:12;19169:52;19250:9;19244:16;19279:18;19320:2;19312:6;19309:14;19306:34;;;19336:1;19333;19326:12;19306:34;19359:72;19423:7;19414:6;19403:9;19399:22;19359:72;:::i;:::-;19349:82;;19477:2;19466:9;19462:18;19456:25;19440:41;;19506:2;19496:8;19493:16;19490:36;;;19522:1;19519;19512:12;19490:36;;19545:74;19611:7;19600:8;19589:9;19585:24;19545:74;:::i;19630:442::-;-1:-1:-1;;;;;19877:32:10;;;;19859:51;;-1:-1:-1;;;;;;19946:33:10;;;;19941:2;19926:18;;19919:61;20011:2;19996:18;;19989:34;20054:2;20039:18;;20032:34;19846:3;19831:19;;19630:442::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/test/Pair.t.sol",
    "id": 22064,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        20737
      ],
      "ERC20Mintable": [
        21277
      ],
      "IERC20": [
        20756
      ],
      "InsufficientLiquidityBurned": [
        20760
      ],
      "InsufficientLiquidityMinted": [
        20758
      ],
      "Math": [
        21245
      ],
      "Pair": [
        21171
      ],
      "PairTest": [
        22014
      ],
      "StdStorage": [
        2919
      ],
      "Test": [
        2821
      ],
      "TestUser": [
        22063
      ],
      "TransferFailed": [
        20762
      ],
      "Vm": [
        4221
      ],
      "console": [
        12285
      ],
      "console2": [
        20349
      ],
      "stdError": [
        2891
      ],
      "stdMath": [
        4020
      ],
      "stdStorage": [
        3876
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:5155:9",
    "nodes": [
      {
        "id": 21279,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21280,
        "nodeType": "ImportDirective",
        "src": "65:28:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 4021,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21281,
        "nodeType": "ImportDirective",
        "src": "94:40:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/src/mocks/ERC20Mintable.sol",
        "file": "../src/mocks/ERC20Mintable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 21278,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21282,
        "nodeType": "ImportDirective",
        "src": "135:25:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/src/Pair.sol",
        "file": "../src/Pair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 22064,
        "sourceUnit": 21172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 22014,
        "nodeType": "ContractDefinition",
        "src": "162:4544:9",
        "nodes": [
          {
            "id": 21287,
            "nodeType": "VariableDeclaration",
            "src": "192:20:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "206:6:9",
            "scope": 22014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "id": 21286,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21285,
                "name": "ERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21277,
                "src": "192:13:9"
              },
              "referencedDeclaration": 21277,
              "src": "192:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                "typeString": "contract ERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21290,
            "nodeType": "VariableDeclaration",
            "src": "216:20:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "230:6:9",
            "scope": 22014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "id": 21289,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21288,
                "name": "ERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21277,
                "src": "216:13:9"
              },
              "referencedDeclaration": 21277,
              "src": "216:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                "typeString": "contract ERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21293,
            "nodeType": "VariableDeclaration",
            "src": "240:9:9",
            "constant": false,
            "mutability": "mutable",
            "name": "pair",
            "nameLocation": "245:4:9",
            "scope": 22014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pair_$21171",
              "typeString": "contract Pair"
            },
            "typeName": {
              "id": 21292,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21291,
                "name": "Pair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21171,
                "src": "240:4:9"
              },
              "referencedDeclaration": 21171,
              "src": "240:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pair_$21171",
                "typeString": "contract Pair"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21296,
            "nodeType": "VariableDeclaration",
            "src": "253:17:9",
            "constant": false,
            "mutability": "mutable",
            "name": "testUser",
            "nameLocation": "262:8:9",
            "scope": 22014,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestUser_$22063",
              "typeString": "contract TestUser"
            },
            "typeName": {
              "id": 21295,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21294,
                "name": "TestUser",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 22063,
                "src": "253:8:9"
              },
              "referencedDeclaration": 22063,
              "src": "253:8:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestUser_$22063",
                "typeString": "contract TestUser"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21380,
            "nodeType": "FunctionDefinition",
            "src": "275:396:9",
            "body": {
              "id": 21379,
              "nodeType": "Block",
              "src": "299:372:9",
              "statements": [
                {
                  "expression": {
                    "id": 21304,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21299,
                      "name": "testUser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21296,
                      "src": "305:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestUser_$22063",
                        "typeString": "contract TestUser"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 21302,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "316:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestUser_$22063_$",
                          "typeString": "function () returns (contract TestUser)"
                        },
                        "typeName": {
                          "id": 21301,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21300,
                            "name": "TestUser",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 22063,
                            "src": "320:8:9"
                          },
                          "referencedDeclaration": 22063,
                          "src": "320:8:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestUser_$22063",
                            "typeString": "contract TestUser"
                          }
                        }
                      },
                      "id": 21303,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "316:14:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestUser_$22063",
                        "typeString": "contract TestUser"
                      }
                    },
                    "src": "305:25:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestUser_$22063",
                      "typeString": "contract TestUser"
                    }
                  },
                  "id": 21305,
                  "nodeType": "ExpressionStatement",
                  "src": "305:25:9"
                },
                {
                  "expression": {
                    "id": 21313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21306,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21287,
                      "src": "337:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2041",
                          "id": 21310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "364:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f09e6315c5ad38217b44062a3f60687049dd16848287788aa371e8d009d3a832",
                            "typeString": "literal_string \"Token A\""
                          },
                          "value": "Token A"
                        },
                        {
                          "hexValue": "544b4e41",
                          "id": 21311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "375:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b106df192a59a6e11d3e1e835b4738acced3046503f1ad89cda8347e9e310797",
                            "typeString": "literal_string \"TKNA\""
                          },
                          "value": "TKNA"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_f09e6315c5ad38217b44062a3f60687049dd16848287788aa371e8d009d3a832",
                            "typeString": "literal_string \"Token A\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b106df192a59a6e11d3e1e835b4738acced3046503f1ad89cda8347e9e310797",
                            "typeString": "literal_string \"TKNA\""
                          }
                        ],
                        "id": 21309,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "346:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Mintable_$21277_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Mintable)"
                        },
                        "typeName": {
                          "id": 21308,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21307,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21277,
                            "src": "350:13:9"
                          },
                          "referencedDeclaration": 21277,
                          "src": "350:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                            "typeString": "contract ERC20Mintable"
                          }
                        }
                      },
                      "id": 21312,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "346:36:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "337:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 21314,
                  "nodeType": "ExpressionStatement",
                  "src": "337:45:9"
                },
                {
                  "expression": {
                    "id": 21322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21315,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21290,
                      "src": "388:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2042",
                          "id": 21319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "415:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6eaea0c540aa9592470798498af467c2817b0564eedff6da63a2451dd23f6442",
                            "typeString": "literal_string \"Token B\""
                          },
                          "value": "Token B"
                        },
                        {
                          "hexValue": "544b4e42",
                          "id": 21320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "426:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f9beef676c26f9f1e5d72045de2a8dd7a569eba98dc6de55d4b8cf66b8a7d630",
                            "typeString": "literal_string \"TKNB\""
                          },
                          "value": "TKNB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6eaea0c540aa9592470798498af467c2817b0564eedff6da63a2451dd23f6442",
                            "typeString": "literal_string \"Token B\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f9beef676c26f9f1e5d72045de2a8dd7a569eba98dc6de55d4b8cf66b8a7d630",
                            "typeString": "literal_string \"TKNB\""
                          }
                        ],
                        "id": 21318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "397:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Mintable_$21277_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Mintable)"
                        },
                        "typeName": {
                          "id": 21317,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21316,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21277,
                            "src": "401:13:9"
                          },
                          "referencedDeclaration": 21277,
                          "src": "401:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                            "typeString": "contract ERC20Mintable"
                          }
                        }
                      },
                      "id": 21321,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "397:36:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "388:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 21323,
                  "nodeType": "ExpressionStatement",
                  "src": "388:45:9"
                },
                {
                  "expression": {
                    "id": 21337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21324,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21293,
                      "src": "439:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pair_$21171",
                        "typeString": "contract Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21330,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21287,
                              "src": "463:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 21329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "455:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21328,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "455:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21331,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "455:15:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 21334,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21290,
                              "src": "480:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 21333,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "472:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21332,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "472:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21335,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "472:15:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21327,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "446:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Pair_$21171_$",
                          "typeString": "function (address,address) returns (contract Pair)"
                        },
                        "typeName": {
                          "id": 21326,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21325,
                            "name": "Pair",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21171,
                            "src": "450:4:9"
                          },
                          "referencedDeclaration": 21171,
                          "src": "450:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pair_$21171",
                            "typeString": "contract Pair"
                          }
                        }
                      },
                      "id": 21336,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "446:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pair_$21171",
                        "typeString": "contract Pair"
                      }
                    },
                    "src": "439:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pair_$21171",
                      "typeString": "contract Pair"
                    }
                  },
                  "id": 21338,
                  "nodeType": "ExpressionStatement",
                  "src": "439:49:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "507:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "525:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PairTest_$22014",
                              "typeString": "contract PairTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PairTest_$22014",
                              "typeString": "contract PairTest"
                            }
                          ],
                          "id": 21344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "517:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "517:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "517:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21339,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "495:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "495:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21348,
                  "nodeType": "ExpressionStatement",
                  "src": "495:36:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21352,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "549:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21355,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "567:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PairTest_$22014",
                              "typeString": "contract PairTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PairTest_$22014",
                              "typeString": "contract PairTest"
                            }
                          ],
                          "id": 21354,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "559:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21353,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "559:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "559:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21349,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "537:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "537:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "537:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21358,
                  "nodeType": "ExpressionStatement",
                  "src": "537:36:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "592:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21365,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21296,
                            "src": "610:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUser_$22063",
                              "typeString": "contract TestUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestUser_$22063",
                              "typeString": "contract TestUser"
                            }
                          ],
                          "id": 21364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "602:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21363,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "602:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "602:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21359,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "580:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21361,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "580:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "580:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21368,
                  "nodeType": "ExpressionStatement",
                  "src": "580:40:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21372,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "638:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21375,
                            "name": "testUser",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21296,
                            "src": "656:8:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestUser_$22063",
                              "typeString": "contract TestUser"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestUser_$22063",
                              "typeString": "contract TestUser"
                            }
                          ],
                          "id": 21374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "648:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "648:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "648:17:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21369,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "626:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "626:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "626:40:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21378,
                  "nodeType": "ExpressionStatement",
                  "src": "626:40:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "284:5:9",
            "parameters": {
              "id": 21297,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "289:2:9"
            },
            "returnParameters": {
              "id": 21298,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "299:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21408,
            "nodeType": "FunctionDefinition",
            "src": "677:311:9",
            "body": {
              "id": 21407,
              "nodeType": "Block",
              "src": "774:214:9",
              "statements": [
                {
                  "assignments": [
                    21388,
                    21390,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21388,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "793:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 21407,
                      "src": "785:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 21387,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21390,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "811:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 21407,
                      "src": "803:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 21389,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "803:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 21394,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21391,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "825:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21392,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21098,
                      "src": "825:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 21393,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "825:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "784:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21396,
                        "name": "reserve0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21388,
                        "src": "862:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "id": 21397,
                        "name": "expectedReserve0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21382,
                        "src": "872:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "hexValue": "756e6578706563746564207265736572766530",
                        "id": 21398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "890:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33f1aad64f74e1646ab9537e25b6bfbf604f5a47a4806707b5fe4f9cdb1885c9",
                          "typeString": "literal_string \"unexpected reserve0\""
                        },
                        "value": "unexpected reserve0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33f1aad64f74e1646ab9537e25b6bfbf604f5a47a4806707b5fe4f9cdb1885c9",
                          "typeString": "literal_string \"unexpected reserve0\""
                        }
                      ],
                      "id": 21395,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "853:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 21399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "853:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21400,
                  "nodeType": "ExpressionStatement",
                  "src": "853:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21402,
                        "name": "reserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21390,
                        "src": "931:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "id": 21403,
                        "name": "expectedReserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21384,
                        "src": "941:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "hexValue": "756e6578706563746564207265736572766531",
                        "id": 21404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "959:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c14ab5c2032c504be7319abfce6a2353dcabc63ef68bd8e67a38ff07c8bdaf0f",
                          "typeString": "literal_string \"unexpected reserve1\""
                        },
                        "value": "unexpected reserve1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c14ab5c2032c504be7319abfce6a2353dcabc63ef68bd8e67a38ff07c8bdaf0f",
                          "typeString": "literal_string \"unexpected reserve1\""
                        }
                      ],
                      "id": 21401,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "922:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 21405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "922:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21406,
                  "nodeType": "ExpressionStatement",
                  "src": "922:59:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertReserves",
            "nameLocation": "686:14:9",
            "parameters": {
              "id": 21385,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21382,
                  "mutability": "mutable",
                  "name": "expectedReserve0",
                  "nameLocation": "709:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 21408,
                  "src": "701:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 21381,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "701:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21384,
                  "mutability": "mutable",
                  "name": "expectedReserve1",
                  "nameLocation": "735:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 21408,
                  "src": "727:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 21383,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "727:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "700:52:9"
            },
            "returnParameters": {
              "id": 21386,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "774:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21462,
            "nodeType": "FunctionDefinition",
            "src": "994:318:9",
            "body": {
              "id": 21461,
              "nodeType": "Block",
              "src": "1030:282:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21416,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1064:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1056:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21414,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1056:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1056:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1071:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21411,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1040:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1040:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1040:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21420,
                  "nodeType": "ExpressionStatement",
                  "src": "1040:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21426,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1113:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1105:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1105:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1105:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1120:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21421,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1089:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21423,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1089:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1089:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21430,
                  "nodeType": "ExpressionStatement",
                  "src": "1089:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21431,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1139:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1139:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21434,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1139:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21435,
                  "nodeType": "ExpressionStatement",
                  "src": "1139:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21441,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1193:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21440,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1185:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21439,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1185:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21442,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1185:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21437,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1170:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21438,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1170:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21443,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1170:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        },
                        "id": 21446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 21444,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1201:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21445,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1211:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1201:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      ],
                      "id": 21436,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1161:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1161:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21448,
                  "nodeType": "ExpressionStatement",
                  "src": "1161:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 21450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1241:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 21451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1250:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21449,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "1226:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1226:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21453,
                  "nodeType": "ExpressionStatement",
                  "src": "1226:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21455,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1277:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "1277:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1277:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1297:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21454,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1268:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21459,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21460,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:37:9"
                }
              ]
            },
            "functionSelector": "0c379e9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintBootstrap",
            "nameLocation": "1003:17:9",
            "parameters": {
              "id": 21409,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1020:2:9"
            },
            "returnParameters": {
              "id": 21410,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1030:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21541,
            "nodeType": "FunctionDefinition",
            "src": "1318:469:9",
            "body": {
              "id": 21540,
              "nodeType": "Block",
              "src": "1364:423:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21470,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1398:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1390:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21468,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1390:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1390:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1405:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21465,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1374:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21467,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1374:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21473,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1374:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21474,
                  "nodeType": "ExpressionStatement",
                  "src": "1374:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21480,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1447:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21479,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1439:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21478,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1439:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21481,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1439:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1454:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21475,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1423:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21477,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1423:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1423:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21484,
                  "nodeType": "ExpressionStatement",
                  "src": "1423:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21485,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1473:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21487,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1473:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1473:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21489,
                  "nodeType": "ExpressionStatement",
                  "src": "1473:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21495,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1529:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1521:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21493,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1521:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1521:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1536:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21490,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1505:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1505:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1505:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21499,
                  "nodeType": "ExpressionStatement",
                  "src": "1505:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21505,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1578:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1570:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21503,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1570:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1570:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1585:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21500,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1554:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21502,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1554:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1554:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21509,
                  "nodeType": "ExpressionStatement",
                  "src": "1554:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21510,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1604:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21512,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1604:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1604:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21514,
                  "nodeType": "ExpressionStatement",
                  "src": "1604:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21520,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1668:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1660:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21518,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1660:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21521,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1660:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21516,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1645:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21517,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1645:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1645:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        },
                        "id": 21525,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 21523,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1676:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21524,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1686:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1676:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        }
                      ],
                      "id": 21515,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1636:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1636:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21527,
                  "nodeType": "ExpressionStatement",
                  "src": "1636:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21529,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1710:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21530,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "1710:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1710:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 21532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1730:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "id": 21528,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1701:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21534,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:37:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 21536,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1763:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "33",
                        "id": 21537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1772:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "id": 21535,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "1748:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1748:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21539,
                  "nodeType": "ExpressionStatement",
                  "src": "1748:32:9"
                }
              ]
            },
            "functionSelector": "b528f8d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintWhenTheresLiquidity",
            "nameLocation": "1327:27:9",
            "parameters": {
              "id": 21463,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1354:2:9"
            },
            "returnParameters": {
              "id": 21464,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1364:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21631,
            "nodeType": "FunctionDefinition",
            "src": "1793:519:9",
            "body": {
              "id": 21630,
              "nodeType": "Block",
              "src": "1830:482:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21549,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1864:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1856:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21547,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1856:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1856:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1871:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21544,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1840:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21546,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1840:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21553,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21559,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1913:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21558,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1905:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21557,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1905:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21560,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1905:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1920:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21554,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1889:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1889:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1889:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21563,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21564,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1939:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1939:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1939:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21568,
                  "nodeType": "ExpressionStatement",
                  "src": "1939:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21574,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2002:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21573,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1994:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21572,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1994:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21575,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1994:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21570,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1979:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1979:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1979:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        },
                        "id": 21579,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 21577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2010:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21578,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2020:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2010:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      ],
                      "id": 21569,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1970:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1970:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21581,
                  "nodeType": "ExpressionStatement",
                  "src": "1970:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 21583,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2050:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 21584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2059:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21582,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "2035:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21585,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2035:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21586,
                  "nodeType": "ExpressionStatement",
                  "src": "2035:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21592,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2102:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2094:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21590,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2094:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2094:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2109:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21587,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "2078:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2078:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2078:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21596,
                  "nodeType": "ExpressionStatement",
                  "src": "2078:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21602,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2151:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21601,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2143:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21600,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2143:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21603,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2143:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21604,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2158:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21597,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "2127:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21599,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2127:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21605,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2127:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21606,
                  "nodeType": "ExpressionStatement",
                  "src": "2127:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21607,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "2177:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21609,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "2177:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2177:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21611,
                  "nodeType": "ExpressionStatement",
                  "src": "2177:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21617,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2240:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21616,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2232:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21615,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2232:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21618,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2232:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21613,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2217:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21614,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "2217:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2217:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        },
                        "id": 21622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 21620,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2248:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21621,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2258:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2248:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        }
                      ],
                      "id": 21612,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2208:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2208:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21624,
                  "nodeType": "ExpressionStatement",
                  "src": "2208:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 21626,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2288:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "32",
                        "id": 21627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2297:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 21625,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "2273:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21628,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2273:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21629,
                  "nodeType": "ExpressionStatement",
                  "src": "2273:32:9"
                }
              ]
            },
            "functionSelector": "bc5759fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintUnbalanced",
            "nameLocation": "1802:18:9",
            "parameters": {
              "id": 21542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1820:2:9"
            },
            "returnParameters": {
              "id": 21543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1830:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21714,
            "nodeType": "FunctionDefinition",
            "src": "2318:444:9",
            "body": {
              "id": 21713,
              "nodeType": "Block",
              "src": "2345:417:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21639,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2379:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2371:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21637,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2371:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2371:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21641,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2386:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21634,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "2355:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2355:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2355:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21643,
                  "nodeType": "ExpressionStatement",
                  "src": "2355:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21649,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2428:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21648,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2420:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21647,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2420:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21650,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2420:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2435:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21644,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "2404:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21646,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2404:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21652,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21653,
                  "nodeType": "ExpressionStatement",
                  "src": "2404:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21654,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "2454:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21656,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "2454:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2454:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21658,
                  "nodeType": "ExpressionStatement",
                  "src": "2454:11:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21659,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "2475:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21661,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21058,
                      "src": "2475:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21662,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2475:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21663,
                  "nodeType": "ExpressionStatement",
                  "src": "2475:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21669,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2529:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2521:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21667,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2521:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21670,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2521:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21665,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2506:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21666,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "2506:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21671,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2506:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2537:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21664,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2497:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2497:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21674,
                  "nodeType": "ExpressionStatement",
                  "src": "2497:42:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31303030",
                        "id": 21676,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2564:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21677,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2570:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21675,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "2549:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21678,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2549:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21679,
                  "nodeType": "ExpressionStatement",
                  "src": "2549:26:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21681,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2594:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21682,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "2594:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2594:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2614:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21680,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2585:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21685,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2585:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21686,
                  "nodeType": "ExpressionStatement",
                  "src": "2585:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21692,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2663:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21691,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2655:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21690,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2655:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2655:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21688,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21287,
                            "src": "2638:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21689,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "2638:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21694,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2638:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        },
                        "id": 21697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 21695,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2671:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21696,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2682:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2671:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      ],
                      "id": 21687,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2629:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21698,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2629:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21699,
                  "nodeType": "ExpressionStatement",
                  "src": "2629:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21705,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2731:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21704,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2723:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21703,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2723:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2723:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21701,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21290,
                            "src": "2706:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21702,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "2706:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2706:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        },
                        "id": 21710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 21708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2739:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2750:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2739:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      ],
                      "id": 21700,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2697:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2697:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21712,
                  "nodeType": "ExpressionStatement",
                  "src": "2697:58:9"
                }
              ]
            },
            "functionSelector": "e13aba48",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBurn",
            "nameLocation": "2327:8:9",
            "parameters": {
              "id": 21632,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2335:2:9"
            },
            "returnParameters": {
              "id": 21633,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2345:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21822,
            "nodeType": "FunctionDefinition",
            "src": "2768:586:9",
            "body": {
              "id": 21821,
              "nodeType": "Block",
              "src": "2805:549:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21722,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2839:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2831:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21720,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2831:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21723,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2831:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21724,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2846:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21717,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "2815:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21719,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2815:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2815:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21726,
                  "nodeType": "ExpressionStatement",
                  "src": "2815:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21732,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2888:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2880:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2880:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2880:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2895:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21727,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "2864:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2864:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2864:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21736,
                  "nodeType": "ExpressionStatement",
                  "src": "2864:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21737,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "2914:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "2914:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2914:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21741,
                  "nodeType": "ExpressionStatement",
                  "src": "2914:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21747,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2960:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21746,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2952:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21745,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2952:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2952:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2967:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21742,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "2936:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21744,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2936:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2936:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21751,
                  "nodeType": "ExpressionStatement",
                  "src": "2936:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21757,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3009:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21756,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3001:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21755,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3001:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3001:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3016:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21752,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "2985:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2985:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2985:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21761,
                  "nodeType": "ExpressionStatement",
                  "src": "2985:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21762,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "3035:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21764,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "3035:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21765,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3035:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21766,
                  "nodeType": "ExpressionStatement",
                  "src": "3035:11:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21767,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "3067:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21769,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21058,
                      "src": "3067:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3067:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21771,
                  "nodeType": "ExpressionStatement",
                  "src": "3067:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21777,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3121:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21776,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3113:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21775,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3113:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3113:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21773,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3098:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21774,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3098:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21779,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3098:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21780,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3129:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21772,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3089:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21781,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3089:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21782,
                  "nodeType": "ExpressionStatement",
                  "src": "3089:42:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31353030",
                        "id": 21784,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3156:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        "value": "1500"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3162:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21783,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "3141:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3141:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21787,
                  "nodeType": "ExpressionStatement",
                  "src": "3141:26:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21789,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3186:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21790,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "3186:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21791,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3186:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21792,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3206:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21788,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3177:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3177:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21794,
                  "nodeType": "ExpressionStatement",
                  "src": "3177:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21800,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3255:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21799,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3247:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21798,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3247:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21801,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3247:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21796,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21287,
                            "src": "3230:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21797,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3230:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3230:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9999999999999998500_by_1",
                          "typeString": "int_const 9999999999999998500"
                        },
                        "id": 21805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 21803,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3263:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31353030",
                          "id": 21804,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3274:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "src": "3263:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9999999999999998500_by_1",
                          "typeString": "int_const 9999999999999998500"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9999999999999998500_by_1",
                          "typeString": "int_const 9999999999999998500"
                        }
                      ],
                      "id": 21795,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3221:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21806,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3221:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21807,
                  "nodeType": "ExpressionStatement",
                  "src": "3221:58:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21813,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3323:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21812,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3315:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21811,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3315:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21814,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3315:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21809,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21290,
                            "src": "3298:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3298:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21815,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        },
                        "id": 21818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 21816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3331:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3342:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3331:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      ],
                      "id": 21808,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3289:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3289:58:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21820,
                  "nodeType": "ExpressionStatement",
                  "src": "3289:58:9"
                }
              ]
            },
            "functionSelector": "be30cb72",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBurnUnbalanced",
            "nameLocation": "2777:18:9",
            "parameters": {
              "id": 21715,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2795:2:9"
            },
            "returnParameters": {
              "id": 21716,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2805:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22013,
            "nodeType": "FunctionDefinition",
            "src": "3360:1343:9",
            "body": {
              "id": 22012,
              "nodeType": "Block",
              "src": "3411:1292:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21830,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3468:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21829,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3460:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21828,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3460:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21831,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3460:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21834,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21287,
                            "src": "3495:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          ],
                          "id": 21833,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3487:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21832,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3487:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21835,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3487:15:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 21838,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21290,
                            "src": "3524:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          ],
                          "id": 21837,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3516:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21836,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3516:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3516:15:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3545:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 21841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3566:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21825,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21296,
                        "src": "3421:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestUser_$22063",
                          "typeString": "contract TestUser"
                        }
                      },
                      "id": 21827,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "provideLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22050,
                      "src": "3421:25:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint256) external"
                      }
                    },
                    "id": 21842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3421:162:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21843,
                  "nodeType": "ExpressionStatement",
                  "src": "3421:162:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21849,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "3626:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3618:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21847,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3618:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3618:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21845,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3603:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3603:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3603:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3634:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3594:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3594:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21854,
                  "nodeType": "ExpressionStatement",
                  "src": "3594:42:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21860,
                                "name": "testUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21296,
                                "src": "3678:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              ],
                              "id": 21859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3670:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21858,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3670:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21861,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3670:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21856,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3655:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21857,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3655:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21862,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3655:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        },
                        "id": 21865,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 21863,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3690:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3700:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "3690:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      ],
                      "id": 21855,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3646:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21866,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3646:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21867,
                  "nodeType": "ExpressionStatement",
                  "src": "3646:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21869,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3724:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "3724:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21871,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3724:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3744:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21868,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3715:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21873,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3715:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21874,
                  "nodeType": "ExpressionStatement",
                  "src": "3715:37:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21880,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3787:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21879,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3779:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21878,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3779:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3779:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21882,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3794:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21875,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "3763:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21877,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "3763:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3763:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21884,
                  "nodeType": "ExpressionStatement",
                  "src": "3763:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21890,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3836:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21889,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3828:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21888,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3828:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21891,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3828:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3843:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21885,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "3812:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "3812:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21893,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3812:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21894,
                  "nodeType": "ExpressionStatement",
                  "src": "3812:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21895,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "3862:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "3862:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3862:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21899,
                  "nodeType": "ExpressionStatement",
                  "src": "3862:11:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21900,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "3894:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21902,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21058,
                      "src": "3894:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3894:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21904,
                  "nodeType": "ExpressionStatement",
                  "src": "3894:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21910,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4017:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21909,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4009:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21908,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4009:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21911,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4009:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21906,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "3994:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "3994:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21912,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3994:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21913,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4025:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21905,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "3985:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21914,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3985:42:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21915,
                  "nodeType": "ExpressionStatement",
                  "src": "3985:42:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "312e35",
                        "id": 21917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4052:9:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000000000000_by_1",
                          "typeString": "int_const 1500000000000000000"
                        },
                        "value": "1.5"
                      },
                      {
                        "hexValue": "31",
                        "id": 21918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4063:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1500000000000000000_by_1",
                          "typeString": "int_const 1500000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21916,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "4037:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21919,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4037:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21920,
                  "nodeType": "ExpressionStatement",
                  "src": "4037:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21922,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "4090:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "4090:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21924,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4090:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4110:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21921,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4081:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21926,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4081:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21927,
                  "nodeType": "ExpressionStatement",
                  "src": "4081:37:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21933,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4162:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21932,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4154:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21931,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4154:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21934,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4154:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21929,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21287,
                            "src": "4137:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21930,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "4137:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4137:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        },
                        "id": 21938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 21936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4170:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "302e35",
                          "id": 21937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4181:9:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000000000000000_by_1",
                            "typeString": "int_const 500000000000000000"
                          },
                          "value": "0.5"
                        },
                        "src": "4170:20:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9500000000000000000_by_1",
                          "typeString": "int_const 9500000000000000000"
                        }
                      ],
                      "id": 21928,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4128:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4128:63:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21940,
                  "nodeType": "ExpressionStatement",
                  "src": "4128:63:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21946,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "4235:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$22014",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4227:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21944,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4227:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21947,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4227:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21942,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21290,
                            "src": "4210:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "4210:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4210:31:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130",
                        "id": 21949,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4243:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        }
                      ],
                      "id": 21941,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4201:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4201:51:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21951,
                  "nodeType": "ExpressionStatement",
                  "src": "4201:51:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21957,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "4298:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4290:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21955,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4290:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21958,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4290:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21952,
                        "name": "testUser",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21296,
                        "src": "4263:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestUser_$22063",
                          "typeString": "contract TestUser"
                        }
                      },
                      "id": 21954,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawLiquidity",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 22062,
                      "src": "4263:26:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 21959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4263:41:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21960,
                  "nodeType": "ExpressionStatement",
                  "src": "4263:41:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21966,
                                "name": "testUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21296,
                                "src": "4412:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              ],
                              "id": 21965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4404:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21964,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4404:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21967,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4404:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21962,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "4389:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "4389:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21968,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4389:33:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 21969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4424:1:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 21961,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4380:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21970,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4380:46:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21971,
                  "nodeType": "ExpressionStatement",
                  "src": "4380:46:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31353030",
                        "id": 21973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4451:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        "value": "1500"
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4457:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1500_by_1",
                          "typeString": "int_const 1500"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21972,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21408,
                      "src": "4436:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4436:26:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21976,
                  "nodeType": "ExpressionStatement",
                  "src": "4436:26:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21978,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "4481:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "4481:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21980,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4481:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31303030",
                        "id": 21981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4501:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        },
                        "value": "1000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000_by_1",
                          "typeString": "int_const 1000"
                        }
                      ],
                      "id": 21977,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4472:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:34:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21983,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:34:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21989,
                                "name": "testUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21296,
                                "src": "4563:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              ],
                              "id": 21988,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4555:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21987,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4555:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21990,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4555:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21985,
                            "name": "token0",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21287,
                            "src": "4538:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 21986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "4538:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21991,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4538:35:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_10499999999999998500_by_1",
                          "typeString": "int_const 10499999999999998500"
                        },
                        "id": 21996,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_10500000000000000000_by_1",
                            "typeString": "int_const 10500000000000000000"
                          },
                          "id": 21994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 21992,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4587:8:9",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "302e35",
                            "id": 21993,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4598:9:9",
                            "subdenomination": "ether",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_500000000000000000_by_1",
                              "typeString": "int_const 500000000000000000"
                            },
                            "value": "0.5"
                          },
                          "src": "4587:20:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10500000000000000000_by_1",
                            "typeString": "int_const 10500000000000000000"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31353030",
                          "id": 21995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4610:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1500_by_1",
                            "typeString": "int_const 1500"
                          },
                          "value": "1500"
                        },
                        "src": "4587:27:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10499999999999998500_by_1",
                          "typeString": "int_const 10499999999999998500"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_10499999999999998500_by_1",
                          "typeString": "int_const 10499999999999998500"
                        }
                      ],
                      "id": 21984,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4516:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21997,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4516:108:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21998,
                  "nodeType": "ExpressionStatement",
                  "src": "4516:108:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 22004,
                                "name": "testUser",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 21296,
                                "src": "4668:8:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_TestUser_$22063",
                                  "typeString": "contract TestUser"
                                }
                              ],
                              "id": 22003,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4660:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 22002,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4660:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 22005,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4660:17:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 22000,
                            "name": "token1",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21290,
                            "src": "4643:6:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                              "typeString": "contract ERC20Mintable"
                            }
                          },
                          "id": 22001,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "4643:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 22006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4643:35:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        },
                        "id": 22009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "3130",
                          "id": 22007,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4680:8:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_10000000000000000000_by_1",
                            "typeString": "int_const 10000000000000000000"
                          },
                          "value": "10"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 22008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4691:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "4680:15:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_9999999999999999000_by_1",
                          "typeString": "int_const 9999999999999999000"
                        }
                      ],
                      "id": 21999,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "4634:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 22010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4634:62:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22011,
                  "nodeType": "ExpressionStatement",
                  "src": "4634:62:9"
                }
              ]
            },
            "functionSelector": "86ebc88a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testBurnUnbalancedDifferentUsers",
            "nameLocation": "3369:32:9",
            "parameters": {
              "id": 21823,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3401:2:9"
            },
            "returnParameters": {
              "id": 21824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3411:0:9"
            },
            "scope": 22014,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21283,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2821,
              "src": "183:4:9"
            },
            "id": 21284,
            "nodeType": "InheritanceSpecifier",
            "src": "183:4:9"
          }
        ],
        "canonicalName": "PairTest",
        "contractDependencies": [
          21171,
          21277,
          22063
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22014,
          2821,
          1786
        ],
        "name": "PairTest",
        "nameLocation": "171:8:9",
        "scope": 22064,
        "usedErrors": []
      },
      {
        "id": 22063,
        "nodeType": "ContractDefinition",
        "src": "4708:486:9",
        "nodes": [
          {
            "id": 22050,
            "nodeType": "FunctionDefinition",
            "src": "4732:356:9",
            "body": {
              "id": 22049,
              "nodeType": "Block",
              "src": "4917:171:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22031,
                        "name": "pairAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "4958:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22032,
                        "name": "amount0_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22022,
                        "src": "4972:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 22028,
                            "name": "token0Address_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22018,
                            "src": "4933:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22027,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20737,
                          "src": "4927:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$20737_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 22029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4927:21:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$20737",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 22030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "4927:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 22033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4927:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22034,
                  "nodeType": "ExpressionStatement",
                  "src": "4927:54:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22039,
                        "name": "pairAddress_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22016,
                        "src": "5022:12:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 22040,
                        "name": "amount1_",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22024,
                        "src": "5036:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 22036,
                            "name": "token1Address_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22020,
                            "src": "4997:14:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22035,
                          "name": "ERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 20737,
                          "src": "4991:5:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC20_$20737_$",
                            "typeString": "type(contract ERC20)"
                          }
                        },
                        "id": 22037,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4991:21:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20_$20737",
                          "typeString": "contract ERC20"
                        }
                      },
                      "id": 22038,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "4991:30:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 22041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4991:54:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22042,
                  "nodeType": "ExpressionStatement",
                  "src": "4991:54:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 22044,
                            "name": "pairAddress_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22016,
                            "src": "5061:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22043,
                          "name": "Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21171,
                          "src": "5056:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pair_$21171_$",
                            "typeString": "type(contract Pair)"
                          }
                        },
                        "id": 22045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5056:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 22046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "5056:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 22047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5056:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22048,
                  "nodeType": "ExpressionStatement",
                  "src": "5056:25:9"
                }
              ]
            },
            "functionSelector": "e09b89aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "provideLiquidity",
            "nameLocation": "4741:16:9",
            "parameters": {
              "id": 22025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22016,
                  "mutability": "mutable",
                  "name": "pairAddress_",
                  "nameLocation": "4775:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "4767:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22018,
                  "mutability": "mutable",
                  "name": "token0Address_",
                  "nameLocation": "4805:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "4797:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4797:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22020,
                  "mutability": "mutable",
                  "name": "token1Address_",
                  "nameLocation": "4837:14:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "4829:22:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22019,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4829:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22022,
                  "mutability": "mutable",
                  "name": "amount0_",
                  "nameLocation": "4869:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "4861:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22021,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4861:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 22024,
                  "mutability": "mutable",
                  "name": "amount1_",
                  "nameLocation": "4895:8:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22050,
                  "src": "4887:16:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 22023,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4887:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4757:152:9"
            },
            "returnParameters": {
              "id": 22026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4917:0:9"
            },
            "scope": 22063,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 22062,
            "nodeType": "FunctionDefinition",
            "src": "5094:98:9",
            "body": {
              "id": 22061,
              "nodeType": "Block",
              "src": "5150:42:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "id": 22056,
                            "name": "pairAddress_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 22052,
                            "src": "5165:12:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 22055,
                          "name": "Pair",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21171,
                          "src": "5160:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Pair_$21171_$",
                            "typeString": "type(contract Pair)"
                          }
                        },
                        "id": 22057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5160:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 22058,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "burn",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21058,
                      "src": "5160:23:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 22059,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5160:25:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22060,
                  "nodeType": "ExpressionStatement",
                  "src": "5160:25:9"
                }
              ]
            },
            "functionSelector": "9d67ac37",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawLiquidity",
            "nameLocation": "5103:17:9",
            "parameters": {
              "id": 22053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22052,
                  "mutability": "mutable",
                  "name": "pairAddress_",
                  "nameLocation": "5129:12:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 22062,
                  "src": "5121:20:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5121:7:9",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5120:22:9"
            },
            "returnParameters": {
              "id": 22054,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5150:0:9"
            },
            "scope": 22063,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "TestUser",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          22063
        ],
        "name": "TestUser",
        "nameLocation": "4717:8:9",
        "scope": 22064,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}
{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "msg",
          "type": "string"
        }
      ],
      "name": "WARNING_Deprecated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "x",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "min",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        }
      ],
      "name": "bound",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "adjust",
          "type": "bool"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "deal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "args",
          "type": "bytes"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "what",
          "type": "string"
        }
      ],
      "name": "deployCode",
      "outputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "hoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "rewind",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "time",
          "type": "uint256"
        }
      ],
      "name": "skip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "who",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "origin",
          "type": "address"
        }
      ],
      "name": "startHoax",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintBootstrap",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintUnbalanced",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "testMintWhenTheresLiquidity",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "give",
          "type": "uint256"
        }
      ],
      "name": "tip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "vm",
      "outputs": [
        {
          "internalType": "contract Vm",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040526000805460ff1916600117905534801561001d57600080fd5b506163478061002d6000396000f3fe60806040523480156200001157600080fd5b5060043610620001755760003560e01c806397754ae911620000d3578063bc5759fa1162000086578063bc5759fa1462000323578063c88a5e6d146200032d578063d06d82291462000344578063d82555f1146200035b578063e9a79a7b1462000372578063fa7626d4146200038957600080fd5b806397754ae914620002a25780639a8325a014620002b9578063af9bbe5f14620002d0578063b528f8d514620002e7578063b9c071b414620002f1578063ba414fa6146200030857600080fd5b80632d6c17a3116200012c5780632d6c17a314620002095780633a76846314620002205780633bf82db114620002375780635a6c1eed146200024e5780636bce989b14620002745780636f597075146200028b57600080fd5b80630a9254e4146200017a5780630c379e9e1462000186578063108554f21462000190578063233240ee14620001a757806329a9e30014620001be57806329ce9dde14620001d5575b600080fd5b6200018462000397565b005b62000184620005da565b62000184620001a1366004620032fb565b6200086e565b62000184620001b836600462003328565b62000947565b62000184620001cf3660046200334d565b62000a23565b620001ec620001e636600462003460565b62000ad5565b6040516001600160a01b0390911681526020015b60405180910390f35b620001846200021a366004620034e0565b62000b8e565b620001ec600080516020620062d283398151915281565b6200018462000248366004620034fa565b62000bce565b620002656200025f3660046200353b565b62000cb0565b60405190815260200162000200565b6200018462000285366004620034fa565b62000db8565b620001846200029c36600462003328565b62000dcc565b62000184620002b336600462003577565b62000e76565b620001ec620002ca366004620035cd565b620010b7565b62000184620002e1366004620034fa565b6200114c565b62000184620011fa565b6200018462000302366004620034e0565b62001604565b6200031262001625565b604051901515815260200162000200565b6200018462001756565b620001846200033e366004620032fb565b62001b2f565b62000184620003553660046200334d565b62001b65565b620001846200036c366004620034fa565b62001c17565b6200018462000383366004620032fb565b62001cc8565b600054620003129060ff1681565b604051620003a59062003289565b604080825260079082015266546f6b656e204160c81b606082015260806020820181905260049082015263544b4e4160e01b60a082015260c001604051809103906000f080158015620003fc573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516200042b9062003289565b6040808252600790820152662a37b5b2b7102160c91b6060820152608060208201819052600490820152632a25a72160e11b60a082015260c001604051809103906000f08015801562000482573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316908117909155600854604051921691620004b69062003297565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620004ea573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283161790556008546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201529116906394bf804d90604401600060405180830381600087803b1580156200055257600080fd5b505af115801562000567573d6000803e3d6000fd5b50506009546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201526001600160a01b0390911692506394bf804d9150604401600060405180830381600087803b158015620005bf57600080fd5b505af1158015620005d4573d6000803e3d6000fd5b50505050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200061a92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000660919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620006a192911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620006c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e7919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200073957600080fd5b505af11580156200074e573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620007d693506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620007a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c7919062003647565b670de0b6b3a763fc1862001d6e565b620007ea670de0b6b3a76400008062001e9d565b600a54604080516318160ddd60e01b815290516200086c926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000837573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085d919062003647565b670de0b6b3a764000062001d6e565b565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d90620008a490859085906004016200360e565b600060405180830381600087803b158015620008bf57600080fd5b505af1158015620008d4573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620062d283398151915292506306447d5691506024015b600060405180830381600087803b1580156200092a57600080fd5b505af11580156200093f573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000981908490600160801b906004016200360e565b600060405180830381600087803b1580156200099c57600080fd5b505af1158015620009b1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620062d2833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000a0757600080fd5b505af115801562000a1c573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000a5d908590600160801b906004016200360e565b600060405180830381600087803b15801562000a7857600080fd5b505af115801562000a8d573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620062d283398151915292506347e50cce91506044016200090f565b604051638d1cc92560e01b81526000908190600080516020620062d283398151915290638d1cc9259062000b0e908790600401620036be565b6000604051808303816000875af115801562000b2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b589190810190620036d3565b8360405160200162000b6c92919062003753565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620062d283398151915263e5d6bf0262000baf83426200379c565b6040518263ffffffff1660e01b8152600401620009ec91815260200190565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000c0490869085906004016200360e565b600060405180830381600087803b15801562000c1f57600080fd5b505af115801562000c34573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620062d283398151915292506345b5607891506044015b600060405180830381600087803b15801562000c9257600080fd5b505af115801562000ca7573d6000803e3d6000fd5b50505050505050565b60008183111562000cfc5760405162461bcd60e51b815260206004820152601160248201527026a0ac2fa622a9a9afaa2420a72fa6a4a760791b60448201526064015b60405180910390fd5b600062000d0a84846200379c565b90508060000362000d1e5783915062000d5b565b801962000d2e5784915062000d5b565b62000d3981620037b6565b9050600062000d498287620037d2565b905062000d578186620037f5565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000dc7838383600062000e76565b505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000e06908490600160801b906004016200360e565b600060405180830381600087803b15801562000e2157600080fd5b505af115801562000e36573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620062d283398151915292506306447d569150602401620009ec565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000ecc9162003810565b6000604051808303816000865af19150503d806000811462000f0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000f10565b606091505b5091505060008180602001905181019062000f2c919062003647565b905062000f9e8462000f978762000f6e6370a0823160e01b62000f5160018d62001fb3565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001fd8565b82156200093f5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000fe9919062003810565b6000604051808303816000865af19150503d806000811462001028576040519150601f19603f3d011682016040523d82523d6000602084013e6200102d565b606091505b5091505060008180602001905181019062001049919062003647565b90508286101562001074576200106086846200379c565b6200106c90826200379c565b90506200108f565b6200108083876200379c565b6200108c9082620037f5565b90505b620010ad8162000f976318160ddd60e01b62000f5160018d62001fb3565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620062d283398151915290638d1cc92590620010f0908690600401620036be565b6000604051808303816000875af115801562001110573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200113a9190810190620036d3565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d906200118290869085906004016200360e565b600060405180830381600087803b1580156200119d57600080fd5b505af1158015620011b2573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620062d283398151915292506347e50cce915060440162000c77565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200123a92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001280919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620012c192911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620012e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001307919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200135957600080fd5b505af11580156200136e573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620013b39290911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af1158015620013d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013f9919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200143a92911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af11580156200145a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001480919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620014d257600080fd5b505af1158015620014e7573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200156e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001539573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200155f919062003647565b6729a2241af62bfc1862001d6e565b600a54604080516318160ddd60e01b81529051620015f0926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620015bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015e1919062003647565b6729a2241af62c000062001d6e565b6200086c6729a2241af62c00008062001e9d565b600080516020620062d283398151915263e5d6bf0262000baf8342620037f5565b60008054610100900460ff1615620016465750600054610100900460ff1690565b6000600080516020620062d28339815191523b156200175157604051600090600080516020620062d2833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620016b39083906519985a5b195960d21b906020016200360e565b60408051601f1981840301815290829052620016d392916020016200382e565b60408051601f1981840301815290829052620016ef9162003810565b6000604051808303816000865af19150503d80600081146200172e576040519150601f19603f3d011682016040523d82523d6000602084013e62001733565b606091505b50915050808060200190518101906200174d919062003627565b9150505b919050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200179692911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620017b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017dc919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200181d92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200183d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001863919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018b557600080fd5b505af1158015620018ca573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200190493506001600160a01b0390911691506370a082319060240162000783565b62001918670de0b6b3a76400008062001e9d565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200195892911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af115801562001978573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200199e919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620019df92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620019ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a25919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a7757600080fd5b505af115801562001a8c573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262001b1393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001ade573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b04919062003647565b671bc16d674ec7fc1862001d6e565b6200086c6729a2241af62c0000671bc16d674ec8000062001e9d565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d906200090f90859085906004016200360e565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062001b9f908590600160801b906004016200360e565b600060405180830381600087803b15801562001bba57600080fd5b505af115801562001bcf573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620062d283398151915292506345b5607891506044016200090f565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a60405162001c9d906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000dc78162000f978462000f6e6370a0823160e01b62000f5160018a62001fb3565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062001cfe90859085906004016200360e565b600060405180830381600087803b15801562001d1957600080fd5b505af115801562001d2e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620062d2833981519152925063ca669fa791506024016200090f565b80821462001e99577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001de19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162001e9962001fe4565b5050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801562001ef4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f1a919062003879565b509150915062001f69826001600160701b0316856001600160701b0316604051806040016040528060138152602001720756e657870656374656420726573657276653606c1b815250620020e8565b620005d4816001600160701b0316846001600160701b031660405180604001604052806013815260200172756e657870656374656420726573657276653160681b815250620020e8565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001e99828262002135565b600080516020620062d28339815191523b15620020d757604051600090600080516020620062d2833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620020529083906519985a5b195960d21b90600190602001620038cf565b60408051601f19818403018152908290526200207292916020016200382e565b60408051601f19818403018152908290526200208e9162003810565b6000604051808303816000865af19150503d8060008114620020cd576040519150601f19603f3d011682016040523d82523d6000602084013e620020d2565b606091505b505050505b6000805461ff001916610100179055565b81831462000dc7577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620021219190620038f0565b60405180910390a162000dc7838362001d6e565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620021a857602002820191906000526020600020905b81548152602001906001019080831162002193575b50505050509050600083620021bd836200249e565b604051602001620021d09291906200382e565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200222491869188910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200225f576200225d8762002552565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620022a091879189910162003921565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620022e7919062003810565b600060405180830381855afa9150503d806000811462002324576040519150601f19603f3d011682016040523d82523d6000602084013e62002329565b606091505b50915062002346905081620023408860206200395d565b620031ff565b604051630667f9d760e41b815290925060009150600080516020620062d28339815191529063667f9d709062002383908b9087906004016200360e565b6020604051808303816000875af1158015620023a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c9919062003647565b9050808214620023ed5760405162461bcd60e51b815260040162000cf3906200397f565b6040516370ca10bb60e01b8152600080516020620062d2833981519152906370ca10bb9062002425908b9087908e90600401620038cf565b600060405180830381600087803b1580156200244057600080fd5b505af115801562002455573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200248a60028b016000620032a5565b896004016000905550505050505050505050565b6060600082516020620024b291906200395d565b67ffffffffffffffff811115620024cd57620024cd62003385565b6040519080825280601f01601f191660200182016040528015620024f8576020820181803683370190505b50905060005b83518110156200254b5760008482815181106200251f576200251f620039f5565b6020026020010151905080826020026020018401525080806200254290620037b6565b915050620024fe565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620025c457602002820191906000526020600020905b815481526020019060010190808311620025af575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620026109250859187910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620026af576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200267f91859187910162003921565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620026bd836200249e565b604051602001620026d09291906200382e565b6040516020818303038152906040529050600080516020620062f283398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200272f57600080fd5b505af115801562002744573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002765919062003810565b600060405180830381855afa9150503d8060008114620027a2576040519150601f19603f3d011682016040523d82523d6000602084013e620027a7565b606091505b509150620027be905081620023408760206200395d565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620062d2833981519152906365bc9481906024016000604051808303816000875af11580156200281b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002845919081019062003a94565b509050805160010362002b0e576000600080516020620062f283398151915260001c6001600160a01b031663667f9d7089846000815181106200288c576200288c620039f5565b60200260200101516040518363ffffffff1660e01b8152600401620028b39291906200360e565b6020604051808303816000875af1158015620028d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028f9919062003647565b9050806200295d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110620029395762002939620039f5565b602002602001015160001c604051620029549291906200360e565b60405180910390a15b8083146200297f5760405162461bcd60e51b815260040162000cf3906200397f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620029b792919062003921565b6040516020818303038152906040528051906020012085600081518110620029e357620029e3620039f5565b602002602001015160001c60405162002a00949392919062003af5565b60405180910390a18160008151811062002a1e5762002a1e620039f5565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002a69918a918c910162003921565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002ad3918a918c910162003921565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620030af565b6001815111156200305b5760005b815181101562003054576000600080516020620062f283398151915260001c6001600160a01b031663667f9d708a85858151811062002b5f5762002b5f620039f5565b60200260200101516040518363ffffffff1660e01b815260040162002b869291906200360e565b6020604051808303816000875af115801562002ba6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bcc919062003647565b90508062002c2f577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062002c0b5762002c0b620039f5565b602002602001015160001c60405162002c269291906200360e565b60405180910390a15b600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8a85858151811062002c665762002c66620039f5565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162002c9493929190620038cf565b600060405180830381600087803b15801562002caf57600080fd5b505af115801562002cc4573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002ce6919062003810565b600060405180830381855afa9150503d806000811462002d23576040519150601f19603f3d011682016040523d82523d6000602084013e62002d28565b606091505b50909250905062002d4081620023408b60206200395d565b955081801562002d54575061133760f01b86145b1562002fa7577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002d9292919062003921565b6040516020818303038152906040528051906020012088888151811062002dbd5762002dbd620039f5565b602002602001015160001c60405162002dda949392919062003af5565b60405180910390a184848151811062002df75762002df7620039f5565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002e42918d918f910162003921565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002ecf92919062003921565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8c87878151811062002f415762002f41620039f5565b6020026020010151866040518463ffffffff1660e01b815260040162002f6a93929190620038cf565b600060405180830381600087803b15801562002f8557600080fd5b505af115801562002f9a573d6000803e3d6000fd5b5050505050505062003054565b600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8c87878151811062002fde5762002fde620039f5565b6020026020010151866040518463ffffffff1660e01b81526004016200300793929190620038cf565b600060405180830381600087803b1580156200302257600080fd5b505af115801562003037573d6000803e3d6000fd5b5050505050505080806200304b90620037b6565b91505062002b1c565b50620030af565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b606482015260840162000cf3565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620030f39188918a910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620031555760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b604482015260640162000cf3565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200318660028a016000620032a5565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620031cc9188918a910162003921565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200321657845162003219565b60205b905060005b818110156200327f57620032348160086200395d565b86620032418388620037f5565b81518110620032545762003254620039f5565b01602001516001600160f81b031916901c9290921791806200327681620037b6565b9150506200321e565b5090949350505050565b610f7b8062003b2683390190565b6118318062004aa183390190565b5080546000825590600052602060002090810190620032c59190620032c8565b50565b5b80821115620032df5760008155600101620032c9565b5090565b80356001600160a01b03811681146200175157600080fd5b600080604083850312156200330f57600080fd5b6200331a83620032e3565b946020939093013593505050565b6000602082840312156200333b57600080fd5b6200334682620032e3565b9392505050565b600080604083850312156200336157600080fd5b6200336c83620032e3565b91506200337c60208401620032e3565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620033c757620033c762003385565b604052919050565b600067ffffffffffffffff821115620033ec57620033ec62003385565b50601f01601f191660200190565b6000620034116200340b84620033cf565b6200339b565b90508281528383830111156200342657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200344f57600080fd5b6200334683833560208501620033fa565b600080604083850312156200347457600080fd5b823567ffffffffffffffff808211156200348d57600080fd5b6200349b868387016200343d565b93506020850135915080821115620034b257600080fd5b508301601f81018513620034c557600080fd5b620034d685823560208401620033fa565b9150509250929050565b600060208284031215620034f357600080fd5b5035919050565b6000806000606084860312156200351057600080fd5b6200351b84620032e3565b92506200352b60208501620032e3565b9150604084013590509250925092565b6000806000606084860312156200355157600080fd5b505081359360208301359350604090920135919050565b8015158114620032c557600080fd5b600080600080608085870312156200358e57600080fd5b6200359985620032e3565b9350620035a960208601620032e3565b9250604085013591506060850135620035c28162003568565b939692955090935050565b600060208284031215620035e057600080fd5b813567ffffffffffffffff811115620035f857600080fd5b62003606848285016200343d565b949350505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200363a57600080fd5b8151620033468162003568565b6000602082840312156200365a57600080fd5b5051919050565b60005b838110156200367e57818101518382015260200162003664565b83811115620005d45750506000910152565b60008151808452620036aa81602086016020860162003661565b601f01601f19169290920160200192915050565b60208152600062003346602083018462003690565b600060208284031215620036e657600080fd5b815167ffffffffffffffff811115620036fe57600080fd5b8201601f810184136200371057600080fd5b8051620037216200340b82620033cf565b8181528560208385010111156200373757600080fd5b6200374a82602083016020860162003661565b95945050505050565b600083516200376781846020880162003661565b8351908301906200377d81836020880162003661565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620037b157620037b162003786565b500390565b600060018201620037cb57620037cb62003786565b5060010190565b600082620037f057634e487b7160e01b600052601260045260246000fd5b500690565b600082198211156200380b576200380b62003786565b500190565b600082516200382481846020870162003661565b9190910192915050565b6001600160e01b03198316815281516000906200385381600485016020870162003661565b919091016004019392505050565b80516001600160701b03811681146200175157600080fd5b6000806000606084860312156200388f57600080fd5b6200389a8462003861565b9250620038aa6020850162003861565b9150604084015163ffffffff81168114620038c457600080fd5b809150509250925092565b6001600160a01b039390931683526020830191909152604082015260600190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062003346608083018462003690565b825160009082906020808701845b838110156200394d578151855293820193908201906001016200392f565b5050948252509092019392505050565b60008160001904831182151516156200397a576200397a62003786565b500290565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262003a1d57600080fd5b8151602067ffffffffffffffff82111562003a3c5762003a3c62003385565b8160051b62003a4d8282016200339b565b928352848101820192828101908785111562003a6857600080fd5b83870192505b8483101562003a895782518252918301919083019062003a6e565b979650505050505050565b6000806040838503121562003aa857600080fd5b825167ffffffffffffffff8082111562003ac157600080fd5b62003acf8683870162003a0b565b9350602085015191508082111562003ae657600080fd5b50620034d68582860162003a0b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60e06040523480156200001157600080fd5b5060405162000f7b38038062000f7b83398101604081905262000034916200029a565b8181601282600090805190602001906200005092919062000127565b5081516200006690600190602085019062000127565b5060ff81166080524660a0526200007c6200008b565b60c05250620003e39350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf919062000340565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001359062000304565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b60008060408385031215620002ae57600080fd5b82516001600160401b0380821115620002c657600080fd5b620002d486838701620001e3565b93506020850151915080821115620002eb57600080fd5b50620002fa85828601620001e3565b9150509250929050565b600181811c908216806200031957607f821691505b6020821081036200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200035d57607f831692505b602080841082036200037d57634e487b7160e01b86526022600452602486fd5b818015620003945760018114620003a657620003d5565b60ff19861689528489019650620003d5565b60008a81526020902060005b86811015620003cd5781548b820152908501908301620003b2565b505084890196505b509498975050505050505050565b60805160a05160c051610b686200041360003960006104530152600061041e015260006101440152610b686000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101d5578063a9059cbb146101dd578063d505accf146101f0578063dd62ed3e1461020357600080fd5b806370a08231146101805780637ecebe00146101a057806394bf804d146101c057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633644e51514610178575b600080fd5b6100dc61022e565b6040516100e99190610856565b60405180910390f35b6101056101003660046108c7565b6102bc565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046108f1565b610328565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61011e61041a565b61011e61018e36600461092d565b60036020526000908152604090205481565b61011e6101ae36600461092d565b60056020526000908152604090205481565b6101d36101ce36600461094f565b610475565b005b6100dc610483565b6101056101eb3660046108c7565b610490565b6101d36101fe36600461097b565b610508565b61011e6102113660046109ee565b600460209081526000928352604080842090915290825290205481565b6000805461023b90610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610a18565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103179086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103845761035f8382610a68565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103ac908490610a68565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104079087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104505761044b610751565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61047f81836107eb565b5050565b6001805461023b90610a18565b336000908152600360205260408120805483919083906104b1908490610a68565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103179086815260200190565b4284101561055d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161056961041a565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ab5750876001600160a01b0316816001600160a01b0316145b6106e85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610554565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107839190610a7f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107fd9190610b1a565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561088357858101830151858201604001528201610867565b81811115610895576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108c257600080fd5b919050565b600080604083850312156108da57600080fd5b6108e3836108ab565b946020939093013593505050565b60008060006060848603121561090657600080fd5b61090f846108ab565b925061091d602085016108ab565b9150604084013590509250925092565b60006020828403121561093f57600080fd5b610948826108ab565b9392505050565b6000806040838503121561096257600080fd5b82359150610972602084016108ab565b90509250929050565b600080600080600080600060e0888a03121561099657600080fd5b61099f886108ab565b96506109ad602089016108ab565b95506040880135945060608801359350608088013560ff811681146109d157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a0157600080fd5b610a0a836108ab565b9150610972602084016108ab565b600181811c90821680610a2c57607f821691505b602082108103610a4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a7a57610a7a610a52565b500390565b600080835481600182811c915080831680610a9b57607f831692505b60208084108203610aba57634e487b7160e01b86526022600452602486fd5b818015610ace5760018114610adf57610b0c565b60ff19861689528489019650610b0c565b60008a81526020902060005b86811015610b045781548b820152908501908301610aeb565b505084890196505b509498975050505050505050565b60008219821115610b2d57610b2d610a52565b50019056fea26469706673582212208107c83fe54392e1cf62e853d5bc41248a95eadf74bbdc5ada4ec046d33d9e4964736f6c634300080d003360e06040523480156200001157600080fd5b506040516200183138038062001831833981016040819052620000349162000252565b604080518082018252600c81526b2a32b2323cab19102830b4b960a11b6020808301918252835180850190945260078452662a22a2222cab1960c91b9084015281519192916012916200008b91600091906200018f565b508151620000a19060019060208501906200018f565b5060ff81166080524660a052620000b7620000f3565b60c0525050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000369565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001279190620002c6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200019d906200028a565b90600052602060002090601f016020900481019282620001c157600085556200020c565b82601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b5b808211156200021a57600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b600080604083850312156200026657600080fd5b620002718362000235565b9150620002816020840162000235565b90509250929050565b600181811c908216806200029f57607f821691505b602082108103620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002e357607f831692505b602080841082036200030357634e487b7160e01b86526022600452602486fd5b8180156200031a57600181146200032c576200035b565b60ff198616895284890196506200035b565b60008a81526020902060005b86811015620003535781548b82015290850190830162000338565b505084890196505b509498975050505050505050565b60805160a05160c05161149862000399600039600061073b01526000610706015260006101f201526114986000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806344df8e70116100a2578063a9059cbb11610071578063a9059cbb1461027e578063d21220a714610291578063d505accf146102a4578063dd62ed3e146102b7578063fff6cae9146102e257600080fd5b806344df8e701461022e57806370a08231146102365780637ecebe001461025657806395d89b411461027657600080fd5b80631249c58b116100e95780631249c58b146101b957806318160ddd146101c357806323b872dd146101da578063313ce567146101ed5780633644e5151461022657600080fd5b806306fdde031461011b5780630902f1ac14610139578063095ea7b31461016b5780630dfe16811461018e575b600080fd5b6101236102ea565b6040516101309190611125565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152600090820152606001610130565b61017e61017936600461116f565b610378565b6040519015158152602001610130565b6006546101a1906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6101c16103e4565b005b6101cc60025481565b604051908152602001610130565b61017e6101e8366004611199565b610622565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610130565b6101cc610702565b6101c161075d565b6101cc6102443660046111d5565b60036020526000908152604090205481565b6101cc6102643660046111d5565b60056020526000908152604090205481565b610123610a16565b61017e61028c36600461116f565b610a23565b6007546101a1906001600160a01b031681565b6101c16102b23660046111f0565b610a89565b6101cc6102c5366004611263565b600460209081526000928352604080842090915290825290205481565b6101c1610cd2565b600080546102f790611296565b80601f016020809104026020016040519081016040528092919081815260200182805461032390611296565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103d39086815260200190565b60405180910390a350600192915050565b60085460009081906001600160701b0380821691600160701b9004166006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047791906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af11580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906112ca565b905060006105026001600160701b038616846112f9565b905060006105196001600160701b038616846112f9565b9050600060025460000361055a576103e861053c6105378486611310565b610db7565b61054691906112f9565b905061055560006103e8610e27565b6105a9565b6105a6876001600160701b0316600254856105759190611310565b61057f919061132f565b876001600160701b0316600254856105979190611310565b6105a1919061132f565b610e81565b90505b600081116105ca57604051633489be7560e21b815260040160405180910390fd5b6105d43382610e27565b6105de8585610e99565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461067e5761065983826112f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906106a69084906112f9565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611443833981519152906106ef9087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461073857610733610f0a565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016020604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906112ca565b33600090815260036020526040812054600254929350916108618584611310565b61086b919061132f565b90506000600254848461087e9190611310565b610888919061132f565b9050811580610895575080155b156108b35760405163749383ad60e01b815260040160405180910390fd5b6108bd3384610fa4565b6006546108d4906001600160a01b03163384611006565b6007546108eb906001600160a01b03163383611006565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095991906112ca565b6007546040516370a0823160e01b81523060048201529196506001600160a01b0316906370a08231906024016020604051808303816000875af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906112ca565b93506109d48585610e99565b604080518381526020810183905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a25050505050565b600180546102f790611296565b33600090815260036020526040812080548391908390610a449084906112f9565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611443833981519152906103d39086815260200190565b42841015610ade5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610aea610702565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bf6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c2c5750876001600160a01b0316816001600160a01b0316145b610c695760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610ad5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546040516370a0823160e01b8152306004820152610db5916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906112ca565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db091906112ca565b610e99565b565b60006003821115610e185750806000610dd160028361132f565b610ddc906001611351565b90505b81811015610e1257905080600281610df7818661132f565b610e019190611351565b610e0b919061132f565b9050610ddf565b50919050565b8115610e22575060015b919050565b8060026000828254610e399190611351565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061144383398151915291015b60405180910390a35050565b6000818310610e905781610e92565b825b9392505050565b600880546001600160701b03838116600160701b9081026001600160e01b0319909316868316179290921792839055604080518483168152929093041660208201527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610f3c9190611369565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821660009081526003602052604081208054839290610fcc9084906112f9565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061144383398151915290602001610e75565b6040516001600160a01b03838116602483015260448201839052600091829186169060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b179052516110609190611404565b6000604051808303816000865af19150503d806000811461109d576040519150601f19603f3d011682016040523d82523d6000602084013e6110a2565b606091505b50915091508115806110d057508051158015906110d05750808060200190518101906110ce9190611420565b155b156110ee576040516312171d8360e31b815260040160405180910390fd5b5050505050565b60005b838110156111105781810151838201526020016110f8565b8381111561111f576000848401525b50505050565b60208152600082518060208401526111448160408501602087016110f5565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e2257600080fd5b6000806040838503121561118257600080fd5b61118b83611158565b946020939093013593505050565b6000806000606084860312156111ae57600080fd5b6111b784611158565b92506111c560208501611158565b9150604084013590509250925092565b6000602082840312156111e757600080fd5b610e9282611158565b600080600080600080600060e0888a03121561120b57600080fd5b61121488611158565b965061122260208901611158565b95506040880135945060608801359350608088013560ff8116811461124657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561127657600080fd5b61127f83611158565b915061128d60208401611158565b90509250929050565b600181811c908216806112aa57607f821691505b602082108103610e1257634e487b7160e01b600052602260045260246000fd5b6000602082840312156112dc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561130b5761130b6112e3565b500390565b600081600019048311821515161561132a5761132a6112e3565b500290565b60008261134c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611364576113646112e3565b500190565b600080835481600182811c91508083168061138557607f831692505b602080841082036113a457634e487b7160e01b86526022600452602486fd5b8180156113b857600181146113c9576113f6565b60ff198616895284890196506113f6565b60008a81526020902060005b868110156113ee5781548b8201529085019083016113d5565b505084890196505b509498975050505050505050565b600082516114168184602087016110f5565b9190910192915050565b60006020828403121561143257600080fd5b81518015158114610e9257600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edf94d782f2799a9a1b29abaed0ced6d6f53fb18f8f347020a1ea0a0ff73ab6164736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212202d5d782cc068b6e52f58d2b72530b0b77622eaac355b817e2104f585ad1b9b8564736f6c634300080d0033",
    "sourceMap": "162:2107:9:-:0;;;1572:26:0;;;-1:-1:-1;;1572:26:0;1594:4;1572:26;;;162:2107:9;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060043610620001755760003560e01c806397754ae911620000d3578063bc5759fa1162000086578063bc5759fa1462000323578063c88a5e6d146200032d578063d06d82291462000344578063d82555f1146200035b578063e9a79a7b1462000372578063fa7626d4146200038957600080fd5b806397754ae914620002a25780639a8325a014620002b9578063af9bbe5f14620002d0578063b528f8d514620002e7578063b9c071b414620002f1578063ba414fa6146200030857600080fd5b80632d6c17a3116200012c5780632d6c17a314620002095780633a76846314620002205780633bf82db114620002375780635a6c1eed146200024e5780636bce989b14620002745780636f597075146200028b57600080fd5b80630a9254e4146200017a5780630c379e9e1462000186578063108554f21462000190578063233240ee14620001a757806329a9e30014620001be57806329ce9dde14620001d5575b600080fd5b6200018462000397565b005b62000184620005da565b62000184620001a1366004620032fb565b6200086e565b62000184620001b836600462003328565b62000947565b62000184620001cf3660046200334d565b62000a23565b620001ec620001e636600462003460565b62000ad5565b6040516001600160a01b0390911681526020015b60405180910390f35b620001846200021a366004620034e0565b62000b8e565b620001ec600080516020620062d283398151915281565b6200018462000248366004620034fa565b62000bce565b620002656200025f3660046200353b565b62000cb0565b60405190815260200162000200565b6200018462000285366004620034fa565b62000db8565b620001846200029c36600462003328565b62000dcc565b62000184620002b336600462003577565b62000e76565b620001ec620002ca366004620035cd565b620010b7565b62000184620002e1366004620034fa565b6200114c565b62000184620011fa565b6200018462000302366004620034e0565b62001604565b6200031262001625565b604051901515815260200162000200565b6200018462001756565b620001846200033e366004620032fb565b62001b2f565b62000184620003553660046200334d565b62001b65565b620001846200036c366004620034fa565b62001c17565b6200018462000383366004620032fb565b62001cc8565b600054620003129060ff1681565b604051620003a59062003289565b604080825260079082015266546f6b656e204160c81b606082015260806020820181905260049082015263544b4e4160e01b60a082015260c001604051809103906000f080158015620003fc573d6000803e3d6000fd5b50600880546001600160a01b0319166001600160a01b03929092169190911790556040516200042b9062003289565b6040808252600790820152662a37b5b2b7102160c91b6060820152608060208201819052600490820152632a25a72160e11b60a082015260c001604051809103906000f08015801562000482573d6000803e3d6000fd5b50600980546001600160a01b0319166001600160a01b03928316908117909155600854604051921691620004b69062003297565b6001600160a01b03928316815291166020820152604001604051809103906000f080158015620004ea573d6000803e3d6000fd5b50600a80546001600160a01b0319166001600160a01b039283161790556008546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201529116906394bf804d90604401600060405180830381600087803b1580156200055257600080fd5b505af115801562000567573d6000803e3d6000fd5b50506009546040516394bf804d60e01b8152678ac7230489e8000060048201523060248201526001600160a01b0390911692506394bf804d9150604401600060405180830381600087803b158015620005bf57600080fd5b505af1158015620005d4573d6000803e3d6000fd5b50505050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200061a92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200063a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000660919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620006a192911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620006c1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620006e7919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200073957600080fd5b505af11580156200074e573d6000803e3d6000fd5b5050600a546040516370a0823160e01b8152306004820152620007d693506001600160a01b0390911691506370a08231906024015b602060405180830381865afa158015620007a1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620007c7919062003647565b670de0b6b3a763fc1862001d6e565b620007ea670de0b6b3a76400008062001e9d565b600a54604080516318160ddd60e01b815290516200086c926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa15801562000837573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200085d919062003647565b670de0b6b3a764000062001d6e565b565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d90620008a490859085906004016200360e565b600060405180830381600087803b158015620008bf57600080fd5b505af1158015620008d4573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0385166004820152600080516020620062d283398151915292506306447d5691506024015b600060405180830381600087803b1580156200092a57600080fd5b505af11580156200093f573d6000803e3d6000fd5b505050505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000981908490600160801b906004016200360e565b600060405180830381600087803b1580156200099c57600080fd5b505af1158015620009b1573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0384166004820152600080516020620062d2833981519152925063ca669fa791506024015b600060405180830381600087803b15801562000a0757600080fd5b505af115801562000a1c573d6000803e3d6000fd5b5050505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000a5d908590600160801b906004016200360e565b600060405180830381600087803b15801562000a7857600080fd5b505af115801562000a8d573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808616600483015284166024820152600080516020620062d283398151915292506347e50cce91506044016200090f565b604051638d1cc92560e01b81526000908190600080516020620062d283398151915290638d1cc9259062000b0e908790600401620036be565b6000604051808303816000875af115801562000b2e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262000b589190810190620036d3565b8360405160200162000b6c92919062003753565b60405160208183030381529060405290508051602082016000f0949350505050565b600080516020620062d283398151915263e5d6bf0262000baf83426200379c565b6040518263ffffffff1660e01b8152600401620009ec91815260200190565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000c0490869085906004016200360e565b600060405180830381600087803b15801562000c1f57600080fd5b505af115801562000c34573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808716600483015285166024820152600080516020620062d283398151915292506345b5607891506044015b600060405180830381600087803b15801562000c9257600080fd5b505af115801562000ca7573d6000803e3d6000fd5b50505050505050565b60008183111562000cfc5760405162461bcd60e51b815260206004820152601160248201527026a0ac2fa622a9a9afaa2420a72fa6a4a760791b60448201526064015b60405180910390fd5b600062000d0a84846200379c565b90508060000362000d1e5783915062000d5b565b801962000d2e5784915062000d5b565b62000d3981620037b6565b9050600062000d498287620037d2565b905062000d578186620037f5565b9250505b60408051818152600c818301526b109bdd5b990814995cdd5b1d60a21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a1509392505050565b62000dc7838383600062000e76565b505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062000e06908490600160801b906004016200360e565b600060405180830381600087803b15801562000e2157600080fd5b505af115801562000e36573d6000803e3d6000fd5b50506040516303223eab60e11b81526001600160a01b0384166004820152600080516020620062d283398151915292506306447d569150602401620009ec565b604080516001600160a01b0385811660248084019190915283518084039091018152604490920183526020820180516001600160e01b03166370a0823160e01b179052915160009287169162000ecc9162003810565b6000604051808303816000865af19150503d806000811462000f0b576040519150601f19603f3d011682016040523d82523d6000602084013e62000f10565b606091505b5091505060008180602001905181019062000f2c919062003647565b905062000f9e8462000f978762000f6e6370a0823160e01b62000f5160018d62001fb3565b9060038201805463ffffffff191660e09290921c91909117905590565b90600282018054600181018255600091825260209091206001600160a01b039290921691015590565b9062001fd8565b82156200093f5760408051600481526024810182526020810180516001600160e01b03166318160ddd60e01b17905290516000916001600160a01b0389169162000fe9919062003810565b6000604051808303816000865af19150503d806000811462001028576040519150601f19603f3d011682016040523d82523d6000602084013e6200102d565b606091505b5091505060008180602001905181019062001049919062003647565b90508286101562001074576200106086846200379c565b6200106c90826200379c565b90506200108f565b6200108083876200379c565b6200108c9082620037f5565b90505b620010ad8162000f976318160ddd60e01b62000f5160018d62001fb3565b5050505050505050565b604051638d1cc92560e01b81526000908190600080516020620062d283398151915290638d1cc92590620010f0908690600401620036be565b6000604051808303816000875af115801562001110573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526200113a9190810190620036d3565b90508051602082016000f09392505050565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d906200118290869085906004016200360e565b600060405180830381600087803b1580156200119d57600080fd5b505af1158015620011b2573d6000803e3d6000fd5b50506040516323f2866760e11b81526001600160a01b03808716600483015285166024820152600080516020620062d283398151915292506347e50cce915060440162000c77565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200123a92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200125a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001280919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620012c192911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620012e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001307919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200135957600080fd5b505af11580156200136e573d6000803e3d6000fd5b5050600854600a5460405163a9059cbb60e01b81526001600160a01b03928316945063a9059cbb9350620013b39290911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af1158015620013d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620013f9919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200143a92911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af11580156200145a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001480919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620014d257600080fd5b505af1158015620014e7573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200156e93506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001539573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200155f919062003647565b6729a2241af62bfc1862001d6e565b600a54604080516318160ddd60e01b81529051620015f0926001600160a01b0316916318160ddd9160048083019260209291908290030181865afa158015620015bb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620015e1919062003647565b6729a2241af62c000062001d6e565b6200086c6729a2241af62c00008062001e9d565b600080516020620062d283398151915263e5d6bf0262000baf8342620037f5565b60008054610100900460ff1615620016465750600054610100900460ff1690565b6000600080516020620062d28339815191523b156200175157604051600090600080516020620062d2833981519152907f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc490620016b39083906519985a5b195960d21b906020016200360e565b60408051601f1981840301815290829052620016d392916020016200382e565b60408051601f1981840301815290829052620016ef9162003810565b6000604051808303816000865af19150503d80600081146200172e576040519150601f19603f3d011682016040523d82523d6000602084013e62001733565b606091505b50915050808060200190518101906200174d919062003627565b9150505b919050565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200179692911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620017b6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620017dc919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200181d92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af11580156200183d573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001863919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015620018b557600080fd5b505af1158015620018ca573d6000803e3d6000fd5b5050600a546040516370a0823160e01b81523060048201526200190493506001600160a01b0390911691506370a082319060240162000783565b62001918670de0b6b3a76400008062001e9d565b600854600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb926200195892911690671bc16d674ec80000906004016200360e565b6020604051808303816000875af115801562001978573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906200199e919062003627565b50600954600a5460405163a9059cbb60e01b81526001600160a01b039283169263a9059cbb92620019df92911690670de0b6b3a7640000906004016200360e565b6020604051808303816000875af1158015620019ff573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001a25919062003627565b50600a60009054906101000a90046001600160a01b03166001600160a01b0316631249c58b6040518163ffffffff1660e01b8152600401600060405180830381600087803b15801562001a7757600080fd5b505af115801562001a8c573d6000803e3d6000fd5b5050600a546040516370a0823160e01b815230600482015262001b1393506001600160a01b0390911691506370a0823190602401602060405180830381865afa15801562001ade573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001b04919062003647565b671bc16d674ec7fc1862001d6e565b6200086c6729a2241af62c0000671bc16d674ec8000062001e9d565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d906200090f90859085906004016200360e565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062001b9f908590600160801b906004016200360e565b600060405180830381600087803b15801562001bba57600080fd5b505af115801562001bcf573d6000803e3d6000fd5b50506040516308b6ac0f60e31b81526001600160a01b03808616600483015284166024820152600080516020620062d283398151915292506345b5607891506044016200090f565b7f42b963ace015abb7c727e77dec115c5f418f4f96d9ec897f85c202793274661a60405162001c9d906020808252603b908201527f54686520607469706020737464636865617420686173206265656e206465707260408201527f6563617465642e2055736520606465616c6020696e73746561642e0000000000606082015260800190565b60405180910390a162000dc78162000f978462000f6e6370a0823160e01b62000f5160018a62001fb3565b60405163c88a5e6d60e01b8152600080516020620062d28339815191529063c88a5e6d9062001cfe90859085906004016200360e565b600060405180830381600087803b15801562001d1957600080fd5b505af115801562001d2e573d6000803e3d6000fd5b505060405163ca669fa760e01b81526001600160a01b0385166004820152600080516020620062d2833981519152925063ca669fa791506024016200090f565b80821462001e99577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405162001de19060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e604082015261745d60f01b606082015260800190565b60405180910390a160408051818152600a81830152690808115e1c1958dd195960b21b60608201526020810183905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a160408051818152600a8183015269080808081058dd1d585b60b21b60608201526020810184905290517fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a89181900360800190a162001e9962001fe4565b5050565b600080600a60009054906101000a90046001600160a01b03166001600160a01b0316630902f1ac6040518163ffffffff1660e01b8152600401606060405180830381865afa15801562001ef4573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062001f1a919062003879565b509150915062001f69826001600160701b0316856001600160701b0316604051806040016040528060138152602001720756e657870656374656420726573657276653606c1b815250620020e8565b620005d4816001600160701b0316846001600160701b031660405180604001604052806013815260200172756e657870656374656420726573657276653160681b815250620020e8565b6005820180546001600160a01b0319166001600160a01b039290921691909117905590565b62001e99828262002135565b600080516020620062d28339815191523b15620020d757604051600090600080516020620062d2833981519152907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490620020529083906519985a5b195960d21b90600190602001620038cf565b60408051601f19818403018152908290526200207292916020016200382e565b60408051601f19818403018152908290526200208e9162003810565b6000604051808303816000865af19150503d8060008114620020cd576040519150601f19603f3d011682016040523d82523d6000602084013e620020d2565b606091505b505050505b6000805461ff001916610100179055565b81831462000dc7577f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381604051620021219190620038f0565b60405180910390a162000dc7838362001d6e565b600582015460038301546004840154600285018054604080516020808402820181019092528281526001600160a01b039096169560e09590951b9460009390929091830182828015620021a857602002820191906000526020600020905b81548152602001906001019080831162002193575b50505050509050600083620021bd836200249e565b604051602001620021d09291906200382e565b60408051601f198184030181528282526001600160a01b038816600090815260018b0160209081528382206001600160e01b03198a1683528152928120919450909290916200222491869188910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff166200225f576200225d8762002552565b505b6001600160a01b0385166000908152602088815260408083206001600160e01b0319881684528252808320905190918391620022a091879189910162003921565b6040516020818303038152906040528051906020012081526020019081526020016000205460001b9050600080876001600160a01b031684604051620022e7919062003810565b600060405180830381855afa9150503d806000811462002324576040519150601f19603f3d011682016040523d82523d6000602084013e62002329565b606091505b50915062002346905081620023408860206200395d565b620031ff565b604051630667f9d760e41b815290925060009150600080516020620062d28339815191529063667f9d709062002383908b9087906004016200360e565b6020604051808303816000875af1158015620023a3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620023c9919062003647565b9050808214620023ed5760405162461bcd60e51b815260040162000cf3906200397f565b6040516370ca10bb60e01b8152600080516020620062d2833981519152906370ca10bb9062002425908b9087908e90600401620038cf565b600060405180830381600087803b1580156200244057600080fd5b505af115801562002455573d6000803e3d6000fd5b50505060058b0180546001600160a01b03191690555060038a01805463ffffffff191690556200248a60028b016000620032a5565b896004016000905550505050505050505050565b6060600082516020620024b291906200395d565b67ffffffffffffffff811115620024cd57620024cd62003385565b6040519080825280601f01601f191660200182016040528015620024f8576020820181803683370190505b50905060005b83518110156200254b5760008482815181106200251f576200251f620039f5565b6020026020010151905080826020026020018401525080806200254290620037b6565b915050620024fe565b5092915050565b600581015460038201546004830154600284018054604080516020808402820181019092528281526000966001600160a01b03169560e01b949387939192909190830182828015620025c457602002820191906000526020600020905b815481526020019060010190808311620025af575b5050506001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a1684528252808320905195965094919350620026109250859187910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff1615620026af576001600160a01b0384166000908152602087815260408083206001600160e01b031987168452825280832090519092916200267f91859187910162003921565b60405160208183030381529060405280519060200120815260200190815260200160002054945050505050919050565b600083620026bd836200249e565b604051602001620026d09291906200382e565b6040516020818303038152906040529050600080516020620062f283398151915260001c6001600160a01b031663266cf1096040518163ffffffff1660e01b8152600401600060405180830381600087803b1580156200272f57600080fd5b505af115801562002744573d6000803e3d6000fd5b50505050600080866001600160a01b03168360405162002765919062003810565b600060405180830381855afa9150503d8060008114620027a2576040519150601f19603f3d011682016040523d82523d6000602084013e620027a7565b606091505b509150620027be905081620023408760206200395d565b6040516365bc948160e01b81526001600160a01b038916600482015290925060009150600080516020620062d2833981519152906365bc9481906024016000604051808303816000875af11580156200281b573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405262002845919081019062003a94565b509050805160010362002b0e576000600080516020620062f283398151915260001c6001600160a01b031663667f9d7089846000815181106200288c576200288c620039f5565b60200260200101516040518363ffffffff1660e01b8152600401620028b39291906200360e565b6020604051808303816000875af1158015620028d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620028f9919062003647565b9050806200295d577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58883600081518110620029395762002939620039f5565b602002602001015160001c604051620029549291906200360e565b60405180910390a15b8083146200297f5760405162461bcd60e51b815260040162000cf3906200397f565b7f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed88888789604051602001620029b792919062003921565b6040516020818303038152906040528051906020012085600081518110620029e357620029e3620039f5565b602002602001015160001c60405162002a00949392919062003af5565b60405180910390a18160008151811062002a1e5762002a1e620039f5565b6020908102919091018101516001600160a01b038a1660009081528c835260408082206001600160e01b03198c168352845280822090519293909262002a69918a918c910162003921565b60408051601f1981840301815291815281516020928301208352828201939093529082016000908120939093556001600160a01b038b16835260018d810182528284206001600160e01b03198c1685528252828420925190939162002ad3918a918c910162003921565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550620030af565b6001815111156200305b5760005b815181101562003054576000600080516020620062f283398151915260001c6001600160a01b031663667f9d708a85858151811062002b5f5762002b5f620039f5565b60200260200101516040518363ffffffff1660e01b815260040162002b869291906200360e565b6020604051808303816000875af115801562002ba6573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062002bcc919062003647565b90508062002c2f577f080fc4a96620c4462e705b23f346413fe3796bb63c6f8d8591baec0e231577a58984848151811062002c0b5762002c0b620039f5565b602002602001015160001c60405162002c269291906200360e565b60405180910390a15b600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8a85858151811062002c665762002c66620039f5565b602002602001015161133760f01b6040518463ffffffff1660e01b815260040162002c9493929190620038cf565b600060405180830381600087803b15801562002caf57600080fd5b505af115801562002cc4573d6000803e3d6000fd5b50505050600060608a6001600160a01b03168760405162002ce6919062003810565b600060405180830381855afa9150503d806000811462002d23576040519150601f19603f3d011682016040523d82523d6000602084013e62002d28565b606091505b50909250905062002d4081620023408b60206200395d565b955081801562002d54575061133760f01b86145b1562002fa7577f9c9555b1e3102e3cf48f427d79cb678f5d9bd1ed0ad574389461e255f95170ed8b8b8a8c60405160200162002d9292919062003921565b6040516020818303038152906040528051906020012088888151811062002dbd5762002dbd620039f5565b602002602001015160001c60405162002dda949392919062003af5565b60405180910390a184848151811062002df75762002df7620039f5565b6020908102919091018101516001600160a01b038d1660009081528f835260408082206001600160e01b03198f168352845280822090519293909262002e42918d918f910162003921565b6040516020818303038152906040528051906020012081526020019081526020016000208190555060018d60010160008d6001600160a01b03166001600160a01b0316815260200190815260200160002060008c6001600160e01b0319166001600160e01b031916815260200190815260200160002060008a8c60405160200162002ecf92919062003921565b60405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548160ff021916908315150217905550600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8c87878151811062002f415762002f41620039f5565b6020026020010151866040518463ffffffff1660e01b815260040162002f6a93929190620038cf565b600060405180830381600087803b15801562002f8557600080fd5b505af115801562002f9a573d6000803e3d6000fd5b5050505050505062003054565b600080516020620062f283398151915260001c6001600160a01b03166370ca10bb8c87878151811062002fde5762002fde620039f5565b6020026020010151866040518463ffffffff1660e01b81526004016200300793929190620038cf565b600060405180830381600087803b1580156200302257600080fd5b505af115801562003037573d6000803e3d6000fd5b5050505050505080806200304b90620037b6565b91505062002b1c565b50620030af565b60405162461bcd60e51b815260206004820152602260248201527f4e6f2073746f726167652075736520646574656374656420666f722074617267604482015261195d60f21b606482015260840162000cf3565b6001600160a01b038716600090815260018a01602090815260408083206001600160e01b03198a16845282528083209051909291620030f39188918a910162003921565b60408051601f198184030181529181528151602092830120835290820192909252016000205460ff16620031555760405162461bcd60e51b8152602060048201526008602482015267139bdd119bdd5b9960c21b604482015260640162000cf3565b6005890180546001600160a01b031916905560038901805463ffffffff191690556200318660028a016000620032a5565b600060048a018190556001600160a01b038816815260208a815260408083206001600160e01b03198a16845282528083209051909291620031cc9188918a910162003921565b60405160208183030381529060405280519060200120815260200190815260200160002054975050505050505050919050565b600080600060208551116200321657845162003219565b60205b905060005b818110156200327f57620032348160086200395d565b86620032418388620037f5565b81518110620032545762003254620039f5565b01602001516001600160f81b031916901c9290921791806200327681620037b6565b9150506200321e565b5090949350505050565b610f7b8062003b2683390190565b6118318062004aa183390190565b5080546000825590600052602060002090810190620032c59190620032c8565b50565b5b80821115620032df5760008155600101620032c9565b5090565b80356001600160a01b03811681146200175157600080fd5b600080604083850312156200330f57600080fd5b6200331a83620032e3565b946020939093013593505050565b6000602082840312156200333b57600080fd5b6200334682620032e3565b9392505050565b600080604083850312156200336157600080fd5b6200336c83620032e3565b91506200337c60208401620032e3565b90509250929050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715620033c757620033c762003385565b604052919050565b600067ffffffffffffffff821115620033ec57620033ec62003385565b50601f01601f191660200190565b6000620034116200340b84620033cf565b6200339b565b90508281528383830111156200342657600080fd5b828260208301376000602084830101529392505050565b600082601f8301126200344f57600080fd5b6200334683833560208501620033fa565b600080604083850312156200347457600080fd5b823567ffffffffffffffff808211156200348d57600080fd5b6200349b868387016200343d565b93506020850135915080821115620034b257600080fd5b508301601f81018513620034c557600080fd5b620034d685823560208401620033fa565b9150509250929050565b600060208284031215620034f357600080fd5b5035919050565b6000806000606084860312156200351057600080fd5b6200351b84620032e3565b92506200352b60208501620032e3565b9150604084013590509250925092565b6000806000606084860312156200355157600080fd5b505081359360208301359350604090920135919050565b8015158114620032c557600080fd5b600080600080608085870312156200358e57600080fd5b6200359985620032e3565b9350620035a960208601620032e3565b9250604085013591506060850135620035c28162003568565b939692955090935050565b600060208284031215620035e057600080fd5b813567ffffffffffffffff811115620035f857600080fd5b62003606848285016200343d565b949350505050565b6001600160a01b03929092168252602082015260400190565b6000602082840312156200363a57600080fd5b8151620033468162003568565b6000602082840312156200365a57600080fd5b5051919050565b60005b838110156200367e57818101518382015260200162003664565b83811115620005d45750506000910152565b60008151808452620036aa81602086016020860162003661565b601f01601f19169290920160200192915050565b60208152600062003346602083018462003690565b600060208284031215620036e657600080fd5b815167ffffffffffffffff811115620036fe57600080fd5b8201601f810184136200371057600080fd5b8051620037216200340b82620033cf565b8181528560208385010111156200373757600080fd5b6200374a82602083016020860162003661565b95945050505050565b600083516200376781846020880162003661565b8351908301906200377d81836020880162003661565b01949350505050565b634e487b7160e01b600052601160045260246000fd5b600082821015620037b157620037b162003786565b500390565b600060018201620037cb57620037cb62003786565b5060010190565b600082620037f057634e487b7160e01b600052601260045260246000fd5b500690565b600082198211156200380b576200380b62003786565b500190565b600082516200382481846020870162003661565b9190910192915050565b6001600160e01b03198316815281516000906200385381600485016020870162003661565b919091016004019392505050565b80516001600160701b03811681146200175157600080fd5b6000806000606084860312156200388f57600080fd5b6200389a8462003861565b9250620038aa6020850162003861565b9150604084015163ffffffff81168114620038c457600080fd5b809150509250925092565b6001600160a01b039390931683526020830191909152604082015260600190565b60408152600560408201526422b93937b960d91b606082015260806020820152600062003346608083018462003690565b825160009082906020808701845b838110156200394d578151855293820193908201906001016200392f565b5050948252509092019392505050565b60008160001904831182151516156200397a576200397a62003786565b500290565b60208082526050908201527f5061636b656420736c6f742e205468697320776f756c6420636175736520646160408201527f6e6765726f7573206f76657277726974696e6720616e642063757272656e746c60608201526f1e481a5cdb9d081cdd5c1c1bdc9d195960821b608082015260a00190565b634e487b7160e01b600052603260045260246000fd5b600082601f83011262003a1d57600080fd5b8151602067ffffffffffffffff82111562003a3c5762003a3c62003385565b8160051b62003a4d8282016200339b565b928352848101820192828101908785111562003a6857600080fd5b83870192505b8483101562003a895782518252918301919083019062003a6e565b979650505050505050565b6000806040838503121562003aa857600080fd5b825167ffffffffffffffff8082111562003ac157600080fd5b62003acf8683870162003a0b565b9350602085015191508082111562003ae657600080fd5b50620034d68582860162003a0b565b6001600160a01b039490941684526001600160e01b0319929092166020840152604083015260608201526080019056fe60e06040523480156200001157600080fd5b5060405162000f7b38038062000f7b83398101604081905262000034916200029a565b8181601282600090805190602001906200005092919062000127565b5081516200006690600190602085019062000127565b5060ff81166080524660a0526200007c6200008b565b60c05250620003e39350505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620000bf919062000340565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b828054620001359062000304565b90600052602060002090601f016020900481019282620001595760008555620001a4565b82601f106200017457805160ff1916838001178555620001a4565b82800160010185558215620001a4579182015b82811115620001a457825182559160200191906001019062000187565b50620001b2929150620001b6565b5090565b5b80821115620001b25760008155600101620001b7565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620001f557600080fd5b81516001600160401b0380821115620002125762000212620001cd565b604051601f8301601f19908116603f011681019082821181831017156200023d576200023d620001cd565b816040528381526020925086838588010111156200025a57600080fd5b600091505b838210156200027e57858201830151818301840152908201906200025f565b83821115620002905760008385830101525b9695505050505050565b60008060408385031215620002ae57600080fd5b82516001600160401b0380821115620002c657600080fd5b620002d486838701620001e3565b93506020850151915080821115620002eb57600080fd5b50620002fa85828601620001e3565b9150509250929050565b600181811c908216806200031957607f821691505b6020821081036200033a57634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c9150808316806200035d57607f831692505b602080841082036200037d57634e487b7160e01b86526022600452602486fd5b818015620003945760018114620003a657620003d5565b60ff19861689528489019650620003d5565b60008a81526020902060005b86811015620003cd5781548b820152908501908301620003b2565b505084890196505b509498975050505050505050565b60805160a05160c051610b686200041360003960006104530152600061041e015260006101440152610b686000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c806370a082311161008c57806395d89b411161006657806395d89b41146101d5578063a9059cbb146101dd578063d505accf146101f0578063dd62ed3e1461020357600080fd5b806370a08231146101805780637ecebe00146101a057806394bf804d146101c057600080fd5b806306fdde03146100d4578063095ea7b3146100f257806318160ddd1461011557806323b872dd1461012c578063313ce5671461013f5780633644e51514610178575b600080fd5b6100dc61022e565b6040516100e99190610856565b60405180910390f35b6101056101003660046108c7565b6102bc565b60405190151581526020016100e9565b61011e60025481565b6040519081526020016100e9565b61010561013a3660046108f1565b610328565b6101667f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff90911681526020016100e9565b61011e61041a565b61011e61018e36600461092d565b60036020526000908152604090205481565b61011e6101ae36600461092d565b60056020526000908152604090205481565b6101d36101ce36600461094f565b610475565b005b6100dc610483565b6101056101eb3660046108c7565b610490565b6101d36101fe36600461097b565b610508565b61011e6102113660046109ee565b600460209081526000928352604080842090915290825290205481565b6000805461023b90610a18565b80601f016020809104026020016040519081016040528092919081815260200182805461026790610a18565b80156102b45780601f10610289576101008083540402835291602001916102b4565b820191906000526020600020905b81548152906001019060200180831161029757829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103179086815260200190565b60405180910390a350600192915050565b6001600160a01b038316600090815260046020908152604080832033845290915281205460001981146103845761035f8382610a68565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906103ac908490610a68565b90915550506001600160a01b03808516600081815260036020526040908190208054870190555190918716907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906104079087815260200190565b60405180910390a3506001949350505050565b60007f000000000000000000000000000000000000000000000000000000000000000046146104505761044b610751565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b61047f81836107eb565b5050565b6001805461023b90610a18565b336000908152600360205260408120805483919083906104b1908490610a68565b90915550506001600160a01b038316600081815260036020526040908190208054850190555133907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906103179086815260200190565b4284101561055d5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b6000600161056961041a565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610675573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b038116158015906106ab5750876001600160a01b0316816001600160a01b0316145b6106e85760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610554565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60006040516107839190610a7f565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b80600260008282546107fd9190610b1a565b90915550506001600160a01b0382166000818152600360209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b600060208083528351808285015260005b8181101561088357858101830151858201604001528201610867565b81811115610895576000604083870101525b50601f01601f1916929092016040019392505050565b80356001600160a01b03811681146108c257600080fd5b919050565b600080604083850312156108da57600080fd5b6108e3836108ab565b946020939093013593505050565b60008060006060848603121561090657600080fd5b61090f846108ab565b925061091d602085016108ab565b9150604084013590509250925092565b60006020828403121561093f57600080fd5b610948826108ab565b9392505050565b6000806040838503121561096257600080fd5b82359150610972602084016108ab565b90509250929050565b600080600080600080600060e0888a03121561099657600080fd5b61099f886108ab565b96506109ad602089016108ab565b95506040880135945060608801359350608088013560ff811681146109d157600080fd5b9699959850939692959460a0840135945060c09093013592915050565b60008060408385031215610a0157600080fd5b610a0a836108ab565b9150610972602084016108ab565b600181811c90821680610a2c57607f821691505b602082108103610a4c57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b600082821015610a7a57610a7a610a52565b500390565b600080835481600182811c915080831680610a9b57607f831692505b60208084108203610aba57634e487b7160e01b86526022600452602486fd5b818015610ace5760018114610adf57610b0c565b60ff19861689528489019650610b0c565b60008a81526020902060005b86811015610b045781548b820152908501908301610aeb565b505084890196505b509498975050505050505050565b60008219821115610b2d57610b2d610a52565b50019056fea26469706673582212208107c83fe54392e1cf62e853d5bc41248a95eadf74bbdc5ada4ec046d33d9e4964736f6c634300080d003360e06040523480156200001157600080fd5b506040516200183138038062001831833981016040819052620000349162000252565b604080518082018252600c81526b2a32b2323cab19102830b4b960a11b6020808301918252835180850190945260078452662a22a2222cab1960c91b9084015281519192916012916200008b91600091906200018f565b508151620000a19060019060208501906200018f565b5060ff81166080524660a052620000b7620000f3565b60c0525050600680546001600160a01b039485166001600160a01b03199182161790915560078054939094169216919091179091555062000369565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051620001279190620002c6565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b8280546200019d906200028a565b90600052602060002090601f016020900481019282620001c157600085556200020c565b82601f10620001dc57805160ff19168380011785556200020c565b828001600101855582156200020c579182015b828111156200020c578251825591602001919060010190620001ef565b506200021a9291506200021e565b5090565b5b808211156200021a57600081556001016200021f565b80516001600160a01b03811681146200024d57600080fd5b919050565b600080604083850312156200026657600080fd5b620002718362000235565b9150620002816020840162000235565b90509250929050565b600181811c908216806200029f57607f821691505b602082108103620002c057634e487b7160e01b600052602260045260246000fd5b50919050565b600080835481600182811c915080831680620002e357607f831692505b602080841082036200030357634e487b7160e01b86526022600452602486fd5b8180156200031a57600181146200032c576200035b565b60ff198616895284890196506200035b565b60008a81526020902060005b86811015620003535781548b82015290850190830162000338565b505084890196505b509498975050505050505050565b60805160a05160c05161149862000399600039600061073b01526000610706015260006101f201526114986000f3fe608060405234801561001057600080fd5b50600436106101165760003560e01c806344df8e70116100a2578063a9059cbb11610071578063a9059cbb1461027e578063d21220a714610291578063d505accf146102a4578063dd62ed3e146102b7578063fff6cae9146102e257600080fd5b806344df8e701461022e57806370a08231146102365780637ecebe001461025657806395d89b411461027657600080fd5b80631249c58b116100e95780631249c58b146101b957806318160ddd146101c357806323b872dd146101da578063313ce567146101ed5780633644e5151461022657600080fd5b806306fdde031461011b5780630902f1ac14610139578063095ea7b31461016b5780630dfe16811461018e575b600080fd5b6101236102ea565b6040516101309190611125565b60405180910390f35b600854604080516001600160701b038084168252600160701b9093049092166020830152600090820152606001610130565b61017e61017936600461116f565b610378565b6040519015158152602001610130565b6006546101a1906001600160a01b031681565b6040516001600160a01b039091168152602001610130565b6101c16103e4565b005b6101cc60025481565b604051908152602001610130565b61017e6101e8366004611199565b610622565b6102147f000000000000000000000000000000000000000000000000000000000000000081565b60405160ff9091168152602001610130565b6101cc610702565b6101c161075d565b6101cc6102443660046111d5565b60036020526000908152604090205481565b6101cc6102643660046111d5565b60056020526000908152604090205481565b610123610a16565b61017e61028c36600461116f565b610a23565b6007546101a1906001600160a01b031681565b6101c16102b23660046111f0565b610a89565b6101cc6102c5366004611263565b600460209081526000928352604080842090915290825290205481565b6101c1610cd2565b600080546102f790611296565b80601f016020809104026020016040519081016040528092919081815260200182805461032390611296565b80156103705780601f1061034557610100808354040283529160200191610370565b820191906000526020600020905b81548152906001019060200180831161035357829003601f168201915b505050505081565b3360008181526004602090815260408083206001600160a01b038716808552925280832085905551919290917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925906103d39086815260200190565b60405180910390a350600192915050565b60085460009081906001600160701b0380821691600160701b9004166006546040516370a0823160e01b81523060048201529294509092506000916001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610453573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061047791906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af11580156104c7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104eb91906112ca565b905060006105026001600160701b038616846112f9565b905060006105196001600160701b038616846112f9565b9050600060025460000361055a576103e861053c6105378486611310565b610db7565b61054691906112f9565b905061055560006103e8610e27565b6105a9565b6105a6876001600160701b0316600254856105759190611310565b61057f919061132f565b876001600160701b0316600254856105979190611310565b6105a1919061132f565b610e81565b90505b600081116105ca57604051633489be7560e21b815260040160405180910390fd5b6105d43382610e27565b6105de8585610e99565b604080518481526020810184905233917f4c209b5fc8ad50758f13e2e1088ba56a560dff690a1c6fef26394f4c03821c4f910160405180910390a250505050505050565b6001600160a01b0383166000908152600460209081526040808320338452909152812054600019811461067e5761065983826112f9565b6001600160a01b03861660009081526004602090815260408083203384529091529020555b6001600160a01b038516600090815260036020526040812080548592906106a69084906112f9565b90915550506001600160a01b0380851660008181526003602052604090819020805487019055519091871690600080516020611443833981519152906106ef9087815260200190565b60405180910390a3506001949350505050565b60007f0000000000000000000000000000000000000000000000000000000000000000461461073857610733610f0a565b905090565b507f000000000000000000000000000000000000000000000000000000000000000090565b6006546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a08231906024016020604051808303816000875af11580156107a8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107cc91906112ca565b6007546040516370a0823160e01b81523060048201529192506000916001600160a01b03909116906370a08231906024016020604051808303816000875af115801561081c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061084091906112ca565b33600090815260036020526040812054600254929350916108618584611310565b61086b919061132f565b90506000600254848461087e9190611310565b610888919061132f565b9050811580610895575080155b156108b35760405163749383ad60e01b815260040160405180910390fd5b6108bd3384610fa4565b6006546108d4906001600160a01b03163384611006565b6007546108eb906001600160a01b03163383611006565b6006546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610935573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061095991906112ca565b6007546040516370a0823160e01b81523060048201529196506001600160a01b0316906370a08231906024016020604051808303816000875af11580156109a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109c891906112ca565b93506109d48585610e99565b604080518381526020810183905233917f49995e5dd6158cf69ad3e9777c46755a1a826a446c6416992167462dad033b2a910160405180910390a25050505050565b600180546102f790611296565b33600090815260036020526040812080548391908390610a449084906112f9565b90915550506001600160a01b03831660008181526003602052604090819020805485019055513390600080516020611443833981519152906103d39086815260200190565b42841015610ade5760405162461bcd60e51b815260206004820152601760248201527f5045524d49545f444541444c494e455f4558504952454400000000000000000060448201526064015b60405180910390fd5b60006001610aea610702565b6001600160a01b038a811660008181526005602090815260409182902080546001810190915582517f6e71edae12b1b97f4d1f60370fef10105fa2faae0126114a169c64845d6126c98184015280840194909452938d166060840152608083018c905260a083019390935260c08083018b90528151808403909101815260e08301909152805192019190912061190160f01b6101008301526101028201929092526101228101919091526101420160408051601f198184030181528282528051602091820120600084529083018083525260ff871690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bf6573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811615801590610c2c5750876001600160a01b0316816001600160a01b0316145b610c695760405162461bcd60e51b815260206004820152600e60248201526d24a72b20a624a22fa9a4a3a722a960911b6044820152606401610ad5565b6001600160a01b0390811660009081526004602090815260408083208a8516808552908352928190208990555188815291928a16917f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a350505050505050565b6006546040516370a0823160e01b8152306004820152610db5916001600160a01b0316906370a08231906024016020604051808303816000875af1158015610d1e573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d4291906112ca565b6007546040516370a0823160e01b81523060048201526001600160a01b03909116906370a08231906024016020604051808303816000875af1158015610d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db091906112ca565b610e99565b565b60006003821115610e185750806000610dd160028361132f565b610ddc906001611351565b90505b81811015610e1257905080600281610df7818661132f565b610e019190611351565b610e0b919061132f565b9050610ddf565b50919050565b8115610e22575060015b919050565b8060026000828254610e399190611351565b90915550506001600160a01b03821660008181526003602090815260408083208054860190555184815260008051602061144383398151915291015b60405180910390a35050565b6000818310610e905781610e92565b825b9392505050565b600880546001600160701b03838116600160701b9081026001600160e01b0319909316868316179290921792839055604080518483168152929093041660208201527fcf2aa50876cdfbb541206f89af0ee78d44a2abf8d328e37fa4917f982149848a910160405180910390a15050565b60007f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6000604051610f3c9190611369565b6040805191829003822060208301939093528101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160405160208183030381529060405280519060200120905090565b6001600160a01b03821660009081526003602052604081208054839290610fcc9084906112f9565b90915550506002805482900390556040518181526000906001600160a01b0384169060008051602061144383398151915290602001610e75565b6040516001600160a01b03838116602483015260448201839052600091829186169060640160408051601f198184030181529181526020820180516001600160e01b031663a9059cbb60e01b179052516110609190611404565b6000604051808303816000865af19150503d806000811461109d576040519150601f19603f3d011682016040523d82523d6000602084013e6110a2565b606091505b50915091508115806110d057508051158015906110d05750808060200190518101906110ce9190611420565b155b156110ee576040516312171d8360e31b815260040160405180910390fd5b5050505050565b60005b838110156111105781810151838201526020016110f8565b8381111561111f576000848401525b50505050565b60208152600082518060208401526111448160408501602087016110f5565b601f01601f19169190910160400192915050565b80356001600160a01b0381168114610e2257600080fd5b6000806040838503121561118257600080fd5b61118b83611158565b946020939093013593505050565b6000806000606084860312156111ae57600080fd5b6111b784611158565b92506111c560208501611158565b9150604084013590509250925092565b6000602082840312156111e757600080fd5b610e9282611158565b600080600080600080600060e0888a03121561120b57600080fd5b61121488611158565b965061122260208901611158565b95506040880135945060608801359350608088013560ff8116811461124657600080fd5b9699959850939692959460a0840135945060c09093013592915050565b6000806040838503121561127657600080fd5b61127f83611158565b915061128d60208401611158565b90509250929050565b600181811c908216806112aa57607f821691505b602082108103610e1257634e487b7160e01b600052602260045260246000fd5b6000602082840312156112dc57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b60008282101561130b5761130b6112e3565b500390565b600081600019048311821515161561132a5761132a6112e3565b500290565b60008261134c57634e487b7160e01b600052601260045260246000fd5b500490565b60008219821115611364576113646112e3565b500190565b600080835481600182811c91508083168061138557607f831692505b602080841082036113a457634e487b7160e01b86526022600452602486fd5b8180156113b857600181146113c9576113f6565b60ff198616895284890196506113f6565b60008a81526020902060005b868110156113ee5781548b8201529085019083016113d5565b505084890196505b509498975050505050505050565b600082516114168184602087016110f5565b9190910192915050565b60006020828403121561143257600080fd5b81518015158114610e9257600080fdfeddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3efa2646970667358221220edf94d782f2799a9a1b29abaed0ced6d6f53fb18f8f347020a1ea0a0ff73ab6164736f6c634300080d00330000000000000000000000007109709ecfa91a80626ff3989d68f67f5b1dd12d885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12da26469706673582212202d5d782cc068b6e52f58d2b72530b0b77622eaac355b817e2104f585ad1b9b8564736f6c634300080d0033",
    "sourceMap": "162:2107:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:370;;;:::i;:::-;;947:318;;;:::i;1586:116:1:-;;;;;;:::i;:::-;;:::i;933:96::-;;;;;;:::i;:::-;;:::i;1147:120::-;;;;;;:::i;:::-;;:::i;4524:330::-;;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;2921:32:10;;;2903:51;;2891:2;2876:18;4524:330:1;;;;;;;;785:85;;;;;;:::i;:::-;;:::i;335:40::-;;-1:-1:-1;;;;;;;;;;;335:40:1;;1957:140;;;;;;:::i;:::-;;:::i;3770:594::-;;;;;;:::i;:::-;;:::i;:::-;;;4169:25:10;;;4157:2;4142:18;3770:594:1;4023:177:10;2736:107:1;;;;;;:::i;:::-;;:::i;1474:106::-;;;;;;:::i;:::-;;:::i;2849:915::-;;;;;;:::i;:::-;;:::i;4860:287::-;;;;;;:::i;:::-;;:::i;1273:130::-;;;;;;:::i;:::-;;:::i;1271:469:9:-;;;:::i;696:83:1:-;;;;;;:::i;:::-;;:::i;1819:584:0:-;;;:::i;:::-;;;5283:14:10;;5276:22;5258:41;;5246:2;5231:18;1819:584:0;5118:187:10;1746:519:9;;;:::i;2531:81:1:-;;;;;;:::i;:::-;;:::i;1821:130::-;;;;;;:::i;:::-;;:::i;2141:297::-;;;;;;:::i;:::-;;:::i;1035:106::-;;;;;;:::i;:::-;;:::i;1572:26:0:-;;;;;;;;;254:370:9;293:36;;;;;:::i;:::-;5613:2:10;5595:21;;;5652:1;5632:18;;;5625:29;-1:-1:-1;;;5685:2:10;5670:18;;5663:37;5738:3;5731:4;5716:20;;5709:33;;;5779:1;5758:19;;;5751:30;-1:-1:-1;;;5812:3:10;5797:19;;5790:35;5857:3;5842:19;293:36:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;284:6:9;:45;;-1:-1:-1;;;;;;284:45:9;-1:-1:-1;;;;;284:45:9;;;;;;;;;;344:36;;;;;:::i;:::-;6175:2:10;6157:21;;;6214:1;6194:18;;;6187:29;-1:-1:-1;;;6247:2:10;6232:18;;6225:37;6300:3;6293:4;6278:20;;6271:33;;;6341:1;6320:19;;;6313:30;-1:-1:-1;;;6374:3:10;6359:19;;6352:35;6419:3;6404:19;344:36:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;335:6:9;:45;;-1:-1:-1;;;;;;335:45:9;-1:-1:-1;;;;;335:45:9;;;;;;;;;410:6;;393:42;;410:6;;;393:42;;;:::i;:::-;-1:-1:-1;;;;;6664:15:10;;;6646:34;;6716:15;;6711:2;6696:18;;6689:43;6596:2;6581:18;393:42:9;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;386:4:9;:49;;-1:-1:-1;;;;;;386:49:9;-1:-1:-1;;;;;386:49:9;;;;;;442:6;;:36;;-1:-1:-1;;;442:36:9;;454:8;442:36;;;6944:25:10;472:4:9;6985:18:10;;;6978:60;442:6:9;;;:11;;6917:18:10;;442:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;484:6:9;;:36;;-1:-1:-1;;;484:36:9;;496:8;484:36;;;6944:25:10;514:4:9;6985:18:10;;;6978:60;-1:-1:-1;;;;;484:6:9;;;;-1:-1:-1;484:11:9;;-1:-1:-1;6917:18:10;;484:36:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;254:370::o;947:318::-;993:6;;1017:4;;993:39;;-1:-1:-1;;;993:39:9;;-1:-1:-1;;;;;993:6:9;;;;:15;;:39;;1017:4;;;1024:7;;993:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1042:6:9;;1066:4;;1042:39;;-1:-1:-1;;;1042:39:9;;-1:-1:-1;;;;;1042:6:9;;;;:15;;:39;;1066:4;;;1073:7;;1042:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1092:4;;;;;;;;;-1:-1:-1;;;;;1092:4:9;-1:-1:-1;;;;;1092:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1123:4:9;;:29;;-1:-1:-1;;;1123:29:9;;1146:4;1123:29;;;2903:51:10;1114:55:9;;-1:-1:-1;;;;;;1123:4:9;;;;-1:-1:-1;1123:14:9;;2876:18:10;;1123:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1154:14;1114:8;:55::i;:::-;1179:32;1194:7;1203;1179:14;:32::i;:::-;1230:4;;:18;;;-1:-1:-1;;;1230:18:9;;;;1221:37;;-1:-1:-1;;;;;1230:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1250:7;1221:8;:37::i;:::-;947:318::o;1586:116:1:-;1649:18;;-1:-1:-1;;;1649:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1649:7:1;;:18;;1657:3;;1662:4;;1649:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1677:18:1;;-1:-1:-1;;;1677:18:1;;-1:-1:-1;;;;;2921:32:10;;1677:18:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1677:13:1;;-1:-1:-1;2876:18:10;;1677::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1586:116;;:::o;933:96::-;977:22;;-1:-1:-1;;;977:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;977:7:1;;:22;;985:3;;-1:-1:-1;;;990:8:1;977:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1009:13:1;;-1:-1:-1;;;1009:13:1;;-1:-1:-1;;;;;2921:32:10;;1009:13:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1009:8:1;;-1:-1:-1;2876:18:10;;1009:13:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;933:96;:::o;1147:120::-;1207:22;;-1:-1:-1;;;1207:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1207:7:1;;:22;;1215:3;;-1:-1:-1;;;1220:8:1;1207:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1239:21:1;;-1:-1:-1;;;1239:21:1;;-1:-1:-1;;;;;6664:15:10;;;1239:21:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1239:8:1;;-1:-1:-1;6581:18:10;;1239:21:1;6434:304:10;4524:330:1;4684:16;;-1:-1:-1;;;4684:16:1;;4615:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;4684:10:1;;:16;;4695:4;;4684:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4684:16:1;;;;;;;;;;;;:::i;:::-;4702:4;4667:40;;;;;;;;;:::i;:::-;;;;;;;;;;;;;4643:64;;4828:8;4822:15;4815:4;4805:8;4801:19;4798:1;4791:47;4783:55;4524:330;-1:-1:-1;;;;4524:330:1:o;785:85::-;-1:-1:-1;;;;;;;;;;;832:7:1;840:22;858:4;840:15;:22;:::i;:::-;832:31;;;;;;;;;;;;;4169:25:10;;4157:2;4142:18;;4023:177;1957:140:1;2036:18;;-1:-1:-1;;;2036:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;2036:7:1;;:18;;2044:3;;2049:4;;2036:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2064:26:1;;-1:-1:-1;;;2064:26:1;;-1:-1:-1;;;;;6664:15:10;;;2064:26:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;2064:13:1;;-1:-1:-1;6581:18:10;;2064:26:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1957:140;;;:::o;3770:594::-;3838:14;3879:3;3872;:10;;3864:40;;;;-1:-1:-1;;;3864:40:1;;10723:2:10;3864:40:1;;;10705:21:10;10762:2;10742:18;;;10735:30;-1:-1:-1;;;10781:18:10;;;10774:47;10838:18;;3864:40:1;;;;;;;;;3915:12;3930:9;3936:3;3930;:9;:::i;:::-;3915:24;;3954:4;3962:1;3954:9;3950:354;;3996:3;3987:12;;3950:354;;;4028:86;;4024:280;;4147:1;4138:10;;4024:280;;;4195:6;;;:::i;:::-;;-1:-1:-1;4239:11:1;4253:8;4195:6;4253:1;:8;:::i;:::-;4239:22;-1:-1:-1;4284:9:1;4239:22;4284:3;:9;:::i;:::-;4275:18;;4181:123;4024:280;4319:38;;;11566:21:10;;;11623:2;11603:18;;;11596:30;-1:-1:-1;;;11657:2:10;11642:18;;11635:42;11744:4;11729:20;;11722:36;;;4319:38:1;;;;;;;11709:3:10;4319:38:1;;;3854:510;3770:594;;;;;:::o;2736:107::-;2808:28;2813:5;2820:2;2824:4;2830:5;2808:4;:28::i;:::-;2736:107;;;:::o;1474:106::-;1523:22;;-1:-1:-1;;;1523:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1523:7:1;;:22;;1531:3;;-1:-1:-1;;;1536:8:1;1523:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1555:18:1;;-1:-1:-1;;;1555:18:1;;-1:-1:-1;;;;;2921:32:10;;1555:18:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1555:13:1;;-1:-1:-1;2876:18:10;;1555::1;2757:203:10;2849:915:1;3003:38;;;-1:-1:-1;;;;;2921:32:10;;;3003:38:1;;;;2903:51:10;;;;3003:38:1;;;;;;;;;;2876:18:10;;;;3003:38:1;;;;;;;-1:-1:-1;;;;;3003:38:1;-1:-1:-1;;;3003:38:1;;;2992:50;;2968:20;;2992:10;;;:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2965:77;;;3052:15;3081:7;3070:30;;;;;;;;;;;;:::i;:::-;3052:48;-1:-1:-1;3137:123:1;3255:4;3137:90;3224:2;3137:64;-1:-1:-1;;;3137:35:1;:8;3166:5;3137:28;:35::i;:::-;:52;16816:9;;;:16;;-1:-1:-1;;16816:16:1;;;;;;;;;;;;:9;16717:143;3137:64;:86;17132:10;;;:47;;;;;;;-1:-1:-1;17132:47:1;;;;;;;-1:-1:-1;;;;;17156:21:1;;;;17132:47;;;:10;17028:179;3137:90;:117;;:123::i;:::-;3305:6;3302:456;;;3367:34;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3367:34:1;-1:-1:-1;;;3367:34:1;;;3356:46;;3329:23;;-1:-1:-1;;;;;3356:10:1;;;:46;;3367:34;3356:46;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3326:76;;;3416:14;3444:10;3433:33;;;;;;;;;;;;:::i;:::-;3416:50;;3490:7;3483:4;:14;3480:143;;;3528:14;3538:4;3528:7;:14;:::i;:::-;3517:26;;;;:::i;:::-;;;3480:143;;;3593:14;3600:7;3593:4;:14;:::i;:::-;3582:26;;;;:::i;:::-;;;3480:143;3636:111;3740:6;3636:72;-1:-1:-1;;;3636:39:1;:8;3669:5;3636:32;:39::i;:111::-;3312:446;;2924:840;;2849:915;;;;:::o;4860:287::-;4984:16;;-1:-1:-1;;;4984:16:1;;4932:12;;;;-1:-1:-1;;;;;;;;;;;1671:64:0;4984:10:1;;:16;;4995:4;;4984:16;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4984:16:1;;;;;;;;;;;;:::i;:::-;4960:40;;5121:8;5115:15;5108:4;5098:8;5094:19;5091:1;5084:47;5076:55;4860:287;-1:-1:-1;;;4860:287:1:o;1273:130::-;1347:18;;-1:-1:-1;;;1347:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1347:7:1;;:18;;1355:3;;1360:4;;1347:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1375:21:1;;-1:-1:-1;;;1375:21:1;;-1:-1:-1;;;;;6664:15:10;;;1375:21:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1375:8:1;;-1:-1:-1;6581:18:10;;1375:21:1;6434:304:10;1271:469:9;1327:6;;1351:4;;1327:39;;-1:-1:-1;;;1327:39:9;;-1:-1:-1;;;;;1327:6:9;;;;:15;;:39;;1351:4;;;1358:7;;1327:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1376:6:9;;1400:4;;1376:39;;-1:-1:-1;;;1376:39:9;;-1:-1:-1;;;;;1376:6:9;;;;:15;;:39;;1400:4;;;1407:7;;1376:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1426:4;;;;;;;;;-1:-1:-1;;;;;1426:4:9;-1:-1:-1;;;;;1426:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1458:6:9;;1482:4;;1458:39;;-1:-1:-1;;;1458:39:9;;-1:-1:-1;;;;;1458:6:9;;;;-1:-1:-1;1458:15:9;;-1:-1:-1;1458:39:9;;1482:4;;;;1489:7;;1458:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1507:6:9;;1531:4;;1507:39;;-1:-1:-1;;;1507:39:9;;-1:-1:-1;;;;;1507:6:9;;;;:15;;:39;;1531:4;;;1538:7;;1507:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1557:4;;;;;;;;;-1:-1:-1;;;;;1557:4:9;-1:-1:-1;;;;;1557:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1598:4:9;;:29;;-1:-1:-1;;;1598:29:9;;1621:4;1598:29;;;2903:51:10;1589:55:9;;-1:-1:-1;;;;;;1598:4:9;;;;-1:-1:-1;1598:14:9;;2876:18:10;;1598:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1629:14;1589:8;:55::i;:::-;1663:4;;:18;;;-1:-1:-1;;;1663:18:9;;;;1654:37;;-1:-1:-1;;;;;1663:4:9;;:16;;:18;;;;;;;;;;;;;;:4;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1683:7;1654:8;:37::i;:::-;1701:32;1716:7;1725;1701:14;:32::i;696:83:1:-;-1:-1:-1;;;;;;;;;;;741:7:1;749:22;767:4;749:15;:22;:::i;1819:584:0:-;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:0;;;;;;;;1819:584::o;1869:528::-;1941:17;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;1980:374;;2196:43;;2023:20;;-1:-1:-1;;;;;;;;;;;1671:64:0;2135:34;;2196:43;;1671:64;;-1:-1:-1;;;2221:17:0;2196:43;;;:::i;:::-;;;;-1:-1:-1;;2196:43:0;;;;;;;;;;2086:175;;;2196:43;2086:175;;:::i;:::-;;;;-1:-1:-1;;2086:175:0;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:0:o;1746:519:9:-;1793:6;;1817:4;;1793:39;;-1:-1:-1;;;1793:39:9;;-1:-1:-1;;;;;1793:6:9;;;;:15;;:39;;1817:4;;;1824:7;;1793:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;1842:6:9;;1866:4;;1842:39;;-1:-1:-1;;;1842:39:9;;-1:-1:-1;;;;;1842:6:9;;;;:15;;:39;;1866:4;;;1873:7;;1842:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1892:4;;;;;;;;;-1:-1:-1;;;;;1892:4:9;-1:-1:-1;;;;;1892:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1932:4:9;;:29;;-1:-1:-1;;;1932:29:9;;1955:4;1932:29;;;2903:51:10;1923:55:9;;-1:-1:-1;;;;;;1932:4:9;;;;-1:-1:-1;1932:14:9;;2876:18:10;;1932:29:9;2757:203:10;1923:55:9;1988:32;2003:7;2012;1988:14;:32::i;:::-;2031:6;;2055:4;;2031:39;;-1:-1:-1;;;2031:39:9;;-1:-1:-1;;;;;2031:6:9;;;;:15;;:39;;2055:4;;;2062:7;;2031:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2080:6:9;;2104:4;;2080:39;;-1:-1:-1;;;2080:39:9;;-1:-1:-1;;;;;2080:6:9;;;;:15;;:39;;2104:4;;;2111:7;;2080:39;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2130:4;;;;;;;;;-1:-1:-1;;;;;2130:4:9;-1:-1:-1;;;;;2130:9:9;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2170:4:9;;:29;;-1:-1:-1;;;2170:29:9;;2193:4;2170:29;;;2903:51:10;2161:55:9;;-1:-1:-1;;;;;;2170:4:9;;;;-1:-1:-1;2170:14:9;;2876:18:10;;2170:29:9;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2201:14;2161:8;:55::i;:::-;2226:32;2241:7;2250;2226:14;:32::i;2531:81:1:-;2588:17;;-1:-1:-1;;;2588:17:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;2588:7:1;;:17;;2596:2;;2600:4;;2588:17;;;:::i;1821:130::-;1886:22;;-1:-1:-1;;;1886:22:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1886:7:1;;:22;;1894:3;;-1:-1:-1;;;1899:8:1;1886:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1918:26:1;;-1:-1:-1;;;1918:26:1;;-1:-1:-1;;;;;6664:15:10;;;1918:26:1;;;6646:34:10;6716:15;;6696:18;;;6689:43;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1918:13:1;;-1:-1:-1;6581:18:10;;1918:26:1;6434:304:10;2141:297:1;2217:81;;;;;13210:2:10;13192:21;;;13249:2;13229:18;;;13222:30;13288:34;13283:2;13268:18;;13261:62;13359:29;13354:2;13339:18;;13332:57;13421:3;13406:19;;13008:423;2217:81:1;;;;;;;;2308:123;2426:4;2308:90;2395:2;2308:64;-1:-1:-1;;;2308:35:1;:8;2337:5;2308:28;:35::i;1035:106::-;1093:18;;-1:-1:-1;;;1093:18:1;;-1:-1:-1;;;;;;;;;;;1671:64:0;1093:7:1;;:18;;1101:3;;1106:4;;1093:18;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1121:13:1;;-1:-1:-1;;;1121:13:1;;-1:-1:-1;;;;;2921:32:10;;1121:13:1;;;2903:51:10;-1:-1:-1;;;;;;;;;;;1671:64:0;-1:-1:-1;1121:8:1;;-1:-1:-1;2876:18:10;;1121:13:1;2757:203:10;5202:262:0;5264:1;5259;:6;5255:203;;5286:41;;;;;13638:2:10;13620:21;;;13677:2;13657:18;;;13650:30;13716:34;13711:2;13696:18;;13689:62;-1:-1:-1;;;13782:2:10;13767:18;;13760:32;13824:3;13809:19;;13436:398;5286:41:0;;;;;;;;5346:31;;;14051:21:10;;;14108:2;14088:18;;;14081:30;-1:-1:-1;;;14142:2:10;14127:18;;14120:40;14227:4;14212:20;;14205:36;;;5346:31:0;;;;;;;14192:3:10;5346:31:0;;;5396;;;14464:21:10;;;14521:2;14501:18;;;14494:30;-1:-1:-1;;;14555:2:10;14540:18;;14533:40;14640:4;14625:20;;14618:36;;;5396:31:0;;;;;;;14605:3:10;5396:31:0;;;5441:6;:4;:6::i;:::-;5202:262;;:::o;630:311:9:-;738:16;756;778:4;;;;;;;;;-1:-1:-1;;;;;778:4:9;-1:-1:-1;;;;;778:16:9;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;737:59;;;;;806;815:8;-1:-1:-1;;;;;806:59:9;825:16;-1:-1:-1;;;;;806:59:9;;;;;;;;;;;;;;-1:-1:-1;;;806:59:9;;;:8;:59::i;:::-;875;884:8;-1:-1:-1;;;;;875:59:9;894:16;-1:-1:-1;;;;;875:59:9;;;;;;;;;;;;;;-1:-1:-1;;;875:59:9;;;:8;:59::i;16555:156:1:-;16661:12;;;:22;;-1:-1:-1;;;;;;16661:22:1;-1:-1:-1;;;;;16661:22:1;;;;;;;;;;:12;16555:156::o;17839:120::-;17919:33;17933:4;17947:3;17919:13;:33::i;2410:424:0:-;-1:-1:-1;;;;;;;;;;;2978:55:0;3059:16;2445:359;;2645:67;;2482:11;;-1:-1:-1;;;;;;;;;;;1671:64:0;2579:43;;2645:67;;1671:64;;-1:-1:-1;;;2670:17:0;2705:4;;2645:67;;;:::i;:::-;;;;-1:-1:-1;;2645:67:0;;;;;;;;;;2534:196;;;2645:67;2534:196;;:::i;:::-;;;;-1:-1:-1;;2534:196:0;;;;;;;;;;2499:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2445:359:0;2813:7;:14;;-1:-1:-1;;2813:14:0;;;;;2410:424::o;5469:178::-;5550:1;5545;:6;5541:100;;5572:30;5598:3;5572:30;;;;;;:::i;:::-;;;;;;;;5616:14;5625:1;5628;5616:8;:14::i;18193:1058:1:-;18309:12;;;;18345:9;;;;18386:11;;;;18430:10;;;18407:33;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;18309:12:1;;;;18345:9;;;;;;18295:11;;18407:33;;18430:10;;18407:33;;18430:10;18407:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18451:17;18488:4;18494:12;18502:3;18494:7;:12::i;:::-;18471:36;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;18471:36:1;;;;;;;;;-1:-1:-1;;;;;18522:15:1;;;;;;:10;;;18471:36;18522:15;;;;;;-1:-1:-1;;;;;;18522:21:1;;;;;;;;;18471:36;;-1:-1:-1;18522:21:1;;:15;;18554:34;;18571:3;;18576:11;;18554:34;;:::i;:::-;;;;-1:-1:-1;;18554:34:1;;;;;;;;;18544:45;;18554:34;18544:45;;;;18522:68;;;;;;;;;;-1:-1:-1;18522:68:1;;;;18517:110;;18606:10;18611:4;18606;:10::i;:::-;;18517:110;-1:-1:-1;;;;;18659:15:1;;18636:12;18659:15;;;;;;;;;;;-1:-1:-1;;;;;;18659:21:1;;;;;;;;;18691:34;;18659:21;;18636:12;;18691:34;;18708:3;;18713:11;;18691:34;;:::i;:::-;;;;;;;;;;;;;18681:45;;;;;;18659:68;;;;;;;;;;;;18651:77;;18636:92;;18739:12;18778:17;18799:3;-1:-1:-1;;;;;18799:14:1;18814:4;18799:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18775:44:1;-1:-1:-1;18840:36:1;;-1:-1:-1;18775:44:1;18861:14;18864:11;18861:2;:14;:::i;:::-;18840;:36::i;:::-;18911:28;;-1:-1:-1;;;18911:28:1;;18833:43;;-1:-1:-1;18896:12:1;;-1:-1:-1;;;;;;;;;;;;18911:17:1;;;:28;;18929:3;;18934:4;;18911:28;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;18896:43;;18962:4;18954;:12;18950:141;;18982:98;;-1:-1:-1;;;18982:98:1;;;;;;;:::i;:::-;19100:34;;-1:-1:-1;;;19100:34:1;;-1:-1:-1;;;;;;;;;;;19100:18:1;;;:34;;19119:3;;19124:4;;19130:3;;19100:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;19151:12:1;;;19144:19;;-1:-1:-1;;;;;;19144:19:1;;;-1:-1:-1;19180:9:1;;;19173:16;;-1:-1:-1;;19173:16:1;;;19199:17;-1:-1:-1;19206:10:1;;19151:12;19199:17;:::i;:::-;19233:4;:11;;19226:18;;;18285:966;;;;;;;;18193:1058;;:::o;19560:397::-;19619:12;19647:19;19679:1;:8;19690:2;19679:13;;;;:::i;:::-;19669:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19669:24:1;;19647:46;;19708:9;19703:224;19727:1;:8;19723:1;:12;19703:224;;;19756:9;19768:1;19770;19768:4;;;;;;;;:::i;:::-;;;;;;;19756:16;;19901:1;19895;19891:2;19887:10;19883:2;19879:19;19871:6;19867:32;19860:43;19842:75;19737:3;;;;;:::i;:::-;;;;19703:224;;;-1:-1:-1;19944:6:1;19560:397;-1:-1:-1;;19560:397:1:o;13435:3114::-;13559:12;;;;13595:9;;;;13636:11;;;;13680:10;;;13657:33;;;;;;;;;;;;;;;;;;;13522:7;;-1:-1:-1;;;;;13559:12:1;;13595:9;;;13636:11;13522:7;;13657:33;;13680:10;;13657:33;;;13680:10;13657:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;13741:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;13741:21:1;;;;;;;;;13773:34;;13657:33;;-1:-1:-1;13741:21:1;:15;;-1:-1:-1;13773:34:1;;-1:-1:-1;13657:33:1;;13795:11;;13773:34;;:::i;:::-;;;;-1:-1:-1;;13773:34:1;;;;;;;;;13763:45;;13773:34;13763:45;;;;13741:68;;;;;;;;;;-1:-1:-1;13741:68:1;;;;13737:174;;;-1:-1:-1;;;;;13832:15:1;;:10;:15;;;;;;;;;;;-1:-1:-1;;;;;;13832:21:1;;;;;;;;;13864:34;;13832:21;;:10;13864:34;;13881:3;;13886:11;;13864:34;;:::i;:::-;;;;;;;;;;;;;13854:45;;;;;;13832:68;;;;;;;;;;;;13825:75;;;;;;13435:3114;;;:::o;13737:174::-;13920:17;13957:4;13963:12;13971:3;13963:7;:12::i;:::-;13940:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;13920:56;;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;13986:19:1;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14017:12;14056:17;14077:3;-1:-1:-1;;;;;14077:14:1;14092:4;14077:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;14053:44:1;-1:-1:-1;14118:36:1;;-1:-1:-1;14053:44:1;14139:14;14142:11;14139:2;:14;:::i;14118:36::-;14204:35;;-1:-1:-1;;;14204:35:1;;-1:-1:-1;;;;;2921:32:10;;14204:35:1;;;2903:51:10;14111:43:1;;-1:-1:-1;14176:22:1;;-1:-1:-1;;;;;;;;;;;;14204:21:1;;;2876:18:10;;14204:35:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;14204:35:1;;;;;;;;;;;;:::i;:::-;14175:64;;;14253:5;:12;14269:1;14253:17;14249:1997;;14286:12;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;14301:17:1;;14319:3;14324:5;14330:1;14324:8;;;;;;;;:::i;:::-;;;;;;;14301:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14286:47;-1:-1:-1;14286:47:1;14347:106;;14394:44;14415:3;14428:5;14434:1;14428:8;;;;;;;;:::i;:::-;;;;;;;14420:17;;14394:44;;;;;;;:::i;:::-;;;;;;;;14347:106;14478:4;14470;:12;14466:149;;14502:98;;-1:-1:-1;;;14502:98:1;;;;;;;:::i;:::-;14633:86;14643:3;14648:4;14681:3;14686:11;14664:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;14654:45;;;;;;14709:5;14715:1;14709:8;;;;;;;;:::i;:::-;;;;;;;14701:17;;14633:86;;;;;;;;;:::i;:::-;;;;;;;;14812:5;14818:1;14812:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;14733:15:1;;14804:17;14733:15;;;;;;;;;;-1:-1:-1;;;;;;14733:21:1;;;;;;;;;14765:34;;14812:8;;14733:21;;14765:34;;14782:3;;14787:11;;14765:34;;:::i;:::-;;;;-1:-1:-1;;14765:34:1;;;;;;;;;14755:45;;14765:34;14755:45;;;;14733:68;;;;;;;;;;;;-1:-1:-1;14733:68:1;;;:88;;;;-1:-1:-1;;;;;14835:15:1;;;;14906:4;14835:10;;;:15;;;;;-1:-1:-1;;;;;;14835:21:1;;;;;;;;;14867:34;;14906:4;;-1:-1:-1;14867:34:1;;14884:3;;14889:11;;14867:34;;:::i;:::-;;;;;;;-1:-1:-1;;14867:34:1;;;;;;14857:45;;14867:34;14857:45;;;;14835:68;;;;;;;;;;-1:-1:-1;14835:68:1;:75;;-1:-1:-1;;14835:75:1;;;;;;;;;;-1:-1:-1;14249:1997:1;;;14946:1;14931:5;:12;:16;14927:1319;;;14968:9;14963:1190;14987:5;:12;14983:1;:16;14963:1190;;;15024:12;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15039:17:1;;15057:3;15062:5;15068:1;15062:8;;;;;;;;:::i;:::-;;;;;;;15039:32;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15024:47;-1:-1:-1;15024:47:1;15089:114;;15140:44;15161:3;15174:5;15180:1;15174:8;;;;;;;;:::i;:::-;;;;;;;15166:17;;15140:44;;;;;;;:::i;:::-;;;;;;;;15089:114;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15245:18:1;;15264:3;15269:5;15275:1;15269:8;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1;;;15245:53:1;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15316:12;15346:17;15421:3;-1:-1:-1;;;;;15421:14:1;15436:4;15421:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;15403:38:1;;-1:-1:-1;15403:38:1;-1:-1:-1;15470:36:1;15403:38;15491:14;15494:11;15491:2;:14;:::i;15470:36::-;15463:43;;15547:7;:37;;;;;-1:-1:-1;;;15558:4:1;:26;15547:37;15543:539;;;15682:86;15692:3;15697:4;15730:3;15735:11;15713:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15703:45;;;;;;15758:5;15764:1;15758:8;;;;;;;;:::i;:::-;;;;;;;15750:17;;15682:86;;;;;;;;;:::i;:::-;;;;;;;;15869:5;15875:1;15869:8;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;15790:15:1;;15861:17;15790:15;;;;;;;;;;-1:-1:-1;;;;;;15790:21:1;;;;;;;;;15822:34;;15869:8;;15790:21;;15822:34;;15839:3;;15844:11;;15822:34;;:::i;:::-;;;;;;;;;;;;;15812:45;;;;;;15790:68;;;;;;;;;;;:88;;;;15971:4;15900;:10;;:15;15911:3;-1:-1:-1;;;;;15900:15:1;-1:-1:-1;;;;;15900:15:1;;;;;;;;;;;;:21;15916:4;-1:-1:-1;;;;;15900:21:1;;-1:-1:-1;;;;;15900:21:1;;;;;;;;;;;;;:68;15949:3;15954:11;15932:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;15922:45;;;;;;15900:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;15997:18:1;;16016:3;16021:5;16027:1;16021:8;;;;;;;;:::i;:::-;;;;;;;16031:4;15997:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16058:5;;;;;15543:539;-1:-1:-1;;;;;;;;;;;12709:37:1;;-1:-1:-1;;;;;16099:18:1;;16118:3;16123:5;16129:1;16123:8;;;;;;;;:::i;:::-;;;;;;;16133:4;16099:39;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15006:1147;;;15001:3;;;;;:::i;:::-;;;;14963:1190;;;;14927:1319;;;16183:52;;-1:-1:-1;;;16183:52:1;;19694:2:10;16183:52:1;;;19676:21:10;19733:2;19713:18;;;19706:30;19772:34;19752:18;;;19745:62;-1:-1:-1;;;19823:18:10;;;19816:32;19865:19;;16183:52:1;19492:398:10;16183:52:1;-1:-1:-1;;;;;16264:15:1;;;;;;:10;;;:15;;;;;;;;-1:-1:-1;;;;;;16264:21:1;;;;;;;;;16296:34;;16264:21;;:15;16296:34;;16313:3;;16318:11;;16296:34;;:::i;:::-;;;;-1:-1:-1;;16296:34:1;;;;;;;;;16286:45;;16296:34;16286:45;;;;16264:68;;;;;;;;;;-1:-1:-1;16264:68:1;;;;16256:89;;;;-1:-1:-1;;;16256:89:1;;20097:2:10;16256:89:1;;;20079:21:10;20136:1;20116:18;;;20109:29;-1:-1:-1;;;20154:18:10;;;20147:38;20202:18;;16256:89:1;19895:331:10;16256:89:1;16363:12;;;16356:19;;-1:-1:-1;;;;;;16356:19:1;;;16392:9;;;16385:16;;-1:-1:-1;;16385:16:1;;;16411:17;-1:-1:-1;16418:10:1;;16363:12;16411:17;:::i;:::-;16438:18;16445:11;;;16438:18;;;-1:-1:-1;;;;;16474:15:1;;;;;;;;;;;;-1:-1:-1;;;;;;16474:21:1;;;;;;;;;16506:34;;16474:21;;16438:18;16506:34;;16523:3;;16528:11;;16506:34;;:::i;:::-;;;;;;;;;;;;;16496:45;;;;;;16474:68;;;;;;;;;;;;16467:75;;;;;;;;;13435:3114;;;:::o;19257:297::-;19331:7;19350:11;19372;19397:2;19386:1;:8;:13;:29;;19407:1;:8;19386:29;;;19402:2;19386:29;19372:43;;19430:6;19425:103;19446:3;19442:1;:7;19425:103;;;19511:5;:1;19515;19511:5;:::i;:::-;19485:1;19487:10;19496:1;19487:6;:10;:::i;:::-;19485:13;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;;;;;19485:13:1;19477:40;;19470:47;;;;;19451:3;;;;:::i;:::-;;;;19425:103;;;-1:-1:-1;19544:3:1;;19257:297;-1:-1:-1;;;;19257:297:1:o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::o;:::-;;;;;;;;;;;;;;;;;;:::o;14:173:10:-;82:20;;-1:-1:-1;;;;;131:31:10;;121:42;;111:70;;177:1;174;167:12;192:254;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;360:29;379:9;360:29;:::i;:::-;350:39;436:2;421:18;;;;408:32;;-1:-1:-1;;;192:254:10:o;451:186::-;510:6;563:2;551:9;542:7;538:23;534:32;531:52;;;579:1;576;569:12;531:52;602:29;621:9;602:29;:::i;:::-;592:39;451:186;-1:-1:-1;;;451:186:10:o;642:260::-;710:6;718;771:2;759:9;750:7;746:23;742:32;739:52;;;787:1;784;777:12;739:52;810:29;829:9;810:29;:::i;:::-;800:39;;858:38;892:2;881:9;877:18;858:38;:::i;:::-;848:48;;642:260;;;;;:::o;907:127::-;968:10;963:3;959:20;956:1;949:31;999:4;996:1;989:15;1023:4;1020:1;1013:15;1039:275;1110:2;1104:9;1175:2;1156:13;;-1:-1:-1;;1152:27:10;1140:40;;1210:18;1195:34;;1231:22;;;1192:62;1189:88;;;1257:18;;:::i;:::-;1293:2;1286:22;1039:275;;-1:-1:-1;1039:275:10:o;1319:187::-;1368:4;1401:18;1393:6;1390:30;1387:56;;;1423:18;;:::i;:::-;-1:-1:-1;1489:2:10;1468:15;-1:-1:-1;;1464:29:10;1495:4;1460:40;;1319:187::o;1511:338::-;1576:5;1605:53;1621:36;1650:6;1621:36;:::i;:::-;1605:53;:::i;:::-;1596:62;;1681:6;1674:5;1667:21;1721:3;1712:6;1707:3;1703:16;1700:25;1697:45;;;1738:1;1735;1728:12;1697:45;1787:6;1782:3;1775:4;1768:5;1764:16;1751:43;1841:1;1834:4;1825:6;1818:5;1814:18;1810:29;1803:40;1511:338;;;;;:::o;1854:222::-;1897:5;1950:3;1943:4;1935:6;1931:17;1927:27;1917:55;;1968:1;1965;1958:12;1917:55;1990:80;2066:3;2057:6;2044:20;2037:4;2029:6;2025:17;1990:80;:::i;2081:671::-;2168:6;2176;2229:2;2217:9;2208:7;2204:23;2200:32;2197:52;;;2245:1;2242;2235:12;2197:52;2285:9;2272:23;2314:18;2355:2;2347:6;2344:14;2341:34;;;2371:1;2368;2361:12;2341:34;2394:50;2436:7;2427:6;2416:9;2412:22;2394:50;:::i;:::-;2384:60;;2497:2;2486:9;2482:18;2469:32;2453:48;;2526:2;2516:8;2513:16;2510:36;;;2542:1;2539;2532:12;2510:36;-1:-1:-1;2565:24:10;;2620:4;2612:13;;2608:27;-1:-1:-1;2598:55:10;;2649:1;2646;2639:12;2598:55;2672:74;2738:7;2733:2;2720:16;2715:2;2711;2707:11;2672:74;:::i;:::-;2662:84;;;2081:671;;;;;:::o;2965:180::-;3024:6;3077:2;3065:9;3056:7;3052:23;3048:32;3045:52;;;3093:1;3090;3083:12;3045:52;-1:-1:-1;3116:23:10;;2965:180;-1:-1:-1;2965:180:10:o;3369:328::-;3446:6;3454;3462;3515:2;3503:9;3494:7;3490:23;3486:32;3483:52;;;3531:1;3528;3521:12;3483:52;3554:29;3573:9;3554:29;:::i;:::-;3544:39;;3602:38;3636:2;3625:9;3621:18;3602:38;:::i;:::-;3592:48;;3687:2;3676:9;3672:18;3659:32;3649:42;;3369:328;;;;;:::o;3702:316::-;3779:6;3787;3795;3848:2;3836:9;3827:7;3823:23;3819:32;3816:52;;;3864:1;3861;3854:12;3816:52;-1:-1:-1;;3887:23:10;;;3957:2;3942:18;;3929:32;;-1:-1:-1;4008:2:10;3993:18;;;3980:32;;3702:316;-1:-1:-1;3702:316:10:o;4205:118::-;4291:5;4284:13;4277:21;4270:5;4267:32;4257:60;;4313:1;4310;4303:12;4328:458;4411:6;4419;4427;4435;4488:3;4476:9;4467:7;4463:23;4459:33;4456:53;;;4505:1;4502;4495:12;4456:53;4528:29;4547:9;4528:29;:::i;:::-;4518:39;;4576:38;4610:2;4599:9;4595:18;4576:38;:::i;:::-;4566:48;;4661:2;4650:9;4646:18;4633:32;4623:42;;4715:2;4704:9;4700:18;4687:32;4728:28;4750:5;4728:28;:::i;:::-;4328:458;;;;-1:-1:-1;4328:458:10;;-1:-1:-1;;4328:458:10:o;4791:322::-;4860:6;4913:2;4901:9;4892:7;4888:23;4884:32;4881:52;;;4929:1;4926;4919:12;4881:52;4969:9;4956:23;5002:18;4994:6;4991:30;4988:50;;;5034:1;5031;5024:12;4988:50;5057;5099:7;5090:6;5079:9;5075:22;5057:50;:::i;:::-;5047:60;4791:322;-1:-1:-1;;;;4791:322:10:o;7049:300::-;-1:-1:-1;;;;;7267:32:10;;;;7249:51;;7331:2;7316:18;;7309:34;7237:2;7222:18;;7049:300::o;7354:245::-;7421:6;7474:2;7462:9;7453:7;7449:23;7445:32;7442:52;;;7490:1;7487;7480:12;7442:52;7522:9;7516:16;7541:28;7563:5;7541:28;:::i;7604:184::-;7674:6;7727:2;7715:9;7706:7;7702:23;7698:32;7695:52;;;7743:1;7740;7733:12;7695:52;-1:-1:-1;7766:16:10;;7604:184;-1:-1:-1;7604:184:10:o;8397:258::-;8469:1;8479:113;8493:6;8490:1;8487:13;8479:113;;;8569:11;;;8563:18;8550:11;;;8543:39;8515:2;8508:10;8479:113;;;8610:6;8607:1;8604:13;8601:48;;;-1:-1:-1;;8645:1:10;8627:16;;8620:27;8397:258::o;8660:::-;8702:3;8740:5;8734:12;8767:6;8762:3;8755:19;8783:63;8839:6;8832:4;8827:3;8823:14;8816:4;8809:5;8805:16;8783:63;:::i;:::-;8900:2;8879:15;-1:-1:-1;;8875:29:10;8866:39;;;;8907:4;8862:50;;8660:258;-1:-1:-1;;8660:258:10:o;8923:220::-;9072:2;9061:9;9054:21;9035:4;9092:45;9133:2;9122:9;9118:18;9110:6;9092:45;:::i;9148:635::-;9227:6;9280:2;9268:9;9259:7;9255:23;9251:32;9248:52;;;9296:1;9293;9286:12;9248:52;9329:9;9323:16;9362:18;9354:6;9351:30;9348:50;;;9394:1;9391;9384:12;9348:50;9417:22;;9470:4;9462:13;;9458:27;-1:-1:-1;9448:55:10;;9499:1;9496;9489:12;9448:55;9528:2;9522:9;9553:49;9569:32;9598:2;9569:32;:::i;9553:49::-;9625:2;9618:5;9611:17;9665:7;9660:2;9655;9651;9647:11;9643:20;9640:33;9637:53;;;9686:1;9683;9676:12;9637:53;9699:54;9750:2;9745;9738:5;9734:14;9729:2;9725;9721:11;9699:54;:::i;:::-;9772:5;9148:635;-1:-1:-1;;;;;9148:635:10:o;9788:466::-;9963:3;10001:6;9995:13;10017:53;10063:6;10058:3;10051:4;10043:6;10039:17;10017:53;:::i;:::-;10133:13;;10092:16;;;;10155:57;10133:13;10092:16;10189:4;10177:17;;10155:57;:::i;:::-;10228:20;;9788:466;-1:-1:-1;;;;9788:466:10:o;10259:127::-;10320:10;10315:3;10311:20;10308:1;10301:31;10351:4;10348:1;10341:15;10375:4;10372:1;10365:15;10391:125;10431:4;10459:1;10456;10453:8;10450:34;;;10464:18;;:::i;:::-;-1:-1:-1;10501:9:10;;10391:125::o;10867:135::-;10906:3;10927:17;;;10924:43;;10947:18;;:::i;:::-;-1:-1:-1;10994:1:10;10983:13;;10867:135::o;11007:209::-;11039:1;11065;11055:132;;11109:10;11104:3;11100:20;11097:1;11090:31;11144:4;11141:1;11134:15;11172:4;11169:1;11162:15;11055:132;-1:-1:-1;11201:9:10;;11007:209::o;11221:128::-;11261:3;11292:1;11288:6;11285:1;11282:13;11279:39;;;11298:18;;:::i;:::-;-1:-1:-1;11334:9:10;;11221:128::o;11769:274::-;11898:3;11936:6;11930:13;11952:53;11998:6;11993:3;11986:4;11978:6;11974:17;11952:53;:::i;:::-;12021:16;;;;;11769:274;-1:-1:-1;;11769:274:10:o;12632:371::-;-1:-1:-1;;;;;;12817:33:10;;12805:46;;12874:13;;12787:3;;12896:61;12874:13;12946:1;12937:11;;12930:4;12918:17;;12896:61;:::i;:::-;12977:16;;;;12995:1;12973:24;;12632:371;-1:-1:-1;;;12632:371:10:o;14665:188::-;14744:13;;-1:-1:-1;;;;;14786:42:10;;14776:53;;14766:81;;14843:1;14840;14833:12;14858:450;14945:6;14953;14961;15014:2;15002:9;14993:7;14989:23;14985:32;14982:52;;;15030:1;15027;15020:12;14982:52;15053:40;15083:9;15053:40;:::i;:::-;15043:50;;15112:49;15157:2;15146:9;15142:18;15112:49;:::i;:::-;15102:59;;15204:2;15193:9;15189:18;15183:25;15248:10;15241:5;15237:22;15230:5;15227:33;15217:61;;15274:1;15271;15264:12;15217:61;15297:5;15287:15;;;14858:450;;;;;:::o;15313:345::-;-1:-1:-1;;;;;15533:32:10;;;;15515:51;;15597:2;15582:18;;15575:34;;;;15640:2;15625:18;;15618:34;15503:2;15488:18;;15313:345::o;15663:446::-;15913:2;15902:9;15895:21;15952:1;15947:2;15936:9;15932:18;15925:29;-1:-1:-1;;;15985:2:10;15974:9;15970:18;15963:35;16036:3;16029:4;16018:9;16014:20;16007:33;15876:4;16057:46;16098:3;16087:9;16083:19;16075:6;16057:46;:::i;16114:610::-;16360:13;;16303:3;;16334;;16413:4;16440:15;;;16303:3;16483:175;16497:6;16494:1;16491:13;16483:175;;;16560:13;;16546:28;;16596:14;;;;16633:15;;;;16519:1;16512:9;16483:175;;;-1:-1:-1;;16667:21:10;;;-1:-1:-1;16704:14:10;;;;;-1:-1:-1;;;16114:610:10:o;16729:168::-;16769:7;16835:1;16831;16827:6;16823:14;16820:1;16817:21;16812:1;16805:9;16798:17;16794:45;16791:71;;;16842:18;;:::i;:::-;-1:-1:-1;16882:9:10;;16729:168::o;17091:484::-;17293:2;17275:21;;;17332:2;17312:18;;;17305:30;17371:34;17366:2;17351:18;;17344:62;17442:34;17437:2;17422:18;;17415:62;-1:-1:-1;;;17508:3:10;17493:19;;17486:47;17565:3;17550:19;;17091:484::o;17580:127::-;17641:10;17636:3;17632:20;17629:1;17622:31;17672:4;17669:1;17662:15;17696:4;17693:1;17686:15;17712:709;17777:5;17830:3;17823:4;17815:6;17811:17;17807:27;17797:55;;17848:1;17845;17838:12;17797:55;17877:6;17871:13;17903:4;17926:18;17922:2;17919:26;17916:52;;;17948:18;;:::i;:::-;17994:2;17991:1;17987:10;18017:28;18041:2;18037;18033:11;18017:28;:::i;:::-;18079:15;;;18149;;;18145:24;;;18110:12;;;;18181:15;;;18178:35;;;18209:1;18206;18199:12;18178:35;18245:2;18237:6;18233:15;18222:26;;18257:135;18273:6;18268:3;18265:15;18257:135;;;18339:10;;18327:23;;18290:12;;;;18370;;;;18257:135;;;18410:5;17712:709;-1:-1:-1;;;;;;;17712:709:10:o;18426:614::-;18555:6;18563;18616:2;18604:9;18595:7;18591:23;18587:32;18584:52;;;18632:1;18629;18622:12;18584:52;18665:9;18659:16;18694:18;18735:2;18727:6;18724:14;18721:34;;;18751:1;18748;18741:12;18721:34;18774:72;18838:7;18829:6;18818:9;18814:22;18774:72;:::i;:::-;18764:82;;18892:2;18881:9;18877:18;18871:25;18855:41;;18921:2;18911:8;18908:16;18905:36;;;18937:1;18934;18927:12;18905:36;;18960:74;19026:7;19015:8;19004:9;19000:24;18960:74;:::i;19045:442::-;-1:-1:-1;;;;;19292:32:10;;;;19274:51;;-1:-1:-1;;;;;;19361:33:10;;;;19356:2;19341:18;;19334:61;19426:2;19411:18;;19404:34;19469:2;19454:18;;19447:34;19261:3;19246:19;;19045:442::o",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/test/Contract.t.sol",
    "id": 21603,
    "exportedSymbols": {
      "DSTest": [
        1786
      ],
      "ERC20": [
        20737
      ],
      "ERC20Mintable": [
        21277
      ],
      "IERC20": [
        20756
      ],
      "InsufficientLiquidityBurned": [
        20760
      ],
      "InsufficientLiquidityMinted": [
        20758
      ],
      "Math": [
        21245
      ],
      "Pair": [
        21171
      ],
      "PairTest": [
        21602
      ],
      "StdStorage": [
        2919
      ],
      "Test": [
        2821
      ],
      "TransferFailed": [
        20762
      ],
      "Vm": [
        4221
      ],
      "console": [
        12285
      ],
      "console2": [
        20349
      ],
      "stdError": [
        2891
      ],
      "stdMath": [
        4020
      ],
      "stdStorage": [
        3876
      ]
    },
    "nodeType": "SourceUnit",
    "src": "39:2231:9",
    "nodes": [
      {
        "id": 21279,
        "nodeType": "PragmaDirective",
        "src": "39:24:9",
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".13"
        ]
      },
      {
        "id": 21280,
        "nodeType": "ImportDirective",
        "src": "65:28:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21603,
        "sourceUnit": 4021,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21281,
        "nodeType": "ImportDirective",
        "src": "94:40:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/src/mocks/ERC20Mintable.sol",
        "file": "../src/mocks/ERC20Mintable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21603,
        "sourceUnit": 21278,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21282,
        "nodeType": "ImportDirective",
        "src": "135:25:9",
        "absolutePath": "/Users/tche/Documents/code/a_learning_projects/a_rebuild/teddyswap-v2/src/Pair.sol",
        "file": "../src/Pair.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 21603,
        "sourceUnit": 21172,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 21602,
        "nodeType": "ContractDefinition",
        "src": "162:2107:9",
        "nodes": [
          {
            "id": 21287,
            "nodeType": "VariableDeclaration",
            "src": "192:20:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token0",
            "nameLocation": "206:6:9",
            "scope": 21602,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "id": 21286,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21285,
                "name": "ERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21277,
                "src": "192:13:9"
              },
              "referencedDeclaration": 21277,
              "src": "192:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                "typeString": "contract ERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21290,
            "nodeType": "VariableDeclaration",
            "src": "216:20:9",
            "constant": false,
            "mutability": "mutable",
            "name": "token1",
            "nameLocation": "230:6:9",
            "scope": 21602,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
              "typeString": "contract ERC20Mintable"
            },
            "typeName": {
              "id": 21289,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21288,
                "name": "ERC20Mintable",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21277,
                "src": "216:13:9"
              },
              "referencedDeclaration": 21277,
              "src": "216:13:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                "typeString": "contract ERC20Mintable"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21293,
            "nodeType": "VariableDeclaration",
            "src": "240:9:9",
            "constant": false,
            "mutability": "mutable",
            "name": "pair",
            "nameLocation": "245:4:9",
            "scope": 21602,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Pair_$21171",
              "typeString": "contract Pair"
            },
            "typeName": {
              "id": 21292,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 21291,
                "name": "Pair",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 21171,
                "src": "240:4:9"
              },
              "referencedDeclaration": 21171,
              "src": "240:4:9",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Pair_$21171",
                "typeString": "contract Pair"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 21350,
            "nodeType": "FunctionDefinition",
            "src": "254:370:9",
            "body": {
              "id": 21349,
              "nodeType": "Block",
              "src": "278:346:9",
              "statements": [
                {
                  "expression": {
                    "id": 21303,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21296,
                      "name": "token0",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21287,
                      "src": "284:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2041",
                          "id": 21300,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "311:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f09e6315c5ad38217b44062a3f60687049dd16848287788aa371e8d009d3a832",
                            "typeString": "literal_string \"Token A\""
                          },
                          "value": "Token A"
                        },
                        {
                          "hexValue": "544b4e41",
                          "id": 21301,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "322:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_b106df192a59a6e11d3e1e835b4738acced3046503f1ad89cda8347e9e310797",
                            "typeString": "literal_string \"TKNA\""
                          },
                          "value": "TKNA"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_f09e6315c5ad38217b44062a3f60687049dd16848287788aa371e8d009d3a832",
                            "typeString": "literal_string \"Token A\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_b106df192a59a6e11d3e1e835b4738acced3046503f1ad89cda8347e9e310797",
                            "typeString": "literal_string \"TKNA\""
                          }
                        ],
                        "id": 21299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "293:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Mintable_$21277_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Mintable)"
                        },
                        "typeName": {
                          "id": 21298,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21297,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21277,
                            "src": "297:13:9"
                          },
                          "referencedDeclaration": 21277,
                          "src": "297:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                            "typeString": "contract ERC20Mintable"
                          }
                        }
                      },
                      "id": 21302,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "293:36:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "284:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 21304,
                  "nodeType": "ExpressionStatement",
                  "src": "284:45:9"
                },
                {
                  "expression": {
                    "id": 21312,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21305,
                      "name": "token1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21290,
                      "src": "335:6:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "546f6b656e2042",
                          "id": 21309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "362:9:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_6eaea0c540aa9592470798498af467c2817b0564eedff6da63a2451dd23f6442",
                            "typeString": "literal_string \"Token B\""
                          },
                          "value": "Token B"
                        },
                        {
                          "hexValue": "544b4e42",
                          "id": 21310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "373:6:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_f9beef676c26f9f1e5d72045de2a8dd7a569eba98dc6de55d4b8cf66b8a7d630",
                            "typeString": "literal_string \"TKNB\""
                          },
                          "value": "TKNB"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_6eaea0c540aa9592470798498af467c2817b0564eedff6da63a2451dd23f6442",
                            "typeString": "literal_string \"Token B\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_f9beef676c26f9f1e5d72045de2a8dd7a569eba98dc6de55d4b8cf66b8a7d630",
                            "typeString": "literal_string \"TKNB\""
                          }
                        ],
                        "id": 21308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "344:17:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_contract$_ERC20Mintable_$21277_$",
                          "typeString": "function (string memory,string memory) returns (contract ERC20Mintable)"
                        },
                        "typeName": {
                          "id": 21307,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21306,
                            "name": "ERC20Mintable",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21277,
                            "src": "348:13:9"
                          },
                          "referencedDeclaration": 21277,
                          "src": "348:13:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                            "typeString": "contract ERC20Mintable"
                          }
                        }
                      },
                      "id": 21311,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "344:36:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                        "typeString": "contract ERC20Mintable"
                      }
                    },
                    "src": "335:45:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                      "typeString": "contract ERC20Mintable"
                    }
                  },
                  "id": 21313,
                  "nodeType": "ExpressionStatement",
                  "src": "335:45:9"
                },
                {
                  "expression": {
                    "id": 21327,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21314,
                      "name": "pair",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21293,
                      "src": "386:4:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pair_$21171",
                        "typeString": "contract Pair"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 21320,
                              "name": "token0",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21287,
                              "src": "410:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 21319,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "402:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21318,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "402:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21321,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "402:15:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 21324,
                              "name": "token1",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21290,
                              "src": "427:6:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                                "typeString": "contract ERC20Mintable"
                              }
                            ],
                            "id": 21323,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "419:7:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 21322,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "419:7:9",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 21325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "419:15:9",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 21317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "393:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_address_$returns$_t_contract$_Pair_$21171_$",
                          "typeString": "function (address,address) returns (contract Pair)"
                        },
                        "typeName": {
                          "id": 21316,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 21315,
                            "name": "Pair",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 21171,
                            "src": "397:4:9"
                          },
                          "referencedDeclaration": 21171,
                          "src": "397:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Pair_$21171",
                            "typeString": "contract Pair"
                          }
                        }
                      },
                      "id": 21326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "393:42:9",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Pair_$21171",
                        "typeString": "contract Pair"
                      }
                    },
                    "src": "386:49:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Pair_$21171",
                      "typeString": "contract Pair"
                    }
                  },
                  "id": 21328,
                  "nodeType": "ExpressionStatement",
                  "src": "386:49:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21332,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "454:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21335,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "472:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PairTest_$21602",
                              "typeString": "contract PairTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PairTest_$21602",
                              "typeString": "contract PairTest"
                            }
                          ],
                          "id": 21334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "464:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21333,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "464:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "464:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21329,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "442:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "442:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "442:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21338,
                  "nodeType": "ExpressionStatement",
                  "src": "442:36:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "3130",
                        "id": 21342,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "496:8:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        "value": "10"
                      },
                      {
                        "arguments": [
                          {
                            "id": 21345,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "514:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_PairTest_$21602",
                              "typeString": "contract PairTest"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_PairTest_$21602",
                              "typeString": "contract PairTest"
                            }
                          ],
                          "id": 21344,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "506:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21343,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "506:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "506:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_10000000000000000000_by_1",
                          "typeString": "int_const 10000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 21339,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "484:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21341,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21276,
                      "src": "484:11:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$_t_address_$returns$__$",
                        "typeString": "function (uint256,address) external"
                      }
                    },
                    "id": 21347,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "484:36:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21348,
                  "nodeType": "ExpressionStatement",
                  "src": "484:36:9"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "263:5:9",
            "parameters": {
              "id": 21294,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "268:2:9"
            },
            "returnParameters": {
              "id": 21295,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "278:0:9"
            },
            "scope": 21602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21378,
            "nodeType": "FunctionDefinition",
            "src": "630:311:9",
            "body": {
              "id": 21377,
              "nodeType": "Block",
              "src": "727:214:9",
              "statements": [
                {
                  "assignments": [
                    21358,
                    21360,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 21358,
                      "mutability": "mutable",
                      "name": "reserve0",
                      "nameLocation": "746:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 21377,
                      "src": "738:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 21357,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "738:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 21360,
                      "mutability": "mutable",
                      "name": "reserve1",
                      "nameLocation": "764:8:9",
                      "nodeType": "VariableDeclaration",
                      "scope": 21377,
                      "src": "756:16:9",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint112",
                        "typeString": "uint112"
                      },
                      "typeName": {
                        "id": 21359,
                        "name": "uint112",
                        "nodeType": "ElementaryTypeName",
                        "src": "756:7:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 21364,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21361,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "778:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21362,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getReserves",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 21098,
                      "src": "778:16:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint112_$_t_uint112_$_t_uint32_$",
                        "typeString": "function () view external returns (uint112,uint112,uint32)"
                      }
                    },
                    "id": 21363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "778:18:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint112_$_t_uint112_$_t_uint32_$",
                      "typeString": "tuple(uint112,uint112,uint32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "737:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21366,
                        "name": "reserve0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21358,
                        "src": "815:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "id": 21367,
                        "name": "expectedReserve0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21352,
                        "src": "825:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "hexValue": "756e6578706563746564207265736572766530",
                        "id": 21368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "843:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_33f1aad64f74e1646ab9537e25b6bfbf604f5a47a4806707b5fe4f9cdb1885c9",
                          "typeString": "literal_string \"unexpected reserve0\""
                        },
                        "value": "unexpected reserve0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_33f1aad64f74e1646ab9537e25b6bfbf604f5a47a4806707b5fe4f9cdb1885c9",
                          "typeString": "literal_string \"unexpected reserve0\""
                        }
                      ],
                      "id": 21365,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "806:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 21369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "806:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21370,
                  "nodeType": "ExpressionStatement",
                  "src": "806:59:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21372,
                        "name": "reserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21360,
                        "src": "884:8:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "id": 21373,
                        "name": "expectedReserve1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21354,
                        "src": "894:16:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        }
                      },
                      {
                        "hexValue": "756e6578706563746564207265736572766531",
                        "id": 21374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "912:21:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c14ab5c2032c504be7319abfce6a2353dcabc63ef68bd8e67a38ff07c8bdaf0f",
                          "typeString": "literal_string \"unexpected reserve1\""
                        },
                        "value": "unexpected reserve1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_uint112",
                          "typeString": "uint112"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c14ab5c2032c504be7319abfce6a2353dcabc63ef68bd8e67a38ff07c8bdaf0f",
                          "typeString": "literal_string \"unexpected reserve1\""
                        }
                      ],
                      "id": 21371,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 539,
                      "src": "875:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (uint256,uint256,string memory)"
                      }
                    },
                    "id": 21375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "875:59:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21376,
                  "nodeType": "ExpressionStatement",
                  "src": "875:59:9"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "assertReserves",
            "nameLocation": "639:14:9",
            "parameters": {
              "id": 21355,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21352,
                  "mutability": "mutable",
                  "name": "expectedReserve0",
                  "nameLocation": "662:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 21378,
                  "src": "654:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 21351,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "654:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 21354,
                  "mutability": "mutable",
                  "name": "expectedReserve1",
                  "nameLocation": "688:16:9",
                  "nodeType": "VariableDeclaration",
                  "scope": 21378,
                  "src": "680:24:9",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint112",
                    "typeString": "uint112"
                  },
                  "typeName": {
                    "id": 21353,
                    "name": "uint112",
                    "nodeType": "ElementaryTypeName",
                    "src": "680:7:9",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint112",
                      "typeString": "uint112"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "653:52:9"
            },
            "returnParameters": {
              "id": 21356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "727:0:9"
            },
            "scope": 21602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 21432,
            "nodeType": "FunctionDefinition",
            "src": "947:318:9",
            "body": {
              "id": 21431,
              "nodeType": "Block",
              "src": "983:282:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21386,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1017:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1009:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21384,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1009:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21387,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1009:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1024:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21381,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "993:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "993:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21389,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21390,
                  "nodeType": "ExpressionStatement",
                  "src": "993:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21396,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1066:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1058:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21394,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1058:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1058:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1073:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21391,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1042:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1042:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1042:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21400,
                  "nodeType": "ExpressionStatement",
                  "src": "1042:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21401,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1092:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1092:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21404,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1092:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21405,
                  "nodeType": "ExpressionStatement",
                  "src": "1092:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21411,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1146:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21410,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1138:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21409,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1138:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1138:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21407,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1123:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1123:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21413,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1123:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        },
                        "id": 21416,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 21414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1154:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1164:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1154:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      ],
                      "id": 21406,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1114:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1114:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21418,
                  "nodeType": "ExpressionStatement",
                  "src": "1114:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 21420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1194:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 21421,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1203:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21419,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21378,
                      "src": "1179:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1179:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21423,
                  "nodeType": "ExpressionStatement",
                  "src": "1179:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21425,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1230:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21426,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "1230:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1230:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1250:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21424,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1221:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1221:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21430,
                  "nodeType": "ExpressionStatement",
                  "src": "1221:37:9"
                }
              ]
            },
            "functionSelector": "0c379e9e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintBootstrap",
            "nameLocation": "956:17:9",
            "parameters": {
              "id": 21379,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:2:9"
            },
            "returnParameters": {
              "id": 21380,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "983:0:9"
            },
            "scope": 21602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21511,
            "nodeType": "FunctionDefinition",
            "src": "1271:469:9",
            "body": {
              "id": 21510,
              "nodeType": "Block",
              "src": "1317:423:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21440,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1351:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21439,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1343:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21438,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1343:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1343:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1358:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21435,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1327:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21437,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1327:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1327:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21444,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21450,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1400:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1392:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21448,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1392:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1392:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21452,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1407:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21445,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1376:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1376:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1376:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21454,
                  "nodeType": "ExpressionStatement",
                  "src": "1376:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21455,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1426:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21457,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1426:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21458,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1426:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21459,
                  "nodeType": "ExpressionStatement",
                  "src": "1426:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21465,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1482:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21464,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1474:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21463,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1474:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21466,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1474:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21467,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1489:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21460,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1458:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21462,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1458:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21468,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1458:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21469,
                  "nodeType": "ExpressionStatement",
                  "src": "1458:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21475,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1531:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1523:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21473,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1523:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1523:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21477,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1538:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21470,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1507:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21472,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1507:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21478,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1507:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21479,
                  "nodeType": "ExpressionStatement",
                  "src": "1507:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21480,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1557:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21482,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1557:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21483,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1557:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21484,
                  "nodeType": "ExpressionStatement",
                  "src": "1557:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21490,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1621:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1613:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21488,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1613:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21491,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1613:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21486,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1598:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1598:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21492,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1598:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        },
                        "id": 21495,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "33",
                          "id": 21493,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1629:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_3000000000000000000_by_1",
                            "typeString": "int_const 3000000000000000000"
                          },
                          "value": "3"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21494,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1639:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1629:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2999999999999999000_by_1",
                          "typeString": "int_const 2999999999999999000"
                        }
                      ],
                      "id": 21485,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1589:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21496,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1589:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21497,
                  "nodeType": "ExpressionStatement",
                  "src": "1589:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 21499,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1663:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21500,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "totalSupply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20376,
                          "src": "1663:16:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 21501,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1663:18:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 21502,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1683:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "id": 21498,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1654:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21503,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1654:37:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21504,
                  "nodeType": "ExpressionStatement",
                  "src": "1654:37:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 21506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1716:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "33",
                        "id": 21507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1725:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        }
                      ],
                      "id": 21505,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21378,
                      "src": "1701:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1701:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21509,
                  "nodeType": "ExpressionStatement",
                  "src": "1701:32:9"
                }
              ]
            },
            "functionSelector": "b528f8d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintWhenTheresLiquidity",
            "nameLocation": "1280:27:9",
            "parameters": {
              "id": 21433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1307:2:9"
            },
            "returnParameters": {
              "id": 21434,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1317:0:9"
            },
            "scope": 21602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 21601,
            "nodeType": "FunctionDefinition",
            "src": "1746:519:9",
            "body": {
              "id": 21600,
              "nodeType": "Block",
              "src": "1783:482:9",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21519,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1817:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21518,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1809:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21517,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1809:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21520,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1809:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21514,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "1793:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1793:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1793:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21523,
                  "nodeType": "ExpressionStatement",
                  "src": "1793:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21529,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1866:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21528,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1858:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21527,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1858:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1858:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1873:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21524,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "1842:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "1842:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1842:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21533,
                  "nodeType": "ExpressionStatement",
                  "src": "1842:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21534,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "1892:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21536,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "1892:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21537,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1892:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21538,
                  "nodeType": "ExpressionStatement",
                  "src": "1892:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21544,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "1955:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1947:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21542,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1947:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21545,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1947:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21540,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "1932:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "1932:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21546,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1932:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        },
                        "id": 21549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "31",
                          "id": 21547,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1963:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "value": "1"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21548,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1973:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "1963:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_999999999999999000_by_1",
                          "typeString": "int_const 999999999999999000"
                        }
                      ],
                      "id": 21539,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "1923:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1923:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21551,
                  "nodeType": "ExpressionStatement",
                  "src": "1923:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 21553,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2003:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "31",
                        "id": 21554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2012:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 21552,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21378,
                      "src": "1988:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21555,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1988:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21556,
                  "nodeType": "ExpressionStatement",
                  "src": "1988:32:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21562,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2055:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21561,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2047:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21560,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2047:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21563,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2047:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 21564,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2062:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21557,
                        "name": "token0",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21287,
                        "src": "2031:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21559,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2031:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2031:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21566,
                  "nodeType": "ExpressionStatement",
                  "src": "2031:39:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 21572,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2104:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          ],
                          "id": 21571,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2096:7:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 21570,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2096:7:9",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 21573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2096:13:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 21574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2111:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 21567,
                        "name": "token1",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21290,
                        "src": "2080:6:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ERC20Mintable_$21277",
                          "typeString": "contract ERC20Mintable"
                        }
                      },
                      "id": 21569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20487,
                      "src": "2080:15:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 21575,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2080:39:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21576,
                  "nodeType": "ExpressionStatement",
                  "src": "2080:39:9"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 21577,
                        "name": "pair",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21293,
                        "src": "2130:4:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Pair_$21171",
                          "typeString": "contract Pair"
                        }
                      },
                      "id": 21579,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 20938,
                      "src": "2130:9:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                        "typeString": "function () external"
                      }
                    },
                    "id": 21580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2130:11:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21581,
                  "nodeType": "ExpressionStatement",
                  "src": "2130:11:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 21587,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "2193:4:9",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_PairTest_$21602",
                                  "typeString": "contract PairTest"
                                }
                              ],
                              "id": 21586,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2185:7:9",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 21585,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2185:7:9",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 21588,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2185:13:9",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 21583,
                            "name": "pair",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21293,
                            "src": "2170:4:9",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Pair_$21171",
                              "typeString": "contract Pair"
                            }
                          },
                          "id": 21584,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 20380,
                          "src": "2170:14:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 21589,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2170:29:9",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        },
                        "id": 21592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "leftExpression": {
                          "hexValue": "32",
                          "id": 21590,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2201:7:9",
                          "subdenomination": "ether",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2000000000000000000_by_1",
                            "typeString": "int_const 2000000000000000000"
                          },
                          "value": "2"
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31303030",
                          "id": 21591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2211:4:9",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000_by_1",
                            "typeString": "int_const 1000"
                          },
                          "value": "1000"
                        },
                        "src": "2201:14:9",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1999999999999999000_by_1",
                          "typeString": "int_const 1999999999999999000"
                        }
                      ],
                      "id": 21582,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2348,
                        2373,
                        2407,
                        2436,
                        320,
                        345,
                        375,
                        400,
                        459,
                        484,
                        514,
                        539,
                        1639,
                        1674
                      ],
                      "referencedDeclaration": 514,
                      "src": "2161:8:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 21593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2161:55:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21594,
                  "nodeType": "ExpressionStatement",
                  "src": "2161:55:9"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 21596,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2241:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        "value": "3"
                      },
                      {
                        "hexValue": "32",
                        "id": 21597,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2250:7:9",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3000000000000000000_by_1",
                          "typeString": "int_const 3000000000000000000"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 21595,
                      "name": "assertReserves",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21378,
                      "src": "2226:14:9",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint112_$_t_uint112_$returns$__$",
                        "typeString": "function (uint112,uint112)"
                      }
                    },
                    "id": 21598,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2226:32:9",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21599,
                  "nodeType": "ExpressionStatement",
                  "src": "2226:32:9"
                }
              ]
            },
            "functionSelector": "bc5759fa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testMintUnbalanced",
            "nameLocation": "1755:18:9",
            "parameters": {
              "id": 21512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1773:2:9"
            },
            "returnParameters": {
              "id": 21513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1783:0:9"
            },
            "scope": 21602,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21283,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2821,
              "src": "183:4:9"
            },
            "id": 21284,
            "nodeType": "InheritanceSpecifier",
            "src": "183:4:9"
          }
        ],
        "canonicalName": "PairTest",
        "contractDependencies": [
          21171,
          21277
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          21602,
          2821,
          1786
        ],
        "name": "PairTest",
        "nameLocation": "171:8:9",
        "scope": 21603,
        "usedErrors": []
      }
    ],
    "license": "UNLICENSED"
  }
}